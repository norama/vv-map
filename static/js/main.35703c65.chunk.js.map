{"version":3,"sources":["util/query.js","util/date.js","chart/configChart.js","chart/manageChart.js","api/fetchWeather.js","components/Loader.js","components/DataChart.js","util/countries.js","util/geo.js","util/promise.js","util/usa.js","api/fetchVirusSpread.js","components/info/LocationVirusInfo.js","components/info/ExternalVirusInfo.js","components/info/References.js","components/CalcChart.js","components/Weather.js","components/parameters/DateRange.js","components/parameters/Location.js","components/Parameters.js","Main.js","serviceWorker.js","index.js"],"names":["Params","name","defaultValue","value","URLSearchParams","START_DATE","format","subMonths","startOfMonth","Date","END_DATE","LONDON_LATLNG","defaultName","query","get","useQueryParams","useLocation","search","location","lat","lng","dateRange","startDate","endDate","DAY","SUMMER_TIME_START","dateMillis","dateString","date","dateStr","getTime","FONT","configCircleBullet","bullet","circle","createChild","am4core","width","height","horizontalCenter","verticalCenter","states","create","properties","scale","configPercentAxis","percentAxis","title","text","fontWeight","fontFamily","max","extraMax","strictMinMax","marginTop","marginBottom","renderer","line","stroke","labels","template","fill","grid","disabled","strokeWidth","createGrid","includeRangesInMinMax","configTemperatureAxis","temperatureAxis","minGridDistance","configHumiditySeries","series","dataFields","dateX","valueY","tooltipText","minBulletDistance","bullets","push","am4charts","configTemperatureDiffAxis","valueAxis","label","range","axisRanges","endValue","strokeOpacity","dx","opposite","dy","adapter","add","target","x","parseInt","createGridWithBullet","baseGrid","createCertain","chart","certain","tooltipContainer","background","fillOpacity","configDateRange","dateFormat","dateAxis","delta","beforeStartDate","subDays","setHours","afterEndDate","addDays","min","tooltipDateFormat","groupData","groupCount","groupIntervals","setAll","timeUnit","count","configDateAxis","xAxes","getIndex","configDataChart","leftAxesContainer","layout","rightAxesContainer","preloader","paddingRight","colors","list","yAxes","temperatureAxis2","temperatureDiffAxis","scrollbarX","minHeight","startLocation","configMinDayTemperatureSeries","yAxis","configMaxDayTemperatureSeries","configTemperatureSeries","configDewPointSeries","mseries","configMeasureSeries","legend","reverseOrder","markerTemplate","markers","position","fontSize","cursor","thumb","parent","bottomAxesContainer","configCalcAxis","calcAxis","configCalcRefAxis","configCalc1Series","configCalc2Series","legendSettings","labelText","data","tooltipDataItem","dataContext","tooltip","measure","propertyFields","configTemperatureDiffBullet","configVirusChart","virAllAxis","logarithmic","virNewAxis","addVirusAxes","configVirusNewSeries","configVirusAllSeries","hidden","legendContainer","topAxesContainer","configEstimateChart","addEstimateAxes","configCloudCoverSeries","measureScale","resetDataChart","zoomToDates","zoomToValues","speedAxis","bulletsContainer","disposeChildren","resetCalcChart","axis","fetchWeather","dateRanges","start","end","isSameMonth","endOfMonth","byMonths","Promise","all","map","fetch","process","then","response","json","responses","reduce","acc","weather","error","console","Loader","size","loading","className","sizeUnit","color","defaultProps","window","onbeforeunload","event","dispose","DataChart","onDataLoaded","useState","setLoading","useEffect","events","on","hide","setTimeout","show","weatherData","catch","alert","JSON","stringify","finally","invalidateData","millis","forEach","day","hourly","hour","item","DewPointC","parseFloat","Humidity","humidity","cloudcover","WeatherPictogram","WindPictogram","weatherDesc","length","weatherIconUrl","winddirDegree","windspeedKmph","mintempC","maxtempC","tempC","visibility","id","ISO_2_TO_3","AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","distance","lon","lat0","lon0","y","toArray","keep","chainSingle","getPromise","promiseCount","spread","Array","keys","index","resolve","allPromise","concurrentCount","Math","i","provinceNames","AK","CT","DC","FL","HI","IA","KS","MI","NV","NH","NJ","NM","NY","ND","OH","OK","OR","RI","TX","UT","VT","WA","WV","WI","WY","AA","AP","cache","identity","transformVirusSpreadCountryTimeline","country","iso3","code","timelineMap","timeline","getFetched","url","key","transform","nearestProvince","provinces","minDist","Number","POSITIVE_INFINITY","res","province","dist","virusSpreadForCountry","startMillis","endMillis","Object","confirmed","new_confirmed","fetchVirusSpreadForProvince","city","dates","datesInRange","ceil","chain","provinceQueryParam","region","cities","confirmed_diff","errorCount","started","getErrorCount","log","fetchCity","regionCities","long","fetchVirusSpread","getResult","population","fetchVirusSpreadResult","countryDefault","countries","trim","fetchCountryCode","find","c","coordinates","latitude","longitude","nearestCountry","filter","iso","p","result","substring","largerProvince","DataBadge","Badge","LocationVirusInfo","toLocaleString","formatPopulation","COUNTRY_MAP","Czechia","USA","PROVINCE_MAP","countryMap","provinceMap","ExternalVirusInfo","href","rel","preventEventPropagation","e","stopPropagation","References","close","popoverOpen","setPopoverOpen","Button","Popover","placement","isOpen","toggle","open","PopoverBody","onClick","Card","CardBody","START_CHARTS","estimate","virus","charts","initCharts","virusChart","estimateChart","topChart","bottomChart","zoomOutButton","minZoomed","maxZoomed","ev","triggerMove","point","configCalcCharts","disposeChart","calc1","temp","wind","vis","rh","calc2","CalcChart","reset","clicks","setClicks","locationVirusInfo","setLocationVirusInfo","incClicks","fetchVirusDataWithEstimates","floor","random","errorJson","locationData","lastDayItem","hourData","dewpoint","virusDay","displayedDate","str","Weather","parameters","setParameters","setData","activeTab","setActiveTab","activateCalc","setActivateCalc","tab","to","Nav","tabs","NavItem","NavLink","type","TabContent","TabPane","tabId","DateRange","onChange","onTogglePopover","outline","showSelectionPreview","moveRangeOnFirstSelection","maxDate","months","direction","ranges","staticRanges","selection","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","Marker","prototype","options","Location","latlng","handleChange","center","zoomControl","zoom","maxZoom","layers","tileLayer","attribution","zoomOut","control","addTo","geocoder","Control","Geocoder","Nominatim","geocoderControl","collapsed","suggestMinLength","placeholder","geocode","_expand","_toggle","_geocode","searchInput","document","querySelector","markGeocode","bbox","latLngBounds","html","results","latLng","focus","reverse","Parameters","newDateRange","setNewDateRange","newLocation","setNewLocation","state","setState","toFixed","getParametersKey","match","ShowOnMatch","children","style","display","ParametersPage","queryParams","WeatherPage","Main","basename","path","exact","rest","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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AI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OChfD,SAASC,GAASve,EAAKwe,EAAKC,EAAMC,GACrC,IAAMha,EAAI1E,EAAMye,EACVE,EAAIH,EAAME,EAChB,OAAOha,EAAEA,EAAIia,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","file":"static/js/main.35703c65.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\r\nimport { format, startOfMonth, subMonths } from 'date-fns';\r\n\r\nclass Params extends URLSearchParams {\r\n\r\n    get(name, defaultValue=null) {\r\n        const value = super.get(name);\r\n        return value !== null ? value : defaultValue;\r\n    }\r\n}\r\n\r\n// A custom hook that builds on useLocation to parse\r\n// the query string for you.\r\nexport function useQuery() {\r\n    return new Params(useLocation().search);\r\n}\r\n\r\nexport const LONDON_NAME = 'London';\r\n\r\n// last 2 months\r\nexport const START_DATE = format(subMonths(startOfMonth(new Date()), 1), 'yyyy-MM-dd');\r\nexport const END_DATE = format(new Date(), 'yyyy-MM-dd');\r\n\r\nexport const LONDON_LATLNG = {\r\n    lat: '51.533',\r\n    lng: '-0.129'\r\n};\r\n\r\nexport function defaultName(query) {\r\n    return query.get(\"lat\") || query.get(\"lng\") ? \"\" : LONDON_NAME;\r\n}\r\n\r\n\r\nexport function useQueryParams() {\r\n\r\n    const query = useQuery();\r\n\r\n    return {\r\n        location: {\r\n            lat: query.get(\"lat\", LONDON_LATLNG.lat),\r\n            lng: query.get(\"lng\", LONDON_LATLNG.lng)\r\n        },\r\n        dateRange: {\r\n            startDate: query.get(\"startDate\", START_DATE),\r\n            endDate: query.get(\"endDate\", END_DATE)\r\n        },\r\n        name: query.get(\"name\", defaultName(query))\r\n    };\r\n};\r\n\r\nfunction get(p, field) {\r\n    return p && p[field] ? p[field] : null;\r\n}\r\n\r\nexport function equals(p1, p2) {\r\n    return get(p1.location, 'lat') === get(p2.location, 'lat') &&\r\n        get(p1.location, 'lng') === get(p2.location, 'lng') &&\r\n        get(p1.dateRange, 'startDate') === get(p2.dateRange, 'startDate') &&\r\n        get(p1.dateRange, 'endDate') === get(p2.dateRange, 'endDate');\r\n}","import { format } from 'date-fns';\r\n\r\nexport const HOUR = 3600000;\r\nexport const TWO_HOURS = 2 * HOUR;\r\nexport const THREE_HOURS = 3 * HOUR;\r\n\r\nexport const DAY = 24 * HOUR;\r\n\r\nexport const SUMMER_TIME_START = dateMillis('2020-03-29');\r\n\r\nexport function dateString(date) {\r\n    return format(date, 'yyyy-MM-dd');\r\n}\r\n\r\nexport function dateMillis(dateStr) {\r\n    return new Date(dateStr+'T00:00:00').getTime();\r\n}\r\n\r\nexport function datesInRange(dateRange) {\r\n    let dates = [];\r\n    const start = dateMillis(dateRange.startDate);\r\n    const end = dateMillis(dateRange.endDate);\r\n    for (let millis = start;\r\n             millis <= end;\r\n             millis += (millis === SUMMER_TIME_START) ? (DAY - HOUR) : DAY) {\r\n\r\n        dates.push(millis);\r\n    }\r\n    return dates;\r\n}","\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\n\r\nimport { addDays, subDays } from 'date-fns';\r\nimport { dateMillis } from '../util/date';\r\n\r\nconst DEGREE = \"\\u00B0\";\r\nconst FONT = \"DejaVu Sans Mono\";\r\n\r\nfunction configCircleBullet(bullet) {\r\n    var circle = bullet.createChild(am4core.Circle);\r\n    circle.width = 5;\r\n    circle.height = 5;\r\n    circle.horizontalCenter = \"middle\";\r\n    circle.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n\r\n/*\r\nfunction configWeatherBullet(bullet) {\r\n    var image = bullet.createChild(am4core.Image);\r\n    image.propertyFields.href = \"weatherIconUrl\";\r\n    // image.tooltipText = \"{desc}\";\r\n\r\n    image.width = 15;\r\n    image.height = 15;\r\n    image.horizontalCenter = \"middle\";\r\n    image.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 3;\r\n}\r\n*/\r\n\r\n/*\r\nfunction configWindBullet(bullet, showSize=true) {\r\n\r\n    // Bind `rotation` property to `angle` field in data\r\n    bullet.propertyFields.rotation = \"winddirDegree\";\r\n\r\n    // Add a triangle to act as am arrow\r\n    var arrow = bullet.createChild(am4core.Triangle);\r\n    arrow.horizontalCenter = \"middle\";\r\n    arrow.verticalCenter = \"bottom\";\r\n    //arrow.stroke = am4core.color(\"#fff\");\r\n    arrow.strokeWidth = 1;\r\n    arrow.strokeOpacity = 0.7;\r\n    arrow.direction = \"top\";\r\n    arrow.scale = 2;\r\n    arrow.width = 5;\r\n    if (showSize) {\r\n        arrow.propertyFields.height = \"windspeedKmph\";\r\n    } else {\r\n        arrow.height = 10;\r\n    }\r\n    arrow.fillOpacity = 0.5;\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n*/\r\n\r\nfunction configTemperatureDiffBullet(bullet) {\r\n    bullet.propertyFields.scale = \"measureScale\";\r\n    bullet.circle.fill = am4core.color(\"white\");\r\n    bullet.circle.stroke = am4core.color(\"red\");\r\n    bullet.circle.strokeWidth = 2;\r\n    bullet.circle.fillOpacity = 0.5;\r\n    bullet.circle.strokeOpacity = 1;\r\n}\r\n\r\nfunction configDateAxis(dateAxis, startDate, endDate, dateFormat, delta=6) {\r\n    dateAxis.renderer.grid.template.disabled = true;\r\n    //dateAxis.renderer.labels.template.disabled = true;\r\n\r\n    let beforeStartDate = subDays(dateMillis(startDate), 1);\r\n    beforeStartDate.setHours(24 - delta);\r\n\r\n    let afterEndDate = addDays(dateMillis(endDate), 1);\r\n    afterEndDate.setHours(delta);\r\n\r\n    dateAxis.min = beforeStartDate.getTime();\r\n    dateAxis.max = afterEndDate.getTime();\r\n    dateAxis.strictMinMax = true;\r\n\r\n    //dateAxis.renderer.labels.template.location = 0.5;\r\n\r\n    dateAxis.tooltipDateFormat = dateFormat;\r\n\r\n    dateAxis.groupData = true;\r\n    dateAxis.groupCount = 300;\r\n    dateAxis.groupIntervals.setAll([\r\n        { timeUnit: \"hour\", count: 1 },\r\n        { timeUnit: \"hour\", count: 3 },\r\n        { timeUnit: \"hour\", count: 6 },\r\n        { timeUnit: \"hour\", count: 12 },\r\n        { timeUnit: \"day\", count: 1 },\r\n        { timeUnit: \"day\", count: 3 },\r\n        { timeUnit: \"day\", count: 6 },\r\n        { timeUnit: \"day\", count: 15 },\r\n        { timeUnit: \"month\", count: 1 },\r\n        { timeUnit: \"year\", count: 1 },\r\n        { timeUnit: \"year\", count: 10 }\r\n    ]);\r\n}\r\n\r\n/*\r\nfunction configPictogramAxis(pictogramAxis) {\r\n    pictogramAxis.renderer.grid.template.disabled = true;\r\n    pictogramAxis.renderer.labels.template.disabled = true;\r\n    pictogramAxis.tooltip.disabled = true;\r\n    pictogramAxis.renderer.baseGrid.disabled = true;\r\n    pictogramAxis.renderer.maxHeight = 60;\r\n    pictogramAxis.min = 0;\r\n    pictogramAxis.max = 3;\r\n    pictogramAxis.renderer.minGridDistance = 10;\r\n}\r\n*/\r\n\r\n/*\r\nfunction configSpeedAxis(speedAxis) {\r\n    speedAxis.title.text = \"Speed (km/h), Dist (km)\";\r\n    speedAxis.title.fontWeight = 700;\r\n    speedAxis.title.fontFamily = FONT\r\n    speedAxis.min = -20;\r\n    speedAxis.max = 120;\r\n    speedAxis.strictMinMax = true;\r\n    speedAxis.renderer.minGridDistance = 30;\r\n}\r\n*/\r\n\r\nfunction configPercentAxis(percentAxis) {\r\n    percentAxis.title.text = \"Percent (%)\";\r\n    percentAxis.title.fontWeight = 700;\r\n    percentAxis.title.fontFamily = FONT;\r\n    //percentAxis.min = 0;\r\n    percentAxis.max = 100;\r\n    //percentAxis.extraMin = 0.2;\r\n    percentAxis.extraMax = 0.1;\r\n    \r\n    percentAxis.strictMinMax = true;\r\n    //percentAxis.renderer.minGridDistance = 50;\r\n\r\n    percentAxis.marginTop = 0;\r\n    percentAxis.marginBottom = 0;\r\n    percentAxis.renderer.line.stroke = am4core.color(\"#0384fc\");\r\n    percentAxis.renderer.labels.template.fill = am4core.color(\"#0384fc\");\r\n    percentAxis.title.fill = am4core.color(\"#0384fc\");\r\n\r\n    percentAxis.renderer.grid.template.disabled = true;\r\n    //percentAxis.renderer.labels.template.disabled = true;\r\n    percentAxis.renderer.grid.template.stroke = am4core.color(\"blue\");\r\n    percentAxis.renderer.grid.template.strokeWidth = 1;\r\n    createGrid(percentAxis, 50);\r\n    createGrid(percentAxis, 100);\r\n\r\n    percentAxis.includeRangesInMinMax = true;\r\n}\r\n\r\nfunction configTemperatureAxis(temperatureAxis) {\r\n    temperatureAxis.title.text = \"Temperature (\" + DEGREE + \"C)\";\r\n    temperatureAxis.title.fontWeight = 700;\r\n    temperatureAxis.title.fontFamily = FONT;\r\n    //temperatureAxis.min = -30;\r\n    //temperatureAxis.max = 40;\r\n    temperatureAxis.strictMinMax = true;\r\n    temperatureAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configMinDayTemperatureSeries(series) {\r\n    series.name = \"Min. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"mintempC\";\r\n    series.tooltipText = \"Min.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configMaxDayTemperatureSeries(series) {\r\n    series.name = \"Max. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"maxtempC\";\r\n    series.tooltipText = \"Max.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configTemperatureSeries(series) {\r\n    series.name = \"Temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"tempC\";\r\n    series.tooltipText = \"Temperature: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configDewPointSeries(series) {\r\n    series.name = \"Dew point\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"DewPointC\";\r\n    series.tooltipText = \"DewPoint: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configHumiditySeries(series) {\r\n    series.name = \"Relative humidity\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"Humidity\";\r\n    series.tooltipText = \"Humidity: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configCloudCoverSeries(series) {\r\n    series.name = \"Cloud cover\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"cloudcover\";\r\n    series.tooltipText = \"Clouds: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\n/*\r\nfunction configWeatherPictogramSeries(series) {\r\n    series.name = \"Weather\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WeatherPictogram\";\r\n    series.dataFields.desc = \"weatherDesc\";\r\n    series.strokeWidth = 0;\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWeatherBullet(bullet);\r\n}\r\n*/\r\n\r\n/*\r\nfunction configWindPictogramSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WindPictogram\";\r\n    series.tooltipText = \"Wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    series.strokeWidth = 0;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet, true);\r\n}\r\n*/\r\n\r\n/*\r\nfunction configWindSpeedSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"windspeedKmph\";\r\n    series.tooltipText = \"Wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet);\r\n    series.strokeWidth = 1;\r\n}\r\n*/\r\n\r\n/*\r\nfunction configVisibilitySeries(series) {\r\n    series.name = \"Visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"visibility\";\r\n    series.tooltipText = \"Visibility: {visibility} km\";\r\n    series.strokeWidth = 3;\r\n    series.strokeOpacity = 0.8;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n*/\r\n\r\nfunction configTemperatureDiffAxis(temperatureAxis) {\r\n    configTemperatureAxis(temperatureAxis);\r\n    temperatureAxis.title.text = \"Dewp - temp (\" + DEGREE + \"C)\";\r\n    //temperatureAxis.strictMinMax = true;\r\n    temperatureAxis.marginTop = 0;\r\n    temperatureAxis.marginBottom = 0;\r\n    temperatureAxis.renderer.line.stroke = am4core.color(\"#1dad91\");\r\n    temperatureAxis.renderer.labels.template.fill = am4core.color(\"#1dad91\");\r\n    temperatureAxis.title.fill = am4core.color(\"#1dad91\");\r\n    temperatureAxis.renderer.grid.template.disabled = true;\r\n    //temperatureAxis.renderer.labels.template.disabled = true;\r\n    createGridWithBullet(temperatureAxis, 0, \"condensation\");\r\n    createGrid(temperatureAxis, -1);\r\n    temperatureAxis.renderer.grid.template.stroke = am4core.color(\"red\");\r\n    temperatureAxis.renderer.grid.template.strokeWidth = 1;\r\n    temperatureAxis.renderer.baseGrid.stroke = am4core.color(\"red\");\r\n    temperatureAxis.renderer.baseGrid.strokeWidth = 2;\r\n\r\n    //temperatureAxis.min = -20;\r\n    //temperatureAxis.max = 0;\r\n    //temperatureAxis.extraMin = 0.2;\r\n    temperatureAxis.extraMax = 0.1;\r\n    temperatureAxis.strictMinMax = true;\r\n\r\n    temperatureAxis.includeRangesInMinMax = true;\r\n\r\n    return temperatureAxis;\r\n}\r\n\r\nexport function createCertain(chart) {\r\n    let certain = chart.tooltipContainer.createChild(am4core.Container);\r\n    certain.background.fill = am4core.color(\"#fff\");\r\n    certain.background.fillOpacity = 1;\r\n    certain.width = am4core.percent(100);\r\n    certain.height = am4core.percent(100);\r\n    return certain;\r\n}\r\n\r\nexport function configDateRange(chart, dateRange, dateFormat) {\r\n    const dateAxis = chart.xAxes.getIndex(0);\r\n    configDateAxis(dateAxis, dateRange.startDate, dateRange.endDate, dateFormat);\r\n}\r\n\r\nexport const configDataChart = (chart) => {\r\n\r\n    chart.leftAxesContainer.layout = \"vertical\";\r\n    chart.rightAxesContainer.layout = \"vertical\";\r\n\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"blue\"),\r\n        am4core.color(\"darkred\"),\r\n        am4core.color(\"#573fd1\"),\r\n        am4core.color(\"green\"),\r\n        am4core.color(\"#0384fc\"),\r\n        am4core.color(\"#1dad91\"),\r\n        am4core.color(\"#6f9ec9\"),\r\n        am4core.color(\"magenta\"),\r\n        am4core.color(\"#6a086e\")\r\n    ];\r\n\r\n    chart.xAxes.push(new am4charts.DateAxis());\r\n/*\r\n    let pictogramAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis);\r\n    pictogramAxis.marginTop = 10;\r\n    pictogramAxis.marginBottom = 10;\r\n*/\r\n    let percentAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPercentAxis(percentAxis);\r\n    percentAxis.marginTop = 0;\r\n    percentAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis);\r\n    temperatureAxis.marginTop = 30;\r\n    temperatureAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis2);\r\n    temperatureAxis2.marginTop = 30;\r\n    temperatureAxis2.marginBottom = 10;\r\n    temperatureAxis2.renderer.opposite = true;\r\n\r\n/*\r\n    let speedAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configSpeedAxis(speedAxis);\r\n    speedAxis.marginTop = 10;\r\n    speedAxis.marginBottom = 10;\r\n    speedAxis.renderer.opposite = true;\r\n    speedAxis.renderer.grid.template.disabled = true;\r\n*/\r\n\r\n    let temperatureDiffAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    temperatureDiffAxis.renderer.opposite = true;\r\n    configTemperatureDiffAxis(temperatureDiffAxis);\r\n\r\n    //percentAxis.syncWithAxis = temperatureDiffAxis;\r\n\r\n/*\r\n    let pictogramAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis2);\r\n    pictogramAxis2.marginTop = 10;\r\n    pictogramAxis2.marginBottom = 10;\r\n    pictogramAxis2.renderer.opposite = true;\r\n*/\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.minHeight = 10;\r\n    //let scrollbarY = new am4charts.XYChartScrollbar();\r\n\r\n    // Min. day temperature\r\n    let series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMinDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Max. day temperature\r\n    series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMaxDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Temperature\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n\r\n    // Dew point\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configDewPointSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Relative humidity\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configHumiditySeries(series);\r\n    series.yAxis = percentAxis;\r\n    //scrollbarX.series.push(series);\r\n    percentAxis.renderer.line.stroke = series.stroke;\r\n    percentAxis.renderer.labels.template.fill = series.stroke;\r\n\r\n/*\r\n    // Cloud cover\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCloudCoverSeries(series);\r\n    series.yAxis = percentAxis;\r\n    percentAxis.title.fill = series.stroke;\r\n    series.hidden = true;\r\n*/\r\n\r\n/*\r\n    // Weather pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWeatherPictogramSeries(series);\r\n    series.yAxis = pictogramAxis;\r\n*/\r\n\r\n/*\r\n    // Wind\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindSpeedSeries(series);\r\n    series.yAxis = speedAxis;\r\n    speedAxis.renderer.line.stroke = series.stroke;\r\n    speedAxis.renderer.labels.template.fill = series.stroke;\r\n    series.hidden = true;\r\n*/\r\n\r\n/*\r\n    // Wind pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindPictogramSeries(series);\r\n    series.yAxis = pictogramAxis2;\r\n*/\r\n\r\n/*\r\n    // Visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configVisibilitySeries(series);\r\n    series.yAxis = speedAxis;\r\n    speedAxis.title.fill = series.stroke;\r\n    series.hidden = true;\r\n*/\r\n\r\n    let mseries = chart.series.push(new am4charts.LineSeries());\r\n    configMeasureSeries(mseries);\r\n    mseries.yAxis = temperatureDiffAxis;\r\n\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    chart.legend.position = \"right\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    chart.scrollbarX = scrollbarX;\r\n    chart.scrollbarX.background.fill = am4core.color(\"#2e3033\");\r\n    chart.scrollbarX.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.thumb.background.fill = am4core.color(\"#848f94\");\r\n    chart.scrollbarX.thumb.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n    //chart.scrollbarY = scrollbarY;\r\n};\r\n\r\nfunction configCalcAxis(calcAxis) {\r\n    calcAxis.title.fontWeight = 700;\r\n    calcAxis.title.fontFamily = FONT;\r\n    calcAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configCalcRefAxis(calcAxis) {\r\n    configCalcAxis(calcAxis);\r\n    calcAxis.title.text = \"Calc (ref below)\";\r\n    calcAxis.marginTop = 0;\r\n    calcAxis.strictMinMax = false;\r\n    calcAxis.marginBottom = 0;\r\n    calcAxis.renderer.line.stroke = am4core.color(\"#edac15\");\r\n    calcAxis.renderer.grid.template.disabled = true;\r\n    calcAxis.renderer.labels.template.disabled = true;\r\n    calcAxis.title.fill = am4core.color(\"#edac15\");\r\n    calcAxis.title.disabled = true;\r\n    calcAxis.renderer.opposite = true;\r\n}\r\n\r\nfunction configCalc1Series(series) {\r\n    series.name = \"with visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"calc1\";\r\n    series.tooltipText = \"calc vis: {calc1}\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configCalc2Series(series) {\r\n    series.name = \"without visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"calc2\";\r\n    series.tooltipText = \"calc: {calc2}\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 10;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configMeasureSeries(series) {\r\n    series.name = \"Dew point - temp\";\r\n    series.legendSettings.labelText = \"Dew point - temp\\n[bold red]o[/] [bold]condensation[/]\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"measure\";\r\n    //series.tooltipText = \"Dew point - temp: {measure}\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.adapter.add('tooltipText', (text, target) => {\r\n        const data = target.tooltipDataItem.dataContext;\r\n        if (!data) {\r\n            return '';\r\n        }\r\n        let tooltip = `DewPoint-Temp: ${data.measure}`;\r\n        if (data.measure === -1) {\r\n            tooltip += \"\\n[red]condensation?[/]\";\r\n        } else if (data.measure >= 0) {\r\n            tooltip += \"\\n[bold red]condensation[/]\";\r\n        }\r\n        return tooltip;\r\n    });\r\n\r\n    let bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    configTemperatureDiffBullet(bullet);\r\n}\r\n\r\nfunction configVirusAllSeries(series) {\r\n    series.name = \"Virus All\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"confirmed\";\r\n    series.tooltipText = \"all confirmed: {confirmed}\";\r\n    series.strokeWidth = 3;\r\n}\r\n\r\nfunction configVirusNewSeries(series) {\r\n    series.name = \"Virus New\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"new_confirmed\";\r\n    series.tooltipText = \"new confirmed: {new_confirmed}\";\r\n    series.strokeWidth = 3;\r\n}\r\n\r\nconst addVirusAxes = (chart) => {\r\n\r\n    let calcAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configCalcRefAxis(calcAxis);\r\n\r\n    let virAllAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configCalcAxis(virAllAxis);\r\n    virAllAxis.title.text = \"Virus All\";\r\n    virAllAxis.marginTop = 0;\r\n    virAllAxis.marginBottom = 0;\r\n    //virAllAxis.renderer.opposite = true;\r\n    virAllAxis.renderer.line.stroke = am4core.color(\"#521d75\");\r\n    virAllAxis.renderer.labels.template.fill = am4core.color(\"#521d75\");\r\n    virAllAxis.title.fill = am4core.color(\"#521d75\");\r\n    virAllAxis.renderer.grid.template.disabled = true;\r\n    virAllAxis.renderer.opposite = true;\r\n    virAllAxis.strictMinMax = true;\r\n    virAllAxis.logarithmic = true;\r\n\r\n    let virNewAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configCalcAxis(virNewAxis);\r\n    virNewAxis.title.text = \"Virus New\";\r\n    virNewAxis.marginTop = 0;\r\n    virNewAxis.marginBottom = 0;\r\n    //virNewAxis.renderer.opposite = true;\r\n    virNewAxis.renderer.line.stroke = am4core.color(\"#2e3033\");\r\n    virNewAxis.renderer.labels.template.fill = am4core.color(\"#2e3033\");\r\n    virNewAxis.title.fill = am4core.color(\"#2e3033\");\r\n    //virNewAxis.min = -10;\r\n    virNewAxis.strictMinMax = true;\r\n\r\n    return { virAllAxis, virNewAxis, calcAxis };\r\n};\r\n\r\nfunction createGrid(valueAxis, value) {\r\n    var range = valueAxis.axisRanges.create();\r\n    range.value = value;\r\n    range.endValue = value;\r\n    range.label.text = \"{value}\";\r\n}\r\n\r\nfunction createGridWithBullet(valueAxis, value, label) {\r\n    var range = valueAxis.axisRanges.create();\r\n    range.value = value;\r\n    range.endValue = value;\r\n    range.bullet = new am4core.Circle();\r\n    range.bullet.fill = am4core.color(\"white\");\r\n    range.bullet.stroke = am4core.color(\"red\");\r\n    range.bullet.strokeOpacity = 0.7;\r\n    range.bullet.strokeWidth = 2;\r\n    range.bullet.width = 10;\r\n    range.bullet.height = 10;\r\n    range.bullet.dx = valueAxis.renderer.opposite ? 30 : -30;\r\n    range.bullet.dy = -1;\r\n\r\n    valueAxis.adapter.add(\"getTooltipText\", function(text, target) {\r\n        var x = parseInt(text);\r\n        return x < value - 1 ? text : \r\n            (x === value - 1 ? text + \": [red]\" + label + \"?[/]\" :\r\n                               text + \": [bold red]\" + label + \"[/]\");\r\n      });\r\n/*\r\n    range.label.text = label;\r\n    range.label.fill = range.bullet.stroke;\r\n    range.label.inside = true;\r\n    range.label.verticalCenter = \"middle\";\r\n    range.label.dx = 180;\r\n    range.label.dy = -2;\r\n*/\r\n/*\r\n    range.axisFill.tooltip = new am4core.Tooltip();\r\n    range.axisFill.tooltipText = \"Condensation\";\r\n    //range.axisFill.tooltipPosition = \"pointer\";\r\n    range.axisFill.interactionsEnabled = true;\r\n    range.axisFill.isMeasured = true;\r\n    range.axisFill.align = \"right\";\r\n    range.axisFill.showTooltipOn = \"always\";\r\n    range.axisFill.fill = am4core.color(\"red\");\r\n    range.axisFill.fillOpacity = 0.8;\r\n    range.axisFill.id = \"CondensationLabel\";\r\n    range.axisFill.location = 1;\r\n    range.axisFill.parent = chart.rightAxesContainer;\r\n*/\r\n }\r\n\r\nconst addEstimateAxes = (chart) => {\r\n\r\n    let calcAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configCalcRefAxis(calcAxis);\r\n\r\n    let percentAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPercentAxis(percentAxis);    \r\n    percentAxis.renderer.opposite = true;\r\n\r\n    let temperatureAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureDiffAxis(temperatureAxis);\r\n\r\n    //percentAxis.syncWithAxis = temperatureAxis;\r\n    //percentAxis.showOnInit = true;\r\n    //temperatureAxis.showOnInit = true;\r\n\r\n    return { percentAxis, temperatureAxis, calcAxis };\r\n};\r\n\r\nconst syncCalcCharts = (topChart, bottomChart) => {\r\n    bottomChart.zoomOutButton.events.on(\"hit\", zoomOut);\r\n\r\n    function zoomOut(event) {\r\n        let dateAxis = topChart.xAxes.getIndex(0);\r\n        dateAxis.zoomToDates(dateAxis.min, dateAxis.max);\r\n    }\r\n\r\n    let dateAxis = bottomChart.xAxes.getIndex(0);\r\n    dateAxis.events.on(\"selectionextremeschanged\", syncZoom);\r\n\r\n    function syncZoom(event) {\r\n        let dateAxis = topChart.xAxes.getIndex(0);\r\n        dateAxis.zoomToDates(event.target.minZoomed, event.target.maxZoomed);\r\n    }\r\n/*\r\n    for (const series of topChart.series) {\r\n        series.tooltip.pointerOrientation = \"left\";\r\n    }\r\n    for (const series of bottomChart.series) {\r\n        series.tooltip.pointerOrientation = \"right\";\r\n    }\r\n*/\r\n    bottomChart.cursor.events.on(\"cursorpositionchanged\", function(ev) {\r\n        topChart.cursor.triggerMove(ev.target.point, \"none\", true);\r\n    });\r\n};\r\n\r\nconst configVirusChart = (chart) => {\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"#2e3033\"),\r\n        am4core.color(\"#521d75\"),\r\n        am4core.color(\"#edac15\"),\r\n        am4core.color(\"#e84900\"),\r\n    ];\r\n\r\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.opposite = true;\r\n    dateAxis.renderer.labels.template.disabled = true;\r\n\r\n    const { virAllAxis, virNewAxis, calcAxis } = addVirusAxes(chart);\r\n\r\n    // Virus new\r\n    let mseries = chart.series.push(new am4charts.StepLineSeries());\r\n    configVirusNewSeries(mseries);\r\n    mseries.yAxis = virNewAxis;\r\n\r\n    // Virus all\r\n    let series = chart.series.push(new am4charts.StepLineSeries());\r\n    configVirusAllSeries(series);\r\n    series.yAxis = virAllAxis;\r\n    series.hidden = true;\r\n\r\n    // Calc with visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc1Series(series);\r\n    series.yAxis = calcAxis;\r\n    series.hidden = true;\r\n\r\n    // Calc without visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc2Series(series);\r\n    series.yAxis = calcAxis;\r\n    series.hidden = true;\r\n\r\n    let legendContainer = am4core.create(\"topLegend\", am4core.Container);\r\n    legendContainer.width = am4core.percent(100);\r\n    legendContainer.height = 30;\r\n\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.parent = legendContainer;\r\n    //chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    chart.legend.position = \"top\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n    /*\r\n    chart.cursor.xAxis = dateAxis;\r\n    chart.cursor.fullWidthLineX = true;\r\n    chart.cursor.lineX.strokeWidth = 0;\r\n    chart.cursor.lineX.fill = am4core.color(\"#848f94\");\r\n    chart.cursor.lineX.fillOpacity = 0.1;\r\n    */\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.minHeight = 10;\r\n    scrollbarX.series.push(mseries);\r\n    chart.scrollbarX = scrollbarX;\r\n    chart.scrollbarX.background.fill = am4core.color(\"#2e3033\");\r\n    chart.scrollbarX.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.thumb.background.fill = am4core.color(\"#848f94\");\r\n    chart.scrollbarX.thumb.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.parent = chart.topAxesContainer;\r\n\r\n    chart.rightAxesContainer.width = 100;\r\n    chart.leftAxesContainer.width = 100;\r\n};\r\n\r\nconst configEstimateChart = (chart) => {\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"#1dad91\"),\r\n        am4core.color(\"#0384fc\"),\r\n        am4core.color(\"#6f9ec9\"),\r\n        am4core.color(\"#edac15\"),\r\n        am4core.color(\"#e84900\"),\r\n    ];\r\n\r\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.labels.template.disabled = true;\r\n\r\n    const { percentAxis, temperatureAxis, calcAxis } = addEstimateAxes(chart);\r\n\r\n    // measure: temperature - dewpoint\r\n    let mseries = chart.series.push(new am4charts.LineSeries());\r\n    configMeasureSeries(mseries);\r\n    mseries.yAxis = temperatureAxis;\r\n\r\n    // relative humidity\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    configHumiditySeries(series);\r\n    series.yAxis = percentAxis;\r\n    series.hidden = true;\r\n\r\n    // Cloud cover\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCloudCoverSeries(series);\r\n    series.yAxis = percentAxis;\r\n    series.hidden = true;\r\n\r\n    // Calc with visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc1Series(series);\r\n    series.yAxis = calcAxis;\r\n    series.hidden = true;\r\n\r\n    // Calc without visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc2Series(series);\r\n    series.yAxis = calcAxis;\r\n    series.hidden = true;\r\n\r\n    let legendContainer = am4core.create(\"bottomLegend\", am4core.Container);\r\n    legendContainer.width = am4core.percent(100);\r\n    legendContainer.height = 30;\r\n\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.parent = legendContainer;\r\n    //chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    chart.legend.position = \"bottom\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.minHeight = 10;\r\n    scrollbarX.series.push(mseries);\r\n    chart.scrollbarX = scrollbarX;\r\n    chart.scrollbarX.background.fill = am4core.color(\"#cc6e21\");\r\n    chart.scrollbarX.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.thumb.background.fill = am4core.color(\"#1d997a\");\r\n    chart.scrollbarX.thumb.background.fillOpacity = 0.2;\r\n    chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n\r\n    chart.rightAxesContainer.width = 100;\r\n    chart.leftAxesContainer.width = 100;\r\n};\r\n\r\nexport const configCalcCharts = (virusChart, estimateChart) => {\r\n\r\n    configVirusChart(virusChart);\r\n    configEstimateChart(estimateChart);\r\n\r\n    syncCalcCharts(virusChart, estimateChart);\r\n}\r\n\r\nexport const measureScale = (measure) => (\r\n    measure >= 0 ? 2 : (measure === -1 ? 1 : 0)\r\n); ","import { configDateRange } from './configChart';\r\n\r\nconst DATE_FORMAT = \"MM-dd:HH\";\r\n\r\nexport const resetDataChart = (chart, dateRange) => {\r\n    configDateRange(chart, dateRange, DATE_FORMAT);\r\n\r\n    let dateAxis = chart.xAxes.getIndex(0);\r\n    dateAxis.zoomToDates(new Date(dateRange.startDate), new Date(dateRange.endDate));\r\n    dateAxis.zoomToDates(dateAxis.min, dateAxis.max);\r\n\r\n    // workaround to display axis ranges properly\r\n    const percentAxis = chart.yAxes.getIndex(0);\r\n    percentAxis.zoomToValues(percentAxis.min + 1, percentAxis.max - 1);\r\n    const speedAxis = chart.yAxes.getIndex(3);\r\n    speedAxis.zoomToValues(speedAxis.min + 1, speedAxis.max - 1);\r\n\r\n    for (const series of chart.series) {\r\n        series.bulletsContainer.disposeChildren()\r\n    }\r\n};\r\n\r\nexport const resetCalcChart = (chart, dateRange, delta) => {\r\n    configDateRange(chart, dateRange, DATE_FORMAT, delta);\r\n\r\n    let dateAxis = chart.xAxes.getIndex(0);\r\n    dateAxis.zoomToDates(new Date(dateRange.startDate), new Date(dateRange.endDate));\r\n    dateAxis.zoomToDates(dateAxis.min, dateAxis.max);\r\n\r\n    // workaround for percent axis\r\n    const axis = chart.yAxes.getIndex(0);\r\n    if (axis.title.text === \"Percent (%)\") {\r\n        axis.zoomToValues(axis.min + 1, axis.max - 1);\r\n    }\r\n\r\n    for (const series of chart.series) {\r\n        series.bulletsContainer.disposeChildren()\r\n    }\r\n};","import { isSameMonth, endOfMonth, addDays } from 'date-fns';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nfunction byMonths(dateRange) {\r\n    let dateRanges = [];\r\n    let start = new Date(dateRange.startDate);\r\n    let end = new Date(dateRange.endDate);\r\n\r\n    while (!isSameMonth(start, end)) {\r\n        let x = endOfMonth(start);\r\n        dateRanges.push({ startDate: dateString(start), endDate: dateString(x) });\r\n        start = addDays(x, 1);\r\n    }\r\n    dateRanges.push({ startDate: dateString(start), endDate: dateString(end) });\r\n\r\n    return dateRanges;\r\n}\r\n\r\nfunction fetchWeather(location, dateRange) {\r\n    const dateRanges = byMonths(dateRange);\r\n\r\n    return Promise.all(dateRanges.map((dateRange) => (\r\n        fetch(`${process.env.REACT_APP_WEATHER_URL}?key=${process.env.REACT_APP_WEATHER_KEY}` + '&' +\r\n            `q=${location.lat+','+location.lng}` + '&' +\r\n            `format=json` + '&' +\r\n            `date=${dateRange.startDate}&enddate=${dateRange.endDate}`\r\n        ).then((response) => (response.json()))\r\n    ))).then((responses) => (\r\n        responses.reduce((acc, response) => {\r\n            if (response.data.weather) {\r\n                acc.push(...response.data.weather);\r\n            } else if (response.data.error) {\r\n                const error = response.data.error;\r\n                console.error(error);\r\n                throw error;\r\n            }\r\n            return acc;\r\n        }, [])\r\n    ));\r\n}\r\n\r\nexport default fetchWeather;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DotLoader } from 'react-spinners';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = ({ size, loading }) => {\r\n\r\n    return (\r\n        <div className=\"__Loader__\">\r\n            <DotLoader\r\n                sizeUnit={\"px\"}\r\n                color={'#5ac584'}\r\n                size={size}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nLoader.defaultProps = {\r\n    size: 200,\r\n    loading: false\r\n};\r\n\r\nLoader.propTypes = {\r\n    size: PropTypes.number,\r\n    loading: PropTypes.bool\r\n};\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\n//import theme from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nimport { configDataChart, createCertain, measureScale } from '../chart/configChart';\r\nimport { resetDataChart } from '../chart/manageChart';\r\n\r\nimport { dateMillis } from '../util/date';\r\n\r\nimport fetchWeather from '../api/fetchWeather';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport './Chart.css';\r\n\r\nimport { TWO_HOURS, THREE_HOURS, SUMMER_TIME_START } from '../util/date';\r\n\r\n//am4core.useTheme(theme);\r\n\r\nlet chart = null;\r\nlet certain = null;\r\n\r\nwindow.onbeforeunload = function(event) {\r\n    if (chart) {\r\n        chart.dispose();\r\n        chart = null;\r\n    }\r\n};\r\n\r\nconst DataChart = ({ location, dateRange, onDataLoaded }) => {\r\n\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!location || !dateRange) {\r\n            return;\r\n        }\r\n\r\n        // console.log('location: [' + location.lat + ', ' + location.lng + '], dateRange: ' + dateRange.startDate + ' - ' + dateRange.endDate);\r\n\r\n        if (chart === null) {\r\n            // console.log('---> CREATING CHART')\r\n            chart = am4core.create(\"dataChart\", am4charts.XYChart);\r\n            certain = createCertain(chart);\r\n\r\n            configDataChart(chart);\r\n\r\n            chart.events.on(\"datavalidated\", function () {\r\n                setLoading(false);\r\n                certain.hide();\r\n                setTimeout(() => {\r\n                    onDataLoaded(chart.data);\r\n                }, 1000);\r\n            });\r\n        }\r\n\r\n        certain.show();\r\n        setLoading(true);\r\n\r\n        fetchWeather(location, dateRange).then((weather) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetDataChart(chart, dateRange, true);\r\n            chart.data = weatherData(weather);\r\n        }).catch((error) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetDataChart(chart, dateRange, true);\r\n            chart.data = [];\r\n\r\n            alert(JSON.stringify(error));\r\n        }).finally(() => {\r\n            chart.invalidateData();\r\n        });\r\n\r\n    }, [ location.lat, location.lng, dateRange.startDate, dateRange.endDate ]);\r\n\r\n    const weatherData = (weather) => {\r\n\r\n        let data = [];\r\n        let millis = 0;\r\n\r\n        weather.forEach((day) => {\r\n            if (millis === 0) {\r\n                millis = dateMillis(day.date);\r\n            }\r\n\r\n            day.hourly.forEach((hour) => {\r\n                let item = {\r\n                    date: millis,\r\n                    DewPointC: parseFloat(hour.DewPointC),\r\n                    Humidity: parseFloat(hour.humidity),\r\n                    cloudcover: parseFloat(hour.cloudcover),\r\n                    WeatherPictogram: 2,\r\n                    WindPictogram: 1,\r\n                    weatherDesc: hour.weatherDesc.length ? hour.weatherDesc[0].value : '',\r\n                    weatherIconUrl: hour.weatherIconUrl.length ? hour.weatherIconUrl[0].value : null,\r\n                    winddirDegree: parseFloat(hour.winddirDegree),\r\n                    windspeedKmph: parseFloat(hour.windspeedKmph),\r\n                    mintempC: parseFloat(day.mintempC),\r\n                    maxtempC: parseFloat(day.maxtempC),\r\n                    tempC: parseFloat(hour.tempC),\r\n                    visibility: parseFloat(hour.visibility),\r\n                    measure: parseFloat(hour.DewPointC) - parseFloat(hour.tempC),\r\n                };\r\n                const measure = item.DewPointC - item.tempC;\r\n                item.measure = measure;\r\n                item.measureScale = measureScale(measure);\r\n                data.push(item);\r\n                if (millis === SUMMER_TIME_START) {\r\n                    millis += TWO_HOURS;\r\n                } else {\r\n                    millis += THREE_HOURS;\r\n                }\r\n            });\r\n        });\r\n\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <div className=\"__Chart__\">\r\n            <Loader loading={loading} />\r\n            <div id=\"dataChart\" className=\"chart\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDataChart.propTypes = {\r\n    location: PropTypes.shape({\r\n        lat: PropTypes.string.isRequired,\r\n        lng: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    dateRange: PropTypes.shape({\r\n        startDate: PropTypes.string.isRequired, // 'yyyy-MM-dd'\r\n        endDate: PropTypes.string.isRequired    // 'yyyy-MM-dd'\r\n    }).isRequired,\r\n    onDataLoaded: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DataChart;","// source: https://gist.github.com/tadast/8827699\r\n\r\n// [\"Country\",\"Alpha-2code\",\"Alpha-3code\",\"Numericcode\",\"Latitude(average)\",\"Longitude(average)\"],\r\nexport const COUNTRIES = [\r\n    [\"Afghanistan\",\"AF\",\"AFG\",\"4\",\"33\",\"65\"],\r\n    [\"Albania\",\"AL\",\"ALB\",\"8\",\"41\",\"20\"],\r\n    [\"Algeria\",\"DZ\",\"DZA\",\"12\",\"28\",\"3\"],\r\n    [\"AmericanSamoa\",\"AS\",\"ASM\",\"16\",\"-14.3333\",\"-170\"],\r\n    [\"Andorra\",\"AD\",\"AND\",\"20\",\"42.5\",\"1.6\"],\r\n    [\"Angola\",\"AO\",\"AGO\",\"24\",\"-12.5\",\"18.5\"],\r\n    [\"Anguilla\",\"AI\",\"AIA\",\"660\",\"18.25\",\"-63.1667\"],\r\n    [\"Antarctica\",\"AQ\",\"ATA\",\"10\",\"-90\",\"0\"],\r\n    [\"AntiguaandBarbuda\",\"AG\",\"ATG\",\"28\",\"17.05\",\"-61.8\"],\r\n    [\"Argentina\",\"AR\",\"ARG\",\"32\",\"-34\",\"-64\"],\r\n    [\"Armenia\",\"AM\",\"ARM\",\"51\",\"40\",\"45\"],\r\n    [\"Aruba\",\"AW\",\"ABW\",\"533\",\"12.5\",\"-69.9667\"],\r\n    [\"Australia\",\"AU\",\"AUS\",\"36\",\"-27\",\"133\"],\r\n    [\"Austria\",\"AT\",\"AUT\",\"40\",\"47.3333\",\"13.3333\"],\r\n    [\"Azerbaijan\",\"AZ\",\"AZE\",\"31\",\"40.5\",\"47.5\"],\r\n    [\"Bahamas\",\"BS\",\"BHS\",\"44\",\"24.25\",\"-76\"],\r\n    [\"Bahrain\",\"BH\",\"BHR\",\"48\",\"26\",\"50.55\"],\r\n    [\"Bangladesh\",\"BD\",\"BGD\",\"50\",\"24\",\"90\"],\r\n    [\"Barbados\",\"BB\",\"BRB\",\"52\",\"13.1667\",\"-59.5333\"],\r\n    [\"Belarus\",\"BY\",\"BLR\",\"112\",\"53\",\"28\"],\r\n    [\"Belgium\",\"BE\",\"BEL\",\"56\",\"50.8333\",\"4\"],\r\n    [\"Belize\",\"BZ\",\"BLZ\",\"84\",\"17.25\",\"-88.75\"],\r\n    [\"Benin\",\"BJ\",\"BEN\",\"204\",\"9.5\",\"2.25\"],\r\n    [\"Bermuda\",\"BM\",\"BMU\",\"60\",\"32.3333\",\"-64.75\"],\r\n    [\"Bhutan\",\"BT\",\"BTN\",\"64\",\"27.5\",\"90.5\"],\r\n    [\"Bolivia,PlurinationalStateof\",\"BO\",\"BOL\",\"68\",\"-17\",\"-65\"],\r\n    [\"Bolivia\",\"BO\",\"BOL\",\"68\",\"-17\",\"-65\"],\r\n    [\"BosniaandHerzegovina\",\"BA\",\"BIH\",\"70\",\"44\",\"18\"],\r\n    [\"Botswana\",\"BW\",\"BWA\",\"72\",\"-22\",\"24\"],\r\n    [\"BouvetIsland\",\"BV\",\"BVT\",\"74\",\"-54.4333\",\"3.4\"],\r\n    [\"Brazil\",\"BR\",\"BRA\",\"76\",\"-10\",\"-55\"],\r\n    [\"BritishIndianOceanTerritory\",\"IO\",\"IOT\",\"86\",\"-6\",\"71.5\"],\r\n    [\"BruneiDarussalam\",\"BN\",\"BRN\",\"96\",\"4.5\",\"114.6667\"],\r\n    [\"Brunei\",\"BN\",\"BRN\",\"96\",\"4.5\",\"114.6667\"],\r\n    [\"Bulgaria\",\"BG\",\"BGR\",\"100\",\"43\",\"25\"],\r\n    [\"BurkinaFaso\",\"BF\",\"BFA\",\"854\",\"13\",\"-2\"],\r\n    [\"Burundi\",\"BI\",\"BDI\",\"108\",\"-3.5\",\"30\"],\r\n    [\"Cambodia\",\"KH\",\"KHM\",\"116\",\"13\",\"105\"],\r\n    [\"Cameroon\",\"CM\",\"CMR\",\"120\",\"6\",\"12\"],\r\n    [\"Canada\",\"CA\",\"CAN\",\"124\",\"60\",\"-95\"],\r\n    [\"CapeVerde\",\"CV\",\"CPV\",\"132\",\"16\",\"-24\"],\r\n    [\"CaymanIslands\",\"KY\",\"CYM\",\"136\",\"19.5\",\"-80.5\"],\r\n    [\"CentralAfricanRepublic\",\"CF\",\"CAF\",\"140\",\"7\",\"21\"],\r\n    [\"Chad\",\"TD\",\"TCD\",\"148\",\"15\",\"19\"],\r\n    [\"Chile\",\"CL\",\"CHL\",\"152\",\"-30\",\"-71\"],\r\n    [\"China\",\"CN\",\"CHN\",\"156\",\"35\",\"105\"],\r\n    [\"ChristmasIsland\",\"CX\",\"CXR\",\"162\",\"-10.5\",\"105.6667\"],\r\n    [\"Cocos(Keeling)Islands\",\"CC\",\"CCK\",\"166\",\"-12.5\",\"96.8333\"],\r\n    [\"Colombia\",\"CO\",\"COL\",\"170\",\"4\",\"-72\"],\r\n    [\"Comoros\",\"KM\",\"COM\",\"174\",\"-12.1667\",\"44.25\"],\r\n    [\"Congo\",\"CG\",\"COG\",\"178\",\"-1\",\"15\"],\r\n    [\"Congo,theDemocraticRepublicofthe\",\"CD\",\"COD\",\"180\",\"0\",\"25\"],\r\n    [\"CookIslands\",\"CK\",\"COK\",\"184\",\"-21.2333\",\"-159.7667\"],\r\n    [\"CostaRica\",\"CR\",\"CRI\",\"188\",\"10\",\"-84\"],\r\n    [\"Côted'Ivoire\",\"CI\",\"CIV\",\"384\",\"8\",\"-5\"],\r\n    [\"IvoryCoast\",\"CI\",\"CIV\",\"384\",\"8\",\"-5\"],\r\n    [\"Croatia\",\"HR\",\"HRV\",\"191\",\"45.1667\",\"15.5\"],\r\n    [\"Cuba\",\"CU\",\"CUB\",\"192\",\"21.5\",\"-80\"],\r\n    [\"Cyprus\",\"CY\",\"CYP\",\"196\",\"35\",\"33\"],\r\n    [\"CzechRepublic\",\"CZ\",\"CZE\",\"203\",\"49.75\",\"15.5\"],\r\n    [\"Denmark\",\"DK\",\"DNK\",\"208\",\"56\",\"10\"],\r\n    [\"Djibouti\",\"DJ\",\"DJI\",\"262\",\"11.5\",\"43\"],\r\n    [\"Dominica\",\"DM\",\"DMA\",\"212\",\"15.4167\",\"-61.3333\"],\r\n    [\"DominicanRepublic\",\"DO\",\"DOM\",\"214\",\"19\",\"-70.6667\"],\r\n    [\"Ecuador\",\"EC\",\"ECU\",\"218\",\"-2\",\"-77.5\"],\r\n    [\"Egypt\",\"EG\",\"EGY\",\"818\",\"27\",\"30\"],\r\n    [\"ElSalvador\",\"SV\",\"SLV\",\"222\",\"13.8333\",\"-88.9167\"],\r\n    [\"EquatorialGuinea\",\"GQ\",\"GNQ\",\"226\",\"2\",\"10\"],\r\n    [\"Eritrea\",\"ER\",\"ERI\",\"232\",\"15\",\"39\"],\r\n    [\"Estonia\",\"EE\",\"EST\",\"233\",\"59\",\"26\"],\r\n    [\"Ethiopia\",\"ET\",\"ETH\",\"231\",\"8\",\"38\"],\r\n    [\"FalklandIslands(Malvinas)\",\"FK\",\"FLK\",\"238\",\"-51.75\",\"-59\"],\r\n    [\"FaroeIslands\",\"FO\",\"FRO\",\"234\",\"62\",\"-7\"],\r\n    [\"Fiji\",\"FJ\",\"FJI\",\"242\",\"-18\",\"175\"],\r\n    [\"Finland\",\"FI\",\"FIN\",\"246\",\"64\",\"26\"],\r\n    [\"France\",\"FR\",\"FRA\",\"250\",\"46\",\"2\"],\r\n    [\"FrenchGuiana\",\"GF\",\"GUF\",\"254\",\"4\",\"-53\"],\r\n    [\"FrenchPolynesia\",\"PF\",\"PYF\",\"258\",\"-15\",\"-140\"],\r\n    [\"FrenchSouthernTerritories\",\"TF\",\"ATF\",\"260\",\"-43\",\"67\"],\r\n    [\"Gabon\",\"GA\",\"GAB\",\"266\",\"-1\",\"11.75\"],\r\n    [\"Gambia\",\"GM\",\"GMB\",\"270\",\"13.4667\",\"-16.5667\"],\r\n    [\"Georgia\",\"GE\",\"GEO\",\"268\",\"42\",\"43.5\"],\r\n    [\"Germany\",\"DE\",\"DEU\",\"276\",\"51\",\"9\"],\r\n    [\"Ghana\",\"GH\",\"GHA\",\"288\",\"8\",\"-2\"],\r\n    [\"Gibraltar\",\"GI\",\"GIB\",\"292\",\"36.1833\",\"-5.3667\"],\r\n    [\"Greece\",\"GR\",\"GRC\",\"300\",\"39\",\"22\"],\r\n    [\"Greenland\",\"GL\",\"GRL\",\"304\",\"72\",\"-40\"],\r\n    [\"Grenada\",\"GD\",\"GRD\",\"308\",\"12.1167\",\"-61.6667\"],\r\n    [\"Guadeloupe\",\"GP\",\"GLP\",\"312\",\"16.25\",\"-61.5833\"],\r\n    [\"Guam\",\"GU\",\"GUM\",\"316\",\"13.4667\",\"144.7833\"],\r\n    [\"Guatemala\",\"GT\",\"GTM\",\"320\",\"15.5\",\"-90.25\"],\r\n    [\"Guernsey\",\"GG\",\"GGY\",\"831\",\"49.5\",\"-2.56\"],\r\n    [\"Guinea\",\"GN\",\"GIN\",\"324\",\"11\",\"-10\"],\r\n    [\"Guinea-Bissau\",\"GW\",\"GNB\",\"624\",\"12\",\"-15\"],\r\n    [\"Guyana\",\"GY\",\"GUY\",\"328\",\"5\",\"-59\"],\r\n    [\"Haiti\",\"HT\",\"HTI\",\"332\",\"19\",\"-72.4167\"],\r\n    [\"HeardIslandandMcDonaldIslands\",\"HM\",\"HMD\",\"334\",\"-53.1\",\"72.5167\"],\r\n    [\"HolySee(VaticanCityState)\",\"VA\",\"VAT\",\"336\",\"41.9\",\"12.45\"],\r\n    [\"Honduras\",\"HN\",\"HND\",\"340\",\"15\",\"-86.5\"],\r\n    [\"HongKong\",\"HK\",\"HKG\",\"344\",\"22.25\",\"114.1667\"],\r\n    [\"Hungary\",\"HU\",\"HUN\",\"348\",\"47\",\"20\"],\r\n    [\"Iceland\",\"IS\",\"ISL\",\"352\",\"65\",\"-18\"],\r\n    [\"India\",\"IN\",\"IND\",\"356\",\"20\",\"77\"],\r\n    [\"Indonesia\",\"ID\",\"IDN\",\"360\",\"-5\",\"120\"],\r\n    [\"Iran,IslamicRepublicof\",\"IR\",\"IRN\",\"364\",\"32\",\"53\"],\r\n    [\"Iraq\",\"IQ\",\"IRQ\",\"368\",\"33\",\"44\"],\r\n    [\"Ireland\",\"IE\",\"IRL\",\"372\",\"53\",\"-8\"],\r\n    [\"IsleofMan\",\"IM\",\"IMN\",\"833\",\"54.23\",\"-4.55\"],\r\n    [\"Israel\",\"IL\",\"ISR\",\"376\",\"31.5\",\"34.75\"],\r\n    [\"Italy\",\"IT\",\"ITA\",\"380\",\"42.8333\",\"12.8333\"],\r\n    [\"Jamaica\",\"JM\",\"JAM\",\"388\",\"18.25\",\"-77.5\"],\r\n    [\"Japan\",\"JP\",\"JPN\",\"392\",\"36\",\"138\"],\r\n    [\"Jersey\",\"JE\",\"JEY\",\"832\",\"49.21\",\"-2.13\"],\r\n    [\"Jordan\",\"JO\",\"JOR\",\"400\",\"31\",\"36\"],\r\n    [\"Kazakhstan\",\"KZ\",\"KAZ\",\"398\",\"48\",\"68\"],\r\n    [\"Kenya\",\"KE\",\"KEN\",\"404\",\"1\",\"38\"],\r\n    [\"Kiribati\",\"KI\",\"KIR\",\"296\",\"1.4167\",\"173\"],\r\n    [\"Korea,DemocraticPeople'sRepublicof\",\"KP\",\"PRK\",\"408\",\"40\",\"127\"],\r\n    [\"Korea,Republicof\",\"KR\",\"KOR\",\"410\",\"37\",\"127.5\"],\r\n    [\"SouthKorea\",\"KR\",\"KOR\",\"410\",\"37\",\"127.5\"],\r\n    [\"Kuwait\",\"KW\",\"KWT\",\"414\",\"29.3375\",\"47.6581\"],\r\n    [\"Kyrgyzstan\",\"KG\",\"KGZ\",\"417\",\"41\",\"75\"],\r\n    [\"LaoPeople'sDemocraticRepublic\",\"LA\",\"LAO\",\"418\",\"18\",\"105\"],\r\n    [\"Latvia\",\"LV\",\"LVA\",\"428\",\"57\",\"25\"],\r\n    [\"Lebanon\",\"LB\",\"LBN\",\"422\",\"33.8333\",\"35.8333\"],\r\n    [\"Lesotho\",\"LS\",\"LSO\",\"426\",\"-29.5\",\"28.5\"],\r\n    [\"Liberia\",\"LR\",\"LBR\",\"430\",\"6.5\",\"-9.5\"],\r\n    [\"LibyanArabJamahiriya\",\"LY\",\"LBY\",\"434\",\"25\",\"17\"],\r\n    [\"Libya\",\"LY\",\"LBY\",\"434\",\"25\",\"17\"],\r\n    [\"Liechtenstein\",\"LI\",\"LIE\",\"438\",\"47.1667\",\"9.5333\"],\r\n    [\"Lithuania\",\"LT\",\"LTU\",\"440\",\"56\",\"24\"],\r\n    [\"Luxembourg\",\"LU\",\"LUX\",\"442\",\"49.75\",\"6.1667\"],\r\n    [\"Macao\",\"MO\",\"MAC\",\"446\",\"22.1667\",\"113.55\"],\r\n    [\"Macedonia,theformerYugoslavRepublicof\",\"MK\",\"MKD\",\"807\",\"41.8333\",\"22\"],\r\n    [\"Madagascar\",\"MG\",\"MDG\",\"450\",\"-20\",\"47\"],\r\n    [\"Malawi\",\"MW\",\"MWI\",\"454\",\"-13.5\",\"34\"],\r\n    [\"Malaysia\",\"MY\",\"MYS\",\"458\",\"2.5\",\"112.5\"],\r\n    [\"Maldives\",\"MV\",\"MDV\",\"462\",\"3.25\",\"73\"],\r\n    [\"Mali\",\"ML\",\"MLI\",\"466\",\"17\",\"-4\"],\r\n    [\"Malta\",\"MT\",\"MLT\",\"470\",\"35.8333\",\"14.5833\"],\r\n    [\"MarshallIslands\",\"MH\",\"MHL\",\"584\",\"9\",\"168\"],\r\n    [\"Martinique\",\"MQ\",\"MTQ\",\"474\",\"14.6667\",\"-61\"],\r\n    [\"Mauritania\",\"MR\",\"MRT\",\"478\",\"20\",\"-12\"],\r\n    [\"Mauritius\",\"MU\",\"MUS\",\"480\",\"-20.2833\",\"57.55\"],\r\n    [\"Mayotte\",\"YT\",\"MYT\",\"175\",\"-12.8333\",\"45.1667\"],\r\n    [\"Mexico\",\"MX\",\"MEX\",\"484\",\"23\",\"-102\"],\r\n    [\"Micronesia,FederatedStatesof\",\"FM\",\"FSM\",\"583\",\"6.9167\",\"158.25\"],\r\n    [\"Moldova,Republicof\",\"MD\",\"MDA\",\"498\",\"47\",\"29\"],\r\n    [\"Monaco\",\"MC\",\"MCO\",\"492\",\"43.7333\",\"7.4\"],\r\n    [\"Mongolia\",\"MN\",\"MNG\",\"496\",\"46\",\"105\"],\r\n    [\"Montenegro\",\"ME\",\"MNE\",\"499\",\"42\",\"19\"],\r\n    [\"Montserrat\",\"MS\",\"MSR\",\"500\",\"16.75\",\"-62.2\"],\r\n    [\"Morocco\",\"MA\",\"MAR\",\"504\",\"32\",\"-5\"],\r\n    [\"Mozambique\",\"MZ\",\"MOZ\",\"508\",\"-18.25\",\"35\"],\r\n    [\"Myanmar\",\"MM\",\"MMR\",\"104\",\"22\",\"98\"],\r\n    [\"Burma\",\"MM\",\"MMR\",\"104\",\"22\",\"98\"],\r\n    [\"Namibia\",\"NA\",\"NAM\",\"516\",\"-22\",\"17\"],\r\n    [\"Nauru\",\"NR\",\"NRU\",\"520\",\"-0.5333\",\"166.9167\"],\r\n    [\"Nepal\",\"NP\",\"NPL\",\"524\",\"28\",\"84\"],\r\n    [\"Netherlands\",\"NL\",\"NLD\",\"528\",\"52.5\",\"5.75\"],\r\n    [\"NetherlandsAntilles\",\"AN\",\"ANT\",\"530\",\"12.25\",\"-68.75\"],\r\n    [\"NewCaledonia\",\"NC\",\"NCL\",\"540\",\"-21.5\",\"165.5\"],\r\n    [\"NewZealand\",\"NZ\",\"NZL\",\"554\",\"-41\",\"174\"],\r\n    [\"Nicaragua\",\"NI\",\"NIC\",\"558\",\"13\",\"-85\"],\r\n    [\"Niger\",\"NE\",\"NER\",\"562\",\"16\",\"8\"],\r\n    [\"Nigeria\",\"NG\",\"NGA\",\"566\",\"10\",\"8\"],\r\n    [\"Niue\",\"NU\",\"NIU\",\"570\",\"-19.0333\",\"-169.8667\"],\r\n    [\"NorfolkIsland\",\"NF\",\"NFK\",\"574\",\"-29.0333\",\"167.95\"],\r\n    [\"NorthernMarianaIslands\",\"MP\",\"MNP\",\"580\",\"15.2\",\"145.75\"],\r\n    [\"Norway\",\"NO\",\"NOR\",\"578\",\"62\",\"10\"],\r\n    [\"Oman\",\"OM\",\"OMN\",\"512\",\"21\",\"57\"],\r\n    [\"Pakistan\",\"PK\",\"PAK\",\"586\",\"30\",\"70\"],\r\n    [\"Palau\",\"PW\",\"PLW\",\"585\",\"7.5\",\"134.5\"],\r\n    [\"PalestinianTerritory,Occupied\",\"PS\",\"PSE\",\"275\",\"32\",\"35.25\"],\r\n    [\"Panama\",\"PA\",\"PAN\",\"591\",\"9\",\"-80\"],\r\n    [\"PapuaNewGuinea\",\"PG\",\"PNG\",\"598\",\"-6\",\"147\"],\r\n    [\"Paraguay\",\"PY\",\"PRY\",\"600\",\"-23\",\"-58\"],\r\n    [\"Peru\",\"PE\",\"PER\",\"604\",\"-10\",\"-76\"],\r\n    [\"Philippines\",\"PH\",\"PHL\",\"608\",\"13\",\"122\"],\r\n    [\"Pitcairn\",\"PN\",\"PCN\",\"612\",\"-24.7\",\"-127.4\"],\r\n    [\"Poland\",\"PL\",\"POL\",\"616\",\"52\",\"20\"],\r\n    [\"Portugal\",\"PT\",\"PRT\",\"620\",\"39.5\",\"-8\"],\r\n    [\"PuertoRico\",\"PR\",\"PRI\",\"630\",\"18.25\",\"-66.5\"],\r\n    [\"Qatar\",\"QA\",\"QAT\",\"634\",\"25.5\",\"51.25\"],\r\n    [\"Réunion\",\"RE\",\"REU\",\"638\",\"-21.1\",\"55.6\"],\r\n    [\"Romania\",\"RO\",\"ROU\",\"642\",\"46\",\"25\"],\r\n    [\"RussianFederation\",\"RU\",\"RUS\",\"643\",\"60\",\"100\"],\r\n    [\"Russia\",\"RU\",\"RUS\",\"643\",\"60\",\"100\"],\r\n    [\"Rwanda\",\"RW\",\"RWA\",\"646\",\"-2\",\"30\"],\r\n    [\"SaintHelena,AscensionandTristandaCunha\",\"SH\",\"SHN\",\"654\",\"-15.9333\",\"-5.7\"],\r\n    [\"SaintKittsandNevis\",\"KN\",\"KNA\",\"659\",\"17.3333\",\"-62.75\"],\r\n    [\"SaintLucia\",\"LC\",\"LCA\",\"662\",\"13.8833\",\"-61.1333\"],\r\n    [\"SaintPierreandMiquelon\",\"PM\",\"SPM\",\"666\",\"46.8333\",\"-56.3333\"],\r\n    [\"SaintVincentandtheGrenadines\",\"VC\",\"VCT\",\"670\",\"13.25\",\"-61.2\"],\r\n    [\"SaintVincent&theGrenadines\",\"VC\",\"VCT\",\"670\",\"13.25\",\"-61.2\"],\r\n    [\"St.VincentandtheGrenadines\",\"VC\",\"VCT\",\"670\",\"13.25\",\"-61.2\"],\r\n    [\"Samoa\",\"WS\",\"WSM\",\"882\",\"-13.5833\",\"-172.3333\"],\r\n    [\"SanMarino\",\"SM\",\"SMR\",\"674\",\"43.7667\",\"12.4167\"],\r\n    [\"SaoTomeandPrincipe\",\"ST\",\"STP\",\"678\",\"1\",\"7\"],\r\n    [\"SaudiArabia\",\"SA\",\"SAU\",\"682\",\"25\",\"45\"],\r\n    [\"Senegal\",\"SN\",\"SEN\",\"686\",\"14\",\"-14\"],\r\n    [\"Serbia\",\"RS\",\"SRB\",\"688\",\"44\",\"21\"],\r\n    [\"Seychelles\",\"SC\",\"SYC\",\"690\",\"-4.5833\",\"55.6667\"],\r\n    [\"SierraLeone\",\"SL\",\"SLE\",\"694\",\"8.5\",\"-11.5\"],\r\n    [\"Singapore\",\"SG\",\"SGP\",\"702\",\"1.3667\",\"103.8\"],\r\n    [\"Slovakia\",\"SK\",\"SVK\",\"703\",\"48.6667\",\"19.5\"],\r\n    [\"Slovenia\",\"SI\",\"SVN\",\"705\",\"46\",\"15\"],\r\n    [\"SolomonIslands\",\"SB\",\"SLB\",\"90\",\"-8\",\"159\"],\r\n    [\"Somalia\",\"SO\",\"SOM\",\"706\",\"10\",\"49\"],\r\n    [\"SouthAfrica\",\"ZA\",\"ZAF\",\"710\",\"-29\",\"24\"],\r\n    [\"SouthGeorgiaandtheSouthSandwichIslands\",\"GS\",\"SGS\",\"239\",\"-54.5\",\"-37\"],\r\n    [\"Spain\",\"ES\",\"ESP\",\"724\",\"40\",\"-4\"],\r\n    [\"SriLanka\",\"LK\",\"LKA\",\"144\",\"7\",\"81\"],\r\n    [\"Sudan\",\"SD\",\"SDN\",\"736\",\"15\",\"30\"],\r\n    [\"Suriname\",\"SR\",\"SUR\",\"740\",\"4\",\"-56\"],\r\n    [\"SvalbardandJanMayen\",\"SJ\",\"SJM\",\"744\",\"78\",\"20\"],\r\n    [\"Swaziland\",\"SZ\",\"SWZ\",\"748\",\"-26.5\",\"31.5\"],\r\n    [\"Sweden\",\"SE\",\"SWE\",\"752\",\"62\",\"15\"],\r\n    [\"Switzerland\",\"CH\",\"CHE\",\"756\",\"47\",\"8\"],\r\n    [\"SyrianArabRepublic\",\"SY\",\"SYR\",\"760\",\"35\",\"38\"],\r\n    [\"Taiwan,ProvinceofChina\",\"TW\",\"TWN\",\"158\",\"23.5\",\"121\"],\r\n    [\"Taiwan\",\"TW\",\"TWN\",\"158\",\"23.5\",\"121\"],\r\n    [\"Tajikistan\",\"TJ\",\"TJK\",\"762\",\"39\",\"71\"],\r\n    [\"Tanzania,UnitedRepublicof\",\"TZ\",\"TZA\",\"834\",\"-6\",\"35\"],\r\n    [\"Thailand\",\"TH\",\"THA\",\"764\",\"15\",\"100\"],\r\n    [\"Timor-Leste\",\"TL\",\"TLS\",\"626\",\"-8.55\",\"125.5167\"],\r\n    [\"Togo\",\"TG\",\"TGO\",\"768\",\"8\",\"1.1667\"],\r\n    [\"Tokelau\",\"TK\",\"TKL\",\"772\",\"-9\",\"-172\"],\r\n    [\"Tonga\",\"TO\",\"TON\",\"776\",\"-20\",\"-175\"],\r\n    [\"TrinidadandTobago\",\"TT\",\"TTO\",\"780\",\"11\",\"-61\"],\r\n    [\"Trinidad&Tobago\",\"TT\",\"TTO\",\"780\",\"11\",\"-61\"],\r\n    [\"Tunisia\",\"TN\",\"TUN\",\"788\",\"34\",\"9\"],\r\n    [\"Turkey\",\"TR\",\"TUR\",\"792\",\"39\",\"35\"],\r\n    [\"Turkmenistan\",\"TM\",\"TKM\",\"795\",\"40\",\"60\"],\r\n    [\"TurksandCaicosIslands\",\"TC\",\"TCA\",\"796\",\"21.75\",\"-71.5833\"],\r\n    [\"Tuvalu\",\"TV\",\"TUV\",\"798\",\"-8\",\"178\"],\r\n    [\"Uganda\",\"UG\",\"UGA\",\"800\",\"1\",\"32\"],\r\n    [\"Ukraine\",\"UA\",\"UKR\",\"804\",\"49\",\"32\"],\r\n    [\"UnitedArabEmirates\",\"AE\",\"ARE\",\"784\",\"24\",\"54\"],\r\n    [\"UnitedKingdom\",\"GB\",\"GBR\",\"826\",\"54\",\"-2\"],\r\n    [\"UnitedStates\",\"US\",\"USA\",\"840\",\"38\",\"-97\"],\r\n    [\"UnitedStatesMinorOutlyingIslands\",\"UM\",\"UMI\",\"581\",\"19.2833\",\"166.6\"],\r\n    [\"Uruguay\",\"UY\",\"URY\",\"858\",\"-33\",\"-56\"],\r\n    [\"Uzbekistan\",\"UZ\",\"UZB\",\"860\",\"41\",\"64\"],\r\n    [\"Vanuatu\",\"VU\",\"VUT\",\"548\",\"-16\",\"167\"],\r\n    [\"Venezuela,BolivarianRepublicof\",\"VE\",\"VEN\",\"862\",\"8\",\"-66\"],\r\n    [\"Venezuela\",\"VE\",\"VEN\",\"862\",\"8\",\"-66\"],\r\n    [\"VietNam\",\"VN\",\"VNM\",\"704\",\"16\",\"106\"],\r\n    [\"Vietnam\",\"VN\",\"VNM\",\"704\",\"16\",\"106\"],\r\n    [\"VirginIslands,British\",\"VG\",\"VGB\",\"92\",\"18.5\",\"-64.5\"],\r\n    [\"VirginIslands,U.S.\",\"VI\",\"VIR\",\"850\",\"18.3333\",\"-64.8333\"],\r\n    [\"WallisandFutuna\",\"WF\",\"WLF\",\"876\",\"-13.3\",\"-176.2\"],\r\n    [\"WesternSahara\",\"EH\",\"ESH\",\"732\",\"24.5\",\"-13\"],\r\n    [\"Yemen\",\"YE\",\"YEM\",\"887\",\"15\",\"48\"],\r\n    [\"Zambia\",\"ZM\",\"ZMB\",\"894\",\"-15\",\"30\"],\r\n    [\"Zimbabwe\",\"ZW\",\"ZWE\",\"716\",\"-20\",\"30\"]\r\n];\r\n\r\n// COUNTRIES.reduce((acc, c, i) => { acc[c[1]] = c[2]; return acc; }, {})\r\nexport const ISO_2_TO_3 = {\r\n    AD: \"AND\",\r\n    AE: \"ARE\",\r\n    AF: \"AFG\",\r\n    AG: \"ATG\",\r\n    AI: \"AIA\",\r\n    AL: \"ALB\",\r\n    AM: \"ARM\",\r\n    AN: \"ANT\",\r\n    AO: \"AGO\",\r\n    AQ: \"ATA\",\r\n    AR: \"ARG\",\r\n    AS: \"ASM\",\r\n    AT: \"AUT\",\r\n    AU: \"AUS\",\r\n    AW: \"ABW\",\r\n    AZ: \"AZE\",\r\n    BA: \"BIH\",\r\n    BB: \"BRB\",\r\n    BD: \"BGD\",\r\n    BE: \"BEL\",\r\n    BF: \"BFA\",\r\n    BG: \"BGR\",\r\n    BH: \"BHR\",\r\n    BI: \"BDI\",\r\n    BJ: \"BEN\",\r\n    BM: \"BMU\",\r\n    BN: \"BRN\",\r\n    BO: \"BOL\",\r\n    BR: \"BRA\",\r\n    BS: \"BHS\",\r\n    BT: \"BTN\",\r\n    BV: \"BVT\",\r\n    BW: \"BWA\",\r\n    BY: \"BLR\",\r\n    BZ: \"BLZ\",\r\n    CA: \"CAN\",\r\n    CC: \"CCK\",\r\n    CD: \"COD\",\r\n    CF: \"CAF\",\r\n    CG: \"COG\",\r\n    CH: \"CHE\",\r\n    CI: \"CIV\",\r\n    CK: \"COK\",\r\n    CL: \"CHL\",\r\n    CM: \"CMR\",\r\n    CN: \"CHN\",\r\n    CO: \"COL\",\r\n    CR: \"CRI\",\r\n    CU: \"CUB\",\r\n    CV: \"CPV\",\r\n    CX: \"CXR\",\r\n    CY: \"CYP\",\r\n    CZ: \"CZE\",\r\n    DE: \"DEU\",\r\n    DJ: \"DJI\",\r\n    DK: \"DNK\",\r\n    DM: \"DMA\",\r\n    DO: \"DOM\",\r\n    DZ: \"DZA\",\r\n    EC: \"ECU\",\r\n    EE: \"EST\",\r\n    EG: \"EGY\",\r\n    EH: \"ESH\",\r\n    ER: \"ERI\",\r\n    ES: \"ESP\",\r\n    ET: \"ETH\",\r\n    FI: \"FIN\",\r\n    FJ: \"FJI\",\r\n    FK: \"FLK\",\r\n    FM: \"FSM\",\r\n    FO: \"FRO\",\r\n    FR: \"FRA\",\r\n    GA: \"GAB\",\r\n    GB: \"GBR\",\r\n    GD: \"GRD\",\r\n    GE: \"GEO\",\r\n    GF: \"GUF\",\r\n    GG: \"GGY\",\r\n    GH: \"GHA\",\r\n    GI: \"GIB\",\r\n    GL: \"GRL\",\r\n    GM: \"GMB\",\r\n    GN: \"GIN\",\r\n    GP: \"GLP\",\r\n    GQ: \"GNQ\",\r\n    GR: \"GRC\",\r\n    GS: \"SGS\",\r\n    GT: \"GTM\",\r\n    GU: \"GUM\",\r\n    GW: \"GNB\",\r\n    GY: \"GUY\",\r\n    HK: \"HKG\",\r\n    HM: \"HMD\",\r\n    HN: \"HND\",\r\n    HR: \"HRV\",\r\n    HT: \"HTI\",\r\n    HU: \"HUN\",\r\n    ID: \"IDN\",\r\n    IE: \"IRL\",\r\n    IL: \"ISR\",\r\n    IM: \"IMN\",\r\n    IN: \"IND\",\r\n    IO: \"IOT\",\r\n    IQ: \"IRQ\",\r\n    IR: \"IRN\",\r\n    IS: \"ISL\",\r\n    IT: \"ITA\",\r\n    JE: \"JEY\",\r\n    JM: \"JAM\",\r\n    JO: \"JOR\",\r\n    JP: \"JPN\",\r\n    KE: \"KEN\",\r\n    KG: \"KGZ\",\r\n    KH: \"KHM\",\r\n    KI: \"KIR\",\r\n    KM: \"COM\",\r\n    KN: \"KNA\",\r\n    KP: \"PRK\",\r\n    KR: \"KOR\",\r\n    KW: \"KWT\",\r\n    KY: \"CYM\",\r\n    KZ: \"KAZ\",\r\n    LA: \"LAO\",\r\n    LB: \"LBN\",\r\n    LC: \"LCA\",\r\n    LI: \"LIE\",\r\n    LK: \"LKA\",\r\n    LR: \"LBR\",\r\n    LS: \"LSO\",\r\n    LT: \"LTU\",\r\n    LU: \"LUX\",\r\n    LV: \"LVA\",\r\n    LY: \"LBY\",\r\n    MA: \"MAR\",\r\n    MC: \"MCO\",\r\n    MD: \"MDA\",\r\n    ME: \"MNE\",\r\n    MG: \"MDG\",\r\n    MH: \"MHL\",\r\n    MK: \"MKD\",\r\n    ML: \"MLI\",\r\n    MM: \"MMR\",\r\n    MN: \"MNG\",\r\n    MO: \"MAC\",\r\n    MP: \"MNP\",\r\n    MQ: \"MTQ\",\r\n    MR: \"MRT\",\r\n    MS: \"MSR\",\r\n    MT: \"MLT\",\r\n    MU: \"MUS\",\r\n    MV: \"MDV\",\r\n    MW: \"MWI\",\r\n    MX: \"MEX\",\r\n    MY: \"MYS\",\r\n    MZ: \"MOZ\",\r\n    NA: \"NAM\",\r\n    NC: \"NCL\",\r\n    NE: \"NER\",\r\n    NF: \"NFK\",\r\n    NG: \"NGA\",\r\n    NI: \"NIC\",\r\n    NL: \"NLD\",\r\n    NO: \"NOR\",\r\n    NP: \"NPL\",\r\n    NR: \"NRU\",\r\n    NU: \"NIU\",\r\n    NZ: \"NZL\",\r\n    OM: \"OMN\",\r\n    PA: \"PAN\",\r\n    PE: \"PER\",\r\n    PF: \"PYF\",\r\n    PG: \"PNG\",\r\n    PH: \"PHL\",\r\n    PK: \"PAK\",\r\n    PL: \"POL\",\r\n    PM: \"SPM\",\r\n    PN: \"PCN\",\r\n    PR: \"PRI\",\r\n    PS: \"PSE\",\r\n    PT: \"PRT\",\r\n    PW: \"PLW\",\r\n    PY: \"PRY\",\r\n    QA: \"QAT\",\r\n    RE: \"REU\",\r\n    RO: \"ROU\",\r\n    RS: \"SRB\",\r\n    RU: \"RUS\",\r\n    RW: \"RWA\",\r\n    SA: \"SAU\",\r\n    SB: \"SLB\",\r\n    SC: \"SYC\",\r\n    SD: \"SDN\",\r\n    SE: \"SWE\",\r\n    SG: \"SGP\",\r\n    SH: \"SHN\",\r\n    SI: \"SVN\",\r\n    SJ: \"SJM\",\r\n    SK: \"SVK\",\r\n    SL: \"SLE\",\r\n    SM: \"SMR\",\r\n    SN: \"SEN\",\r\n    SO: \"SOM\",\r\n    SR: \"SUR\",\r\n    ST: \"STP\",\r\n    SV: \"SLV\",\r\n    SY: \"SYR\",\r\n    SZ: \"SWZ\",\r\n    TC: \"TCA\",\r\n    TD: \"TCD\",\r\n    TF: \"ATF\",\r\n    TG: \"TGO\",\r\n    TH: \"THA\",\r\n    TJ: \"TJK\",\r\n    TK: \"TKL\",\r\n    TL: \"TLS\",\r\n    TM: \"TKM\",\r\n    TN: \"TUN\",\r\n    TO: \"TON\",\r\n    TR: \"TUR\",\r\n    TT: \"TTO\",\r\n    TV: \"TUV\",\r\n    TW: \"TWN\",\r\n    TZ: \"TZA\",\r\n    UA: \"UKR\",\r\n    UG: \"UGA\",\r\n    UM: \"UMI\",\r\n    US: \"USA\",\r\n    UY: \"URY\",\r\n    UZ: \"UZB\",\r\n    VA: \"VAT\",\r\n    VC: \"VCT\",\r\n    VE: \"VEN\",\r\n    VG: \"VGB\",\r\n    VI: \"VIR\",\r\n    VN: \"VNM\",\r\n    VU: \"VUT\",\r\n    WF: \"WLF\",\r\n    WS: \"WSM\",\r\n    YE: \"YEM\",\r\n    YT: \"MYT\",\r\n    ZA: \"ZAF\",\r\n    ZM: \"ZMB\",\r\n    ZW: \"ZWE\",\r\n};\r\n\r\nexport const ISO3_TO_NAME = {\r\n    ABW: \"Aruba\",\r\n    AFG: \"Afghanistan\",\r\n    AGO: \"Angola\",\r\n    AIA: \"Anguilla\",\r\n    ALB: \"Albania\",\r\n    AND: \"Andorra\",\r\n    ANT: \"NetherlandsAntilles\",\r\n    ARE: \"UnitedArabEmirates\",\r\n    ARG: \"Argentina\",\r\n    ARM: \"Armenia\",\r\n    ASM: \"AmericanSamoa\",\r\n    ATA: \"Antarctica\",\r\n    ATF: \"FrenchSouthernTerritories\",\r\n    ATG: \"AntiguaandBarbuda\",\r\n    AUS: \"Australia\",\r\n    AUT: \"Austria\",\r\n    AZE: \"Azerbaijan\",\r\n    BDI: \"Burundi\",\r\n    BEL: \"Belgium\",\r\n    BEN: \"Benin\",\r\n    BFA: \"BurkinaFaso\",\r\n    BGD: \"Bangladesh\",\r\n    BGR: \"Bulgaria\",\r\n    BHR: \"Bahrain\",\r\n    BHS: \"Bahamas\",\r\n    BIH: \"BosniaandHerzegovina\",\r\n    BLR: \"Belarus\",\r\n    BLZ: \"Belize\",\r\n    BMU: \"Bermuda\",\r\n    BOL: \"Bolivia\",\r\n    BRA: \"Brazil\",\r\n    BRB: \"Barbados\",\r\n    BRN: \"Brunei\",\r\n    BTN: \"Bhutan\",\r\n    BVT: \"BouvetIsland\",\r\n    BWA: \"Botswana\",\r\n    CAF: \"CentralAfricanRepublic\",\r\n    CAN: \"Canada\",\r\n    CCK: \"Cocos(Keeling)Islands\",\r\n    CHE: \"Switzerland\",\r\n    CHL: \"Chile\",\r\n    CHN: \"China\",\r\n    CIV: \"IvoryCoast\",\r\n    CMR: \"Cameroon\",\r\n    COD: \"Congo,theDemocraticRepublicofthe\",\r\n    COG: \"Congo\",\r\n    COK: \"CookIslands\",\r\n    COL: \"Colombia\",\r\n    COM: \"Comoros\",\r\n    CPV: \"CapeVerde\",\r\n    CRI: \"CostaRica\",\r\n    CUB: \"Cuba\",\r\n    CXR: \"ChristmasIsland\",\r\n    CYM: \"CaymanIslands\",\r\n    CYP: \"Cyprus\",\r\n    CZE: \"CzechRepublic\",\r\n    DEU: \"Germany\",\r\n    DJI: \"Djibouti\",\r\n    DMA: \"Dominica\",\r\n    DNK: \"Denmark\",\r\n    DOM: \"DominicanRepublic\",\r\n    DZA: \"Algeria\",\r\n    ECU: \"Ecuador\",\r\n    EGY: \"Egypt\",\r\n    ERI: \"Eritrea\",\r\n    ESH: \"WesternSahara\",\r\n    ESP: \"Spain\",\r\n    EST: \"Estonia\",\r\n    ETH: \"Ethiopia\",\r\n    FIN: \"Finland\",\r\n    FJI: \"Fiji\",\r\n    FLK: \"FalklandIslands(Malvinas)\",\r\n    FRA: \"France\",\r\n    FRO: \"FaroeIslands\",\r\n    FSM: \"Micronesia,FederatedStatesof\",\r\n    GAB: \"Gabon\",\r\n    GBR: \"UK\",\r\n    GEO: \"Georgia\",\r\n    GGY: \"Guernsey\",\r\n    GHA: \"Ghana\",\r\n    GIB: \"Gibraltar\",\r\n    GIN: \"Guinea\",\r\n    GLP: \"Guadeloupe\",\r\n    GMB: \"Gambia\",\r\n    GNB: \"Guinea-Bissau\",\r\n    GNQ: \"EquatorialGuinea\",\r\n    GRC: \"Greece\",\r\n    GRD: \"Grenada\",\r\n    GRL: \"Greenland\",\r\n    GTM: \"Guatemala\",\r\n    GUF: \"FrenchGuiana\",\r\n    GUM: \"Guam\",\r\n    GUY: \"Guyana\",\r\n    HKG: \"HongKong\",\r\n    HMD: \"HeardIslandandMcDonaldIslands\",\r\n    HND: \"Honduras\",\r\n    HRV: \"Croatia\",\r\n    HTI: \"Haiti\",\r\n    HUN: \"Hungary\",\r\n    IDN: \"Indonesia\",\r\n    IMN: \"IsleofMan\",\r\n    IND: \"India\",\r\n    IOT: \"BritishIndianOceanTerritory\",\r\n    IRL: \"Ireland\",\r\n    IRN: \"Iran\",\r\n    IRQ: \"Iraq\",\r\n    ISL: \"Iceland\",\r\n    ISR: \"Israel\",\r\n    ITA: \"Italy\",\r\n    JAM: \"Jamaica\",\r\n    JEY: \"Jersey\",\r\n    JOR: \"Jordan\",\r\n    JPN: \"Japan\",\r\n    KAZ: \"Kazakhstan\",\r\n    KEN: \"Kenya\",\r\n    KGZ: \"Kyrgyzstan\",\r\n    KHM: \"Cambodia\",\r\n    KIR: \"Kiribati\",\r\n    KNA: \"SaintKittsandNevis\",\r\n    KOR: \"SouthKorea\",\r\n    KWT: \"Kuwait\",\r\n    LAO: \"Laos\",\r\n    LBN: \"Lebanon\",\r\n    LBR: \"Liberia\",\r\n    LBY: \"Libya\",\r\n    LCA: \"SaintLucia\",\r\n    LIE: \"Liechtenstein\",\r\n    LKA: \"SriLanka\",\r\n    LSO: \"Lesotho\",\r\n    LTU: \"Lithuania\",\r\n    LUX: \"Luxembourg\",\r\n    LVA: \"Latvia\",\r\n    MAC: \"Macao\",\r\n    MAR: \"Morocco\",\r\n    MCO: \"Monaco\",\r\n    MDA: \"Moldova\",\r\n    MDG: \"Madagascar\",\r\n    MDV: \"Maldives\",\r\n    MEX: \"Mexico\",\r\n    MHL: \"MarshallIslands\",\r\n    MKD: \"Macedonia\",\r\n    MLI: \"Mali\",\r\n    MLT: \"Malta\",\r\n    MMR: \"Burma\",\r\n    MNE: \"Montenegro\",\r\n    MNG: \"Mongolia\",\r\n    MNP: \"NorthernMarianaIslands\",\r\n    MOZ: \"Mozambique\",\r\n    MRT: \"Mauritania\",\r\n    MSR: \"Montserrat\",\r\n    MTQ: \"Martinique\",\r\n    MUS: \"Mauritius\",\r\n    MWI: \"Malawi\",\r\n    MYS: \"Malaysia\",\r\n    MYT: \"Mayotte\",\r\n    NAM: \"Namibia\",\r\n    NCL: \"NewCaledonia\",\r\n    NER: \"Niger\",\r\n    NFK: \"NorfolkIsland\",\r\n    NGA: \"Nigeria\",\r\n    NIC: \"Nicaragua\",\r\n    NIU: \"Niue\",\r\n    NLD: \"Netherlands\",\r\n    NOR: \"Norway\",\r\n    NPL: \"Nepal\",\r\n    NRU: \"Nauru\",\r\n    NZL: \"NewZealand\",\r\n    OMN: \"Oman\",\r\n    PAK: \"Pakistan\",\r\n    PAN: \"Panama\",\r\n    PCN: \"Pitcairn\",\r\n    PER: \"Peru\",\r\n    PHL: \"Philippines\",\r\n    PLW: \"Palau\",\r\n    PNG: \"PapuaNewGuinea\",\r\n    POL: \"Poland\",\r\n    PRI: \"PuertoRico\",\r\n    PRK: \"Korea\",\r\n    PRT: \"Portugal\",\r\n    PRY: \"Paraguay\",\r\n    PSE: \"PalestinianTerritory\",\r\n    PYF: \"FrenchPolynesia\",\r\n    QAT: \"Qatar\",\r\n    REU: \"Réunion\",\r\n    ROU: \"Romania\",\r\n    RUS: \"Russia\",\r\n    RWA: \"Rwanda\",\r\n    SAU: \"SaudiArabia\",\r\n    SDN: \"Sudan\",\r\n    SEN: \"Senegal\",\r\n    SGP: \"Singapore\",\r\n    SGS: \"SouthGeorgiaandtheSouthSandwichIslands\",\r\n    SHN: \"SaintHelena,AscensionandTristandaCunha\",\r\n    SJM: \"SvalbardandJanMayen\",\r\n    SLB: \"SolomonIslands\",\r\n    SLE: \"SierraLeone\",\r\n    SLV: \"ElSalvador\",\r\n    SMR: \"SanMarino\",\r\n    SOM: \"Somalia\",\r\n    SPM: \"SaintPierreandMiquelon\",\r\n    SRB: \"Serbia\",\r\n    STP: \"SaoTomeandPrincipe\",\r\n    SUR: \"Suriname\",\r\n    SVK: \"Slovakia\",\r\n    SVN: \"Slovenia\",\r\n    SWE: \"Sweden\",\r\n    SWZ: \"Swaziland\",\r\n    SYC: \"Seychelles\",\r\n    SYR: \"SyrianArabRepublic\",\r\n    TCA: \"TurksandCaicosIslands\",\r\n    TCD: \"Chad\",\r\n    TGO: \"Togo\",\r\n    THA: \"Thailand\",\r\n    TJK: \"Tajikistan\",\r\n    TKL: \"Tokelau\",\r\n    TKM: \"Turkmenistan\",\r\n    TLS: \"Timor-Leste\",\r\n    TON: \"Tonga\",\r\n    TTO: \"Trinidad&Tobago\",\r\n    TUN: \"Tunisia\",\r\n    TUR: \"Turkey\",\r\n    TUV: \"Tuvalu\",\r\n    TWN: \"Taiwan\",\r\n    TZA: \"Tanzania\",\r\n    UGA: \"Uganda\",\r\n    UKR: \"Ukraine\",\r\n    UMI: \"UnitedStatesMinorOutlyingIslands\",\r\n    URY: \"Uruguay\",\r\n    USA: \"UnitedStates\",\r\n    UZB: \"Uzbekistan\",\r\n    VAT: \"holy-see\",\r\n    VCT: \"St.VincentandtheGrenadines\",\r\n    VEN: \"Venezuela\",\r\n    VGB: \"VirginIslands,British\",\r\n    VIR: \"VirginIslands,U.S.\",\r\n    VNM: \"Vietnam\",\r\n    VUT: \"Vanuatu\",\r\n    WLF: \"WallisandFutuna\",\r\n    WSM: \"Samoa\",\r\n    YEM: \"Yemen\",\r\n    ZAF: \"SouthAfrica\",\r\n    ZMB: \"Zambia\",\r\n    ZWE: \"Zimbabwe\"\r\n};","// https://jonisalonen.com/2014/computing-distance-between-coordinates-can-be-simple-and-fast/\r\n\r\nconst deglen2 = 110.25 * 110.25;\r\n\r\nexport function distance2(lat, lon, lat0, lon0) {\r\n    const x = lat - lat0;\r\n    const y = (lon - lon0) * Math.cos(lat0);\r\n    return deglen2 * (x*x + y*y);\r\n}\r\n\r\nexport function distance(lat, lon, lat0, lon0) {\r\n    const x = lat - lat0;\r\n    const y = lon - lon0;\r\n    return x*x + y*y;\r\n}\r\n\r\n// https://stackoverflow.com/questions/3518504/regular-expression-for-matching-latitude-longitude-coordinates\r\n\r\n// eslint-disable-next-line\r\nexport const LATLON_PATTERN = '^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)\\s*,\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$';\r\n\r\n\r\nexport function point({ lat, lon }) {\r\n    return {\r\n        type: \"Point\",\r\n        coordinates: [lon, lat]\r\n    };\r\n}","\r\nfunction toArray(x, keep) {\r\n    return keep ? x : [x];\r\n}\r\n\r\nfunction chainSingle(getPromise, promiseCount, spread=false) {\r\n    return [...Array(promiseCount).keys()].reduce((acc, index) => (\r\n        acc.then(responses => getPromise(index).then(response => [...responses, ...toArray(response, spread)]))\r\n    ), Promise.resolve([]));\r\n}\r\n\r\nfunction allPromise(getPromise, promiseCount, concurrentCount, index) {\r\n    const start = index * concurrentCount;\r\n    const end = Math.min(start + concurrentCount, promiseCount);\r\n\r\n    return Promise.all([...Array(end - start).keys()].map((i) => (getPromise(start + i))));\r\n}\r\n\r\n// chain with possibility to group into concurrent tasks by concurrentCount > 1\r\nexport function chain(getPromise, promiseCount, concurrentCount=1) {\r\n    if (concurrentCount === 1) {\r\n        return chainSingle(getPromise, promiseCount);\r\n    }\r\n\r\n    return chainSingle(\r\n        (index) => (allPromise(getPromise, promiseCount, concurrentCount, index)),\r\n        Math.ceil(promiseCount / concurrentCount),\r\n        true\r\n    );\r\n}\r\n\r\n// THIS IS GOOD, but without concurrency\r\n/*\r\nexport function chain(getPromise, promiseCount) {\r\n    return [...Array(promiseCount).keys()].reduce((acc, index) => (\r\n        acc.then(responses => getPromise(index).then(response => [...responses, response]))\r\n    ), Promise.resolve([]));\r\n}\r\n*/\r\n\r\n// THIS IS WRONG!!! Just an implementation of Promise.all,\r\n// promises get to be executed immediately after creation!\r\n\r\n// https://decembersoft.com/posts/promises-in-serial-with-array-reduce/\r\n\r\n/*\r\nexport function chain(promises) {\r\n    return promises.reduce((acc, promise) => (\r\n        acc.then(responses => promise.then(response => [...responses, response]))\r\n    ), Promise.resolve([]));\r\n}\r\n*/","export const provinceNames = {\r\n    AL: 'Alabama',\r\n    AK: 'Alaska',\r\n    AS: 'American Samoa',\r\n    AZ: 'Arizona',\r\n    AR: 'Arkansas',\r\n    CA: 'California',\r\n    CO: 'Colorado',\r\n    CT: 'Connecticut',\r\n    DE: 'Delaware',\r\n    DC: 'District of Columbia',\r\n    FM: 'Federated States of Micronesia',\r\n    FL: 'Florida',\r\n    GA: 'Georgia',\r\n    GU: 'Guam',\r\n    HI: 'Hawaii',\r\n    ID: 'Idaho',\r\n    IL: 'Illinois',\r\n    IN: 'Indiana',\r\n    IA: 'Iowa',\r\n    KS: 'Kansas',\r\n    KY: 'Kentucky',\r\n    LA: 'Louisiana',\r\n    ME: 'Maine',\r\n    MH: 'Marshall Islands',\r\n    MD: 'Maryland',\r\n    MA: 'Massachusetts',\r\n    MI: 'Michigan',\r\n    MN: 'Minnesota',\r\n    MS: 'Mississippi',\r\n    MO: 'Missouri',\r\n    MT: 'Montana',\r\n    NE: 'Nebraska',\r\n    NV: 'Nevada',\r\n    NH: 'New Hampshire',\r\n    NJ: 'New Jersey',\r\n    NM: 'New Mexico',\r\n    NY: 'New York',\r\n    NC: 'North Carolina',\r\n    ND: 'North Dakota',\r\n    MP: 'Northern Mariana Islands',\r\n    OH: 'Ohio',\r\n    OK: 'Oklahoma',\r\n    OR: 'Oregon',\r\n    PW: 'Palau',\r\n    PA: 'Pennsylvania',\r\n    PR: 'Puerto Rico',\r\n    RI: 'Rhode Island',\r\n    SC: 'South Carolina',\r\n    SD: 'South Dakota',\r\n    TN: 'Tennessee',\r\n    TX: 'Texas',\r\n    UT: 'Utah',\r\n    VT: 'Vermont',\r\n    VI: 'Virgin Islands',\r\n    VA: 'Virginia',\r\n    WA: 'Washington',\r\n    WV: 'West Virginia',\r\n    WI: 'Wisconsin',\r\n    WY: 'Wyoming',\r\n    AA: 'Armed Forces Americas (except Canada)',\r\n    AE: 'Armed Forces Canada',\r\n    AP: 'Armed Forces Pacific'\r\n};","import { ISO_2_TO_3 } from '../util/countries';\r\nimport { distance } from '../util/geo';\r\nimport { datesInRange, dateString, dateMillis } from '../util/date';\r\nimport { chain } from '../util/promise';\r\nimport { provinceNames } from '../util/usa';\r\n\r\nlet cache = {};\r\n\r\nconst identity = (data) => (data);\r\n\r\nconst transformVirusSpreadCountryTimeline = (response) => {\r\n    let country = response.data;\r\n    country.iso3 = ISO_2_TO_3[country.code];\r\n    country.timelineMap = {};\r\n    country.timeline.forEach((day) => {\r\n        country.timelineMap[dateMillis(day.date)] = day;\r\n    });\r\n    return country;\r\n}\r\n\r\nfunction getFetched(url, key, transform = identity) {\r\n    if (cache[key]) {\r\n        return Promise.resolve(cache[key]);\r\n    }\r\n    return fetch(url).then((response) => (response.json())).then((data) => {\r\n        cache[key] = transform(data);\r\n        return cache[key];\r\n    }).catch((error) => {\r\n        console.error(error);\r\n        throw error;\r\n    });\r\n}\r\n\r\nfunction nearestCountry(location, countries) {\r\n    let minDist = Number.POSITIVE_INFINITY;\r\n    let res = null;\r\n\r\n    countries.forEach((country) => {\r\n        const dist = distance(location.lat, location.lng, country.coordinates.latitude, country.coordinates.longitude);\r\n        if (dist < minDist) {\r\n            minDist = dist;\r\n            res = country;\r\n        }\r\n    });\r\n\r\n    return res;\r\n}\r\n\r\nfunction nearestProvince(location, provinces) {\r\n    let minDist = Number.POSITIVE_INFINITY;\r\n    let res = null;\r\n\r\n    provinces.forEach((province) => {\r\n        const dist = distance(location.lat, location.lng, province.lat, province.lng);\r\n        if (dist < minDist) {\r\n            minDist = dist;\r\n            res = province;\r\n        }\r\n    });\r\n\r\n    return res;\r\n}\r\n\r\nfunction largerProvince(province, provinces) {\r\n    if (province.iso3 !== 'USA' || province.name.length < 2) {\r\n        return null;\r\n    }\r\n    const code = province.name.substring(province.name.length - 2);\r\n    const name = provinceNames[code];\r\n    return provinces.find((p) => (p.name === name));\r\n}\r\n\r\nfunction fetchCountryCode(location) {\r\n    return fetch(`${process.env.REACT_APP_GEONAMES_COUNTRY_URL}?username=${process.env.REACT_APP_GEONAMES_USERNAME}` +\r\n                 `&lat=${location.lat}&lng=${location.lng}`)\r\n            .then((response) => (response.text()))\r\n            .then((text) => (text.trim()));\r\n}\r\n\r\nfunction fetchProvinces(iso3) {\r\n    return fetch(process.env.REACT_APP_VIRUS_PROVINCES_URL + '/' + iso3)\r\n        .then((response) => (response.json()))\r\n        .then((response) => (response.data))\r\n        .then((provinces) => (provinces.filter((province) => (province.lat !== null && province.long !== null))))\r\n        .then((provinces) => (provinces.map((province) => ({\r\n            iso3: province.iso,\r\n            name: province.province,\r\n            lat: province.lat,\r\n            lng: province.long\r\n        }))));\r\n}\r\n\r\nconst virusSpreadForCountry = (country, dateRange) => {\r\n    const startMillis = dateMillis(dateRange.startDate);\r\n    const endMillis = dateMillis(dateRange.endDate);\r\n    const timelineMap =  Object.keys(country.timelineMap).reduce((acc, millis) => {\r\n        if (startMillis <= millis && millis <= endMillis) {\r\n            const item = country.timelineMap[millis];\r\n            acc[millis] = {\r\n                confirmed: item.confirmed,\r\n                new_confirmed: item.new_confirmed\r\n            };\r\n        }\r\n        return acc;\r\n    }, {});\r\n    //console.log('VIRUS SPREAD FOR COUNTRY: ' + country.name, timelineMap);\r\n\r\n    return timelineMap;\r\n};\r\n\r\nfunction fetchVirusSpreadForProvince(province, dateRange, city) {\r\n    const dates = datesInRange(dateRange);\r\n\r\n    const getVirusSpreadPromise = (index) => {\r\n        const date = dates[index];\r\n\r\n        const provinceQueryParam = (province.iso3 === 'USA') ? 'q' : 'region_province';\r\n\r\n        return fetch(process.env.REACT_APP_VIRUS_BY_PROVINCE_BY_DATE + `?` +\r\n                `date=${dateString(date)}` + `&` +\r\n                `iso=${province.iso3}` + `&` +\r\n                `${provinceQueryParam}=${province.name}` +\r\n                (city ? `&city_name=${city.name}` : ``))\r\n            .then((response) => (response.json()))\r\n            .then((response) => (response.data[0]))\r\n            .then((data) => (city ? data.region.cities[0] : data))\r\n            .then((data) => ({\r\n                millis: date,\r\n                confirmed: data && data.confirmed ? Math.max(data.confirmed, 1) : null,\r\n                new_confirmed: data ? data.confirmed_diff : 0\r\n            }))\r\n            .catch((error) => {\r\n                console.error(error);\r\n                return {\r\n                    millis: date,\r\n                    confirmed: null,\r\n                    new_confirmed: 0\r\n                };\r\n            });\r\n    };\r\n\r\n    const getErrorCount = (data) => {\r\n        let started = false;\r\n        const count = data.reduce((acc, item) => {\r\n            if (started) {\r\n                if (item.confirmed === null) {\r\n                    acc++;\r\n                }\r\n            } else {\r\n                if (item.confirmed !== null) {\r\n                    started = true;\r\n                }\r\n            }\r\n            return acc;\r\n        }, 0);\r\n        return started ? count : data.length;\r\n    };\r\n\r\n    return chain(getVirusSpreadPromise, dates.length, 5)\r\n        .then((data) => {\r\n            const errorCount = getErrorCount(data);\r\n            if (errorCount / data.length > process.env.REACT_APP_MAX_VIRUS_DATA_ERROR_PERCENT / 100) {\r\n                console.log('-> Province: ' + province.name +\r\n                    (city ? ', City: ' + city.name : '') +\r\n                    ': MAX ERROR PERCENT EXCEEDED',\r\n                    100 * errorCount / data.length);\r\n                return null;\r\n            }\r\n            for (let i = 1; i < data.length; ++i) {\r\n                if (data[i].confirmed === null) {\r\n                    data[i].confirmed = data[i - 1].confirmed;\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n        .then((data) => (\r\n            data ? data.reduce((acc, item) => {\r\n                acc[item.millis] = {\r\n                    confirmed: item.confirmed,\r\n                    new_confirmed: item.new_confirmed\r\n                };\r\n                return acc;\r\n            }, {}) : null\r\n        ));\r\n}\r\n\r\nfunction fetchCity(location, province, dateRange) {\r\n    return fetch(process.env.REACT_APP_VIRUS_BY_PROVINCE_BY_DATE + `?` +\r\n                `date=${dateRange.startDate}` + `&` +\r\n                `iso=${province.iso3}` + `&` +\r\n                `q=${province.name}`)\r\n            .then((response) => (response.json()))\r\n            .then((response) => (response.data))\r\n            .then((data) => {\r\n                //console.log('fetchCity data', data);\r\n                const cities = data.reduce((acc, region) => {\r\n                    const regionCities = region.region.cities.map((city) => ({\r\n                        name: city.name,\r\n                        lat: city.lat,\r\n                        lng: city.long\r\n                    }));\r\n                    return [...acc, ...regionCities];\r\n                }, []);\r\n\r\n                return nearestProvince(location, cities);\r\n            });\r\n}\r\n\r\nfunction fetchVirusSpread(location, dateRange) {\r\n\r\n    const getResult = (timelineMap, country, province, city) => ({\r\n        country: country.name,\r\n        population: (!timelineMap ? country.population : null),\r\n        province: (timelineMap && province ? province.name : null),\r\n        city: (timelineMap && city ? city.name : null),\r\n        timelineMap: (timelineMap ? timelineMap : virusSpreadForCountry(country, dateRange))\r\n    });\r\n\r\n    const fetchVirusSpreadResult = (country, province, dateRange, city, countryDefault) => (\r\n        fetchVirusSpreadForProvince(province, dateRange, city).then((timelineMap) => {\r\n            return timelineMap || !city ? \r\n                (timelineMap || countryDefault ?\r\n                    getResult(timelineMap, country, province, city) :\r\n                    null) :\r\n                fetchVirusSpreadResult(country, province, dateRange, null, countryDefault) // only province without city\r\n        })\r\n    );\r\n\r\n    return getFetched(process.env.REACT_APP_VIRUS_MAIN_URL, 'virusSpreadCountries', response => response.data)\r\n        .then((countries) => {\r\n            return fetchCountryCode(location, countries)\r\n                .then((code) => {\r\n                    const country = countries.find((c) => (c.code === code));\r\n                    if (!country) {\r\n                        throw \"country with code: \" + code + \" not found\";\r\n                    }\r\n                    return country;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    console.log('country code error, taking closest country', error);\r\n                    return nearestCountry(location, countries);\r\n                })\r\n                .then((country) => {\r\n                    return getFetched(process.env.REACT_APP_VIRUS_MAIN_URL + '/' + country.code,\r\n                        'virusSpreadCountries-' + country.code,\r\n                        transformVirusSpreadCountryTimeline);\r\n                })\r\n                .then((country) => {\r\n\r\n                    //console.log('country data', country);\r\n\r\n                    return fetchProvinces(country.iso3).then((provinces) => {\r\n                        //console.log('provinces', provinces);\r\n\r\n                        // hack for London -> Channel Islands\r\n                        if (country.iso3 === 'GBR') {\r\n                            provinces = provinces.filter((p) => (p.name !== \"Channel Islands\" && p.name !== \"Isle of Man\"));\r\n                        }\r\n\r\n                        if (provinces.length <= 1) {\r\n                            return getResult(null, country);\r\n                        } else {\r\n                            let province = nearestProvince(location, provinces);\r\n                            //console.log('province', province);\r\n                            return (country.iso3 === 'USA') ?\r\n                                fetchCity(location, province, dateRange).then((city) => (\r\n                                    fetchVirusSpreadResult(country, province, dateRange, city).then((result) => {\r\n                                        if (result) {\r\n                                            return result;\r\n                                        } else {\r\n                                            // second trial with larger province\r\n                                            province = largerProvince(province, provinces);\r\n                                            //console.log('larger province', province);\r\n                                            if (province) {\r\n                                                return fetchCity(location, province, dateRange).then((city) => (\r\n                                                    fetchVirusSpreadResult(country, province, dateRange, city, true)\r\n                                                ));\r\n                                            } else {\r\n                                                return getResult(null, country);\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                ))\r\n                            :\r\n                                fetchVirusSpreadResult(country, province, dateRange).then((result) => {\r\n                                    if (result) {\r\n                                        return result;\r\n                                    } else {\r\n                                        // second trial with second nearest province\r\n                                        province = nearestProvince(location, provinces.filter((p) => (p !== province)));\r\n                                        //console.log('second province', province);\r\n                                        return fetchVirusSpreadResult(country, province, dateRange, null, true);\r\n                                    }\r\n                                });\r\n                        }\r\n                    });\r\n                });\r\n        });\r\n}\r\n\r\nexport default fetchVirusSpread;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Badge } from 'reactstrap';\r\n\r\nimport './LocationVirusInfo.css';\r\n\r\nfunction formatPopulation(population) {\r\n    return population ? population.toLocaleString() : null;\r\n}\r\n\r\nconst DataBadge = ({ color, data }) => data ? (\r\n    <h3><Badge color={color}>{data}</Badge></h3>\r\n) : null;\r\n\r\nconst LocationVirusInfo = ({ country, province, city, population }) => (\r\n    <div className=\"__LocationVirusInfo__\">\r\n        <div className=\"label\">Virus data for</div>\r\n        <div className=\"data country\"><DataBadge color=\"secondary\" data={country} /></div>\r\n        <div className=\"data province\"><DataBadge color=\"info\" data={province} /></div>\r\n        <div className=\"data city\"><DataBadge color=\"danger\" data={city} /></div>\r\n        <div className=\"label\">{population ? 'Population:' : null}</div>\r\n        <div className=\"data population\">{formatPopulation(population)}</div>\r\n    </div>\r\n);\r\n\r\nLocationVirusInfo.propTypes = {\r\n    country: PropTypes.string.isRequired,\r\n    province: PropTypes.string,\r\n    city: PropTypes.string,\r\n    population: PropTypes.number\r\n};\r\n\r\nexport default LocationVirusInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ExternalVirusInfo.css';\r\n\r\nconst COUNTRY_MAP = {\r\n    Czechia: 'czech-republic',\r\n    'S. Korea': 'south-korea',\r\n    USA: 'US'\r\n};\r\n\r\nconst PROVINCE_MAP = {\r\n    'New York City, NY': 'new-york'\r\n};\r\n\r\nfunction countryMap(country) {\r\n    return COUNTRY_MAP[country] ? COUNTRY_MAP[country] : country;\r\n}\r\n\r\nfunction provinceMap(province) {\r\n    return PROVINCE_MAP[province] ? PROVINCE_MAP[province] : province;\r\n}\r\n\r\nconst ExternalVirusInfo = ({ country, province }) => (\r\n    <div className=\"__CountryVirusInfo__\">\r\n        <a href={country === 'USA' && province ?\r\n            process.env.REACT_APP_VIRUS_USA_REFERENCE_BASE_URL+'/'+provinceMap(province) :\r\n            process.env.REACT_APP_VIRUS_COUNTRY_REFERENCE_BASE_URL+'/'+countryMap(country)}\r\n            target=\"_blank\" rel=\"noopener noreferrer\"\r\n        >\r\n            {country === 'USA' && province ? province : country} virus data\r\n        </a>\r\n    </div>\r\n);\r\n\r\nExternalVirusInfo.propTypes = {\r\n    country: PropTypes.string.isRequired,\r\n    province: PropTypes.string\r\n};\r\n\r\nexport default ExternalVirusInfo;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button, Popover, PopoverBody, Card, CardBody } from 'reactstrap';\r\n\r\nimport './References.css';\r\n\r\nfunction preventEventPropagation(e) {\r\n    e.stopPropagation();\r\n}\r\n\r\nconst References = ({ close }) => {\r\n\r\n    const [ popoverOpen, setPopoverOpen ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setPopoverOpen(false);\r\n    }, [ close ]);\r\n\r\n    const handleTogglePopover = () => {\r\n        setPopoverOpen((open) => (!open));\r\n    };\r\n\r\n    return (\r\n        <div className=\"__References__\">\r\n            <div className=\"references\" id=\"references\"><Button color=\"link\">References</Button></div>\r\n            <Popover placement=\"top\" isOpen={popoverOpen} target=\"references\" toggle={handleTogglePopover}>\r\n                <PopoverBody onClick={preventEventPropagation}>\r\n                    <Card>\r\n                        <CardBody className=\"references-popup\">\r\n                            <h3>Virus data</h3>\r\n                            <ul>\r\n                                <li>Data per country:<br/><a href=\"https://about-corona.net/documentation\" target=\"_blank\" rel=\"noopener noreferrer\">corona-api</a></li>\r\n                                <li>Data per province / USA city:<br/><a href=\"https://covid-api.com/api\" target=\"_blank\" rel=\"noopener noreferrer\">covid-api</a></li>\r\n                            </ul> \r\n                            <h3>Meteorological approximations (with / without visibility)</h3>\r\n                            <a href={process.env.REACT_APP_METEO_ARTICLE_URL} target=\"_blank\" rel=\"noopener noreferrer\">Roles of meteorological conditions in COVID-19 transmission on a worldwide scale</a>\r\n                        </CardBody>\r\n                    </Card>\r\n                </PopoverBody>\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nReferences.propTypes = {\r\n    close: PropTypes.number // forced closing popup upon change\r\n};\r\n\r\nexport default References;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\n//import theme from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nimport { createCertain, configCalcCharts, measureScale } from '../chart/configChart';\r\nimport { resetCalcChart } from '../chart/manageChart';\r\n\r\nimport fetchVirusSpread from '../api/fetchVirusSpread';\r\nimport { DAY } from '../util/date';\r\n\r\nimport LocationVirusInfo from './info/LocationVirusInfo';\r\nimport ExternalVirusInfo from './info/ExternalVirusInfo';\r\nimport References from './info/References';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport './Chart.css';\r\n\r\n//am4core.useTheme(theme);\r\n\r\n// https://www.medrxiv.org/content/10.1101/2020.03.16.20037168v1.full.pdf\r\n\r\nconst MILE = 1.60934;\r\n\r\nconst START_CHARTS = {\r\n    estimate: {\r\n        chart: null,\r\n        certain: null\r\n    },\r\n    virus: {\r\n        chart: null,\r\n        certain: null\r\n    }\r\n};\r\n\r\nlet charts = START_CHARTS;\r\n\r\nfunction initCharts() {\r\n    charts = {...START_CHARTS};\r\n    charts.virus.chart = am4core.create(\"virusChart\", am4charts.XYChart);\r\n    charts.virus.certain = createCertain(charts.virus.chart);\r\n    charts.estimate.chart = am4core.create(\"estimateChart\", am4charts.XYChart);\r\n    charts.estimate.certain = createCertain(charts.estimate.chart);\r\n\r\n    configCalcCharts(charts.virus.chart, charts.estimate.chart);\r\n\r\n}\r\n\r\nfunction disposeChart(chart) {\r\n    if (chart) {\r\n        chart.dispose();\r\n    }\r\n}\r\n\r\nwindow.onbeforeunload = function(event) {\r\n    disposeChart(charts.estimate.chart);\r\n    disposeChart(charts.virus.chart);\r\n    charts = START_CHARTS;\r\n};\r\n\r\n// case counts with visibility =\r\n// - 0.1366*T^2 + 3.6046*T\r\n// - 0.3883*SPD^2 + 20.2509*SPD\r\n// + 5929.9403/(VSB+19.1774)\r\n// - 505.8484*RH^3 + 316.6004*RH^2 + 189.1295*RH\r\n// - 422.3774\r\n// (SPD: wind speed in miles/h, VSB: visibility in miles, RH: rel humidity in %, T: temperature in Celsius)\r\nconst calc1 = ({ temp, wind, vis, rh }) => (\r\n    - 0.1366 * temp * temp + 3.6046 * temp\r\n    - 0.3883 * wind * wind + 20.2509 * wind\r\n    + 5929.9403 / (vis + 19.1774)\r\n    - 505.8484 * rh * rh * rh + 316.6004 * rh * rh + 189.1295 * rh\r\n    - 422.3774\r\n);\r\n\r\n// case counts without visibility =\r\n// - 0.18*T^2 + 3.1628*T\r\n// - 0.4385*SPD^2 + 21.1420*SPD\r\n// - 228.4231*RH^3 - 391.9561*RH^2 + 880.7190*RH\r\n// - 401.8395\r\n// (SPD: wind speed in miles/h, RH: rel humidity in %, T: temperature in Celsius)\r\nconst calc2 = ({ temp, wind, rh }) => (\r\n    - 0.18 * temp * temp + 3.1628 * temp\r\n    - 0.4385 * wind * wind + 21.1420 * wind\r\n    - 228.4231 * rh * rh * rh - 391.9561 * rh * rh + 880.7190 * rh\r\n    - 401.8395\r\n);\r\n\r\n/*\r\nconst calcRH = (d, t) => {\r\n    const b = t < 0 ? Math.E : 10;\r\n    return Math.pow(b, (7.5 * d) / (237.3 + d) - (7.5 * t) / (237.3 + t));\r\n};\r\n*/\r\n\r\n//const avg = (arr) => (arr.reduce((a, b) => (a + b), 0) / arr.length);\r\n\r\n//const fieldAvg = (arr, field) => (arr.reduce((a, b) => (a + b[field]), 0) / arr.length);\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst CalcChart = ({ weatherData, location, dateRange, reset }) => {\r\n    const [ clicks, setClicks ] = useState(0);\r\n\r\n    const [ locationVirusInfo, setLocationVirusInfo ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        incClicks();\r\n    }, [ reset ]);\r\n\r\n    useEffect(() => {\r\n\r\n        initCharts();\r\n\r\n        charts.virus.chart.events.on(\"datavalidated\", function () {\r\n            if (charts === START_CHARTS) {\r\n                return;\r\n            }\r\n\r\n            charts.virus.certain.hide();\r\n            charts.estimate.certain.hide();\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!weatherData) {\r\n            setLocationVirusInfo(null);\r\n            charts.virus.certain.show();\r\n            charts.estimate.certain.show();\r\n            return;\r\n        }\r\n\r\n        // console.log('location: [' + location.lat + ', ' + location.lng + '], dateRange: ' + dateRange.startDate + ' - ' + dateRange.endDate);\r\n\r\n        setLocationVirusInfo(null);\r\n        charts.virus.certain.show();\r\n        charts.estimate.certain.show();\r\n\r\n        fetchVirusDataWithEstimates().then(({ data, country, province, city, population }) => {\r\n            if (charts === START_CHARTS) {\r\n                return;\r\n            }\r\n\r\n            const delta = getRandomInt(12) + 1;\r\n            resetCalcChart(charts.estimate.chart, dateRange, delta);\r\n            resetCalcChart(charts.virus.chart, dateRange, delta);\r\n\r\n            charts.virus.chart.data = data;\r\n            charts.estimate.chart.data = data;\r\n            setLocationVirusInfo({ country, province, city, population });\r\n        }).catch((error) => {\r\n            if (charts === START_CHARTS) {\r\n                return;\r\n            }\r\n\r\n            resetCalcChart(charts.virus.chart, dateRange);\r\n            resetCalcChart(charts.estimate.chart, dateRange);\r\n\r\n            charts.virus.chart.data = [];\r\n            charts.estimate.chart.data = [];\r\n\r\n            console.error(error);\r\n            const errorJson = JSON.stringify(error);\r\n            if (errorJson !== '{}') {\r\n                alert(errorJson);\r\n            } else {\r\n                alert('ERROR: see console for details.')\r\n            }\r\n        }).finally(() => {\r\n            charts.virus.chart.invalidateData();\r\n            charts.estimate.chart.invalidateData();\r\n        });\r\n\r\n    }, [ weatherData ]);\r\n\r\n    const fetchVirusDataWithEstimates = () => {\r\n\r\n        return fetchVirusSpread(location, dateRange).then((locationData) => {\r\n            let data = [];\r\n            let lastDayItem = null;\r\n\r\n            weatherData.forEach((hour) => {\r\n                const hourData = {\r\n                    temp: hour.tempC,\r\n                    wind: hour.windspeedKmph / MILE,\r\n                    vis: hour.visibility / MILE,\r\n                    dewpoint: hour.DewPointC,\r\n                    humidity: hour.Humidity / 100\r\n                };\r\n                hourData.rh = hourData.humidity; //calcRH(hourData.dewpoint, hourData.temp);\r\n                let item = {\r\n                    date: hour.date,\r\n                    calc1: calc1(hourData),\r\n                    calc2: calc2(hourData),\r\n                    measure: hourData.dewpoint - hourData.temp,\r\n                    Humidity: hour.Humidity,\r\n                    cloudcover: hour.cloudcover,\r\n                };\r\n                item.measureScale = measureScale(item.measure);\r\n                const virusDay = locationData.timelineMap[item.date];\r\n                if (virusDay) {\r\n                    item.confirmed = virusDay.confirmed;\r\n                    item.new_confirmed = virusDay.new_confirmed;\r\n\r\n                    lastDayItem = item;\r\n                } else {\r\n                    if (lastDayItem) {\r\n                        item.confirmed = lastDayItem.confirmed;\r\n                        item.new_confirmed = (item.date - lastDayItem.date < DAY) ?\r\n                            lastDayItem.new_confirmed : 0;\r\n                    } else {\r\n                        item.confirmed = null;\r\n                        item.new_confirmed = 0;\r\n                    }\r\n                }\r\n                data.push(item);\r\n            });\r\n\r\n            return {\r\n                country: locationData.country,\r\n                province: locationData.province,\r\n                city: locationData.city,\r\n                population: locationData.population,\r\n                data\r\n            };\r\n        });\r\n    };\r\n/*\r\n    const calcDataPerDay = () => {\r\n\r\n        let data = [];\r\n\r\n        for (let i=0; i < weatherData.length; i += 8) {\r\n            const weatherDay = weatherData.slice(i, i + 8);\r\n            const day = {\r\n                temp: fieldAvg(weatherDay, 'tempC'),\r\n                wind: fieldAvg(weatherDay, 'windspeedKmph') / MILE,\r\n                vis: fieldAvg(weatherDay, 'visibility') / MILE,\r\n                dewpoint: fieldAvg(weatherDay, 'DewPointC'),\r\n                humidity: fieldAvg(weatherDay, 'Humidity') / 100\r\n            };\r\n            day.rh = calcRH(day.dewpoint, day.temp);\r\n            // console.log(day);\r\n            let item = {\r\n                date: weatherDay[0].date,\r\n                calc1: calc1(day),\r\n                calc2: calc2(day),\r\n                measure: day.dewpoint - day.temp,\r\n                Humidity: day.humidity * 100\r\n            }\r\n            data.push(item)\r\n        }\r\n\r\n        return data;\r\n    };\r\n*/\r\n    const incClicks = () => {\r\n        setClicks((c) => (c + 1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"__Chart__\" onClick={incClicks}>\r\n            <Loader loading={!locationVirusInfo} />\r\n            <div className=\"chart\">\r\n                <div className=\"calc-top-chart\">\r\n                    <div id=\"topLegend\" className=\"top-legend\"></div>\r\n                    <div id=\"virusChart\" className=\"top-chart\"></div>\r\n                </div>\r\n                <div className=\"calc-bottom-chart\">\r\n                    <div id=\"estimateChart\" className=\"bottom-chart\"></div>\r\n                    <div id=\"bottomLegend\" className=\"bottom-legend\"></div>\r\n                </div>\r\n            </div>\r\n            {locationVirusInfo ? (\r\n                <LocationVirusInfo {...locationVirusInfo} />\r\n            ) : null}\r\n            {locationVirusInfo ? (\r\n                <ExternalVirusInfo {...locationVirusInfo} />\r\n            ) : null}\r\n            <References close={clicks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nCalcChart.propTypes = {\r\n    weatherData: PropTypes.array,\r\n    location: PropTypes.shape({\r\n        lat: PropTypes.string.isRequired,\r\n        lng: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    dateRange: PropTypes.shape({\r\n        startDate: PropTypes.string.isRequired, // 'yyyy-MM-dd'\r\n        endDate: PropTypes.string.isRequired    // 'yyyy-MM-dd'\r\n    }).isRequired,\r\n    reset: PropTypes.bool\r\n};\r\n\r\nexport default CalcChart;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button } from 'reactstrap';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nimport DataChart from './DataChart';\r\nimport CalcChart from './CalcChart';\r\nimport './Weather.css';\r\n\r\nconst displayedDate = (str) => (format(new Date(str), 'MMM d'));\r\n\r\nconst Weather = ({ location, dateRange, name }) => {\r\n\r\n    const [ parameters, setParameters ] = useState(false);\r\n\r\n    const [ data, setData ] = useState(null);\r\n    const [ activeTab, setActiveTab ] = useState('1');\r\n    const [ activateCalc, setActivateCalc ] = useState(false);\r\n\r\n    const toggle = (tab) => {\r\n        if (activeTab !== tab) {\r\n            setActiveTab(tab);\r\n            if (!activateCalc) {\r\n                setActivateCalc(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setParameters(false);\r\n    });\r\n\r\n    useEffect(() => {\r\n        setData(null);\r\n        setActiveTab('1');\r\n        setActivateCalc(false);\r\n    }, [ location.lat, location.lng, dateRange.startDate, dateRange.endDate, name ]);\r\n\r\n    const handleParameters = () => {\r\n        setParameters(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { parameters ? \r\n                <Redirect to={'/parameters?' + \r\n                    `lat=${location.lat}` + '&' +\r\n                    `lng=${location.lng}` + '&' +\r\n                    `name=${name}` + '&' +\r\n                    `startDate=${dateRange.startDate}` + '&' +\r\n                    `endDate=${dateRange.endDate}`}\r\n                /> : null }\r\n            <div className=\"__Weather__\">\r\n                <div className=\"weather-info\">\r\n                    <Nav tabs>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={activeTab === '1' ? 'active' : ''}\r\n                                onClick={() => { toggle('1'); }}\r\n                                disabled={data === null}\r\n                            >\r\n                                Data\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={activeTab === '2' ? 'active' : ''}\r\n                                onClick={() => { toggle('2'); }}\r\n                                disabled={data === null}\r\n                            >\r\n                                Calc\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <h5 className=\"name\" title={name}>{name}</h5>\r\n                    <h5 className=\"date-range\">{displayedDate(dateRange.startDate) + ' - ' + displayedDate(dateRange.endDate)}</h5>\r\n                    <Button color=\"primary\" type=\"button\" onClick={handleParameters} className=\"button\">Parameters</Button>\r\n                </div>\r\n                <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <DataChart location={location} dateRange={dateRange} onDataLoaded={setData} />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <CalcChart weatherData={activateCalc ? data : null} location={location} dateRange={dateRange} reset={parameters} />\r\n                    </TabPane>\r\n                </TabContent>\r\n                {activeTab === '1' ? (\r\n                    <a href={process.env.REACT_APP_WEATHER_REFERENCE_URL} className=\"weather-reference\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by World Weather Online</a>\r\n                ) : null }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nWeather.propTypes = {\r\n    location: PropTypes.shape({\r\n        lat: PropTypes.string.isRequired,\r\n        lng: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    dateRange: PropTypes.shape({\r\n        startDate: PropTypes.string.isRequired, // 'yyyy-MM-dd'\r\n        endDate: PropTypes.string.isRequired    // 'yyyy-MM-dd'\r\n    }).isRequired,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default Weather;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\n\r\nimport './DateRange.css';\r\n\r\nconst DATE_FORMAT = \"MMM d\";\r\n\r\nfunction preventEventPropagation(e) {\r\n    e.stopPropagation();\r\n}\r\n\r\nconst DateRange = ({ startDate, endDate, onChange, popoverOpen, onTogglePopover }) => {\r\n\r\n    const handleSelect = (item) => {\r\n        onChange(item.selection);\r\n    };\r\n\r\n    return (\r\n        <div className=\"__DateRange__\">\r\n            <div className=\"daterange\">\r\n                <h5 className=\"title\">Date range:</h5>\r\n                <div className=\"range\" id=\"daterange\">\r\n                    <h5 className=\"text\">{format(startDate, DATE_FORMAT)} - {format(endDate, DATE_FORMAT)}</h5>\r\n                    <Button outline={!popoverOpen} color=\"secondary\" className=\"change\">{popoverOpen ? \"Done\" : \"Change\"}</Button>\r\n                </div>\r\n            </div>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"daterange\" toggle={onTogglePopover}>\r\n                <PopoverBody onClick={preventEventPropagation}>\r\n                    <DateRangePicker\r\n                        showSelectionPreview={true}\r\n                        moveRangeOnFirstSelection={false}\r\n                        maxDate={new Date()}\r\n                        months={2}\r\n                        direction=\"horizontal\"\r\n                        ranges={[{ startDate, endDate, key: 'selection' }]}\r\n                        staticRanges={[]}\r\n                        onChange={handleSelect}\r\n                    />\r\n                </PopoverBody>\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nDateRange.propTypes = {\r\n    startDate: PropTypes.instanceOf(Date).isRequired,\r\n    endDate: PropTypes.instanceOf(Date).isRequired,\r\n    onChange: PropTypes.func,\r\n    popoverOpen: PropTypes.bool,\r\n    onTogglePopover: PropTypes.func\r\n};\r\n\r\nexport default DateRange;","import React, { useEffect } from 'react';\r\nimport L from 'leaflet';\r\n\r\nimport Geocoder from 'leaflet-control-geocoder';\r\n\r\nimport './Location.css';\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nconst DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n\r\n    iconSize:     [25, 41], // size of the icon\r\n    shadowSize:   [41, 41], // size of the shadow\r\n    iconAnchor:   [13, 41], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [13, 41], // the same for the shadow\r\n    popupAnchor:  [0, -27]  // point from which the popup should open relative to the iconAnchor\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst Location = ({ latlng, query, onChange }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        // onChange callback\r\n        const handleChange = (result) => {\r\n            onChange({ latlng: [result.center.lat, result.center.lng], name: result.name });\r\n        };\r\n\r\n        // console.log(\"----------------------> CREATING MAP\");\r\n\r\n        // create map\r\n        const map = L.map('map', {\r\n            center: latlng,\r\n            zoomControl: false,\r\n            zoom: 13,\r\n            maxZoom: 18,\r\n            layers: [\r\n                L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n                L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r\n                })\r\n            ]\r\n        });\r\n\r\n        map.zoomOut();\r\n\r\n        L.control.zoom({\r\n            position:'topright'\r\n        }).addTo(map);\r\n\r\n        const geocoder = new L.Control.Geocoder.Nominatim();\r\n\r\n        const geocoderControl = L.Control.geocoder({\r\n            collapsed: true,\r\n            position: \"topleft\",\r\n            geocoder: geocoder,\r\n            query: query,\r\n            suggestMinLength: 3,\r\n            placeholder: \"Search query or lat,lng\"\r\n        }).on('markgeocode', function(e) {\r\n\r\n            handleChange(e.geocode);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).on('collapse', function() {\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).addTo(map);\r\n\r\n        geocoderControl._toggle = geocoderControl._geocode;\r\n        \r\n        const searchInput = document.querySelector('.leaflet-control-geocoder-form input');\r\n\r\n        const markGeocode = (result) => {\r\n            if (!result.bbox) {\r\n                result.bbox = L.latLngBounds(result.center, result.center);\r\n            }\r\n            if (!result.html && !result.name) {\r\n                result.html = `[${result.center.lat}, ${result.center.lng}]`;\r\n                result.name = '';\r\n            }\r\n            geocoderControl.markGeocode(result);\r\n\r\n            handleChange(result);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }\r\n\r\n        geocoder.geocode(query, (results) => {\r\n            const result = results.length ? results[0] : { center: L.latLng(latlng) };\r\n            markGeocode(result);\r\n        });\r\n\r\n        map.on('expand', function() {\r\n            searchInput.focus();\r\n        });\r\n\r\n        map.on('dblclick', function(event) {\r\n            const latlng = L.latLng(event.latlng);\r\n            geocoder.reverse(latlng, 1, (results) => {\r\n                searchInput.value = \"\" + latlng.lat + \".\" + latlng.lng;\r\n                let result = results.length ? results[0] : {};\r\n                result = { ...result, center: latlng };\r\n                markGeocode(result);\r\n            });\r\n        });\r\n\r\n        setTimeout(() => {\r\n            geocoderControl._expand();\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"__Location__\">\r\n            <h5 className=\"title\">Location (search or double click on map):</h5>\r\n            <div id=\"map\" className=\"leaflet-map\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nimport DateRange from './parameters/DateRange';\r\nimport Location from './parameters/Location';\r\n\r\nimport './Parameters.css';\r\n\r\nconst Parameters = ({ location, dateRange, name }) => {\r\n\r\n    const startDate = new Date(dateRange.startDate);\r\n    const endDate = new Date(dateRange.endDate);\r\n\r\n    const latlng = [ parseFloat(location.lat), parseFloat(location.lng) ];\r\n\r\n    const [ newDateRange, setNewDateRange ] = useState({\r\n        startDate,\r\n        endDate\r\n    });\r\n    const [ newLocation, setNewLocation ] = useState({\r\n        latlng,\r\n        name\r\n    });\r\n\r\n    const [ state, setState ] = useState({ weather: false, popoverOpen: false });\r\n\r\n    const handleTogglePopover = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState((state) => ({\r\n            weather: false,\r\n            popoverOpen: !state.popoverOpen\r\n        }));\r\n    };\r\n\r\n    const handleClosePopover = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState((state) => ({\r\n            weather: false,\r\n            popoverOpen: false\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            weather: false,\r\n            popoverOpen: false\r\n        });\r\n    }, [ location, dateRange, name ]);\r\n\r\n    const handleWeather = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState({\r\n            weather: true,\r\n            popoverOpen: false\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { state.weather ?\r\n                <Redirect to={'/?' +\r\n                    `lat=${newLocation.latlng[0].toFixed(3)}` + '&' +\r\n                    `lng=${newLocation.latlng[1].toFixed(3)}` + '&' +\r\n                    `name=${newLocation.name}` + '&' +\r\n                    `startDate=${dateString(newDateRange.startDate)}` + '&' +\r\n                    `endDate=${dateString(newDateRange.endDate)}`}\r\n                /> : null }\r\n            <div className=\"__Parameters__\" onClick={handleClosePopover}>\r\n                <div className=\"weather-button\">\r\n                    <DateRange\r\n                        startDate={newDateRange.startDate}\r\n                        endDate={newDateRange.endDate}\r\n                        onChange={setNewDateRange}\r\n                        popoverOpen={state.popoverOpen}\r\n                        onTogglePopover={handleTogglePopover}\r\n                    />\r\n                    <Button color=\"primary\" className=\"button\" onClick={handleWeather}>Charts</Button>\r\n                </div>\r\n                <Location latlng={newLocation.latlng} query={newLocation.name} onChange={setNewLocation} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nParameters.propTypes = {\r\n    location: PropTypes.shape({\r\n        lat: PropTypes.string.isRequired,\r\n        lng: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    dateRange: PropTypes.shape({\r\n        startDate: PropTypes.string.isRequired, // 'yyyy-MM-dd'\r\n        endDate: PropTypes.string.isRequired    // 'yyyy-MM-dd'\r\n    }).isRequired,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default Parameters;","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport { useQueryParams } from './util/query';\r\n\r\nimport Weather from './components/Weather';\r\nimport Parameters from './components/Parameters';\r\n\r\nlet key = 0;\r\n\r\n// workaround for leaflet map init:\r\n// create map when it is first shown with display: block,\r\n// ignore mini-map created initially with diaply: none\r\nfunction getParametersKey(match) {\r\n    if (key) {\r\n        return key;\r\n    }\r\n    if (match) {\r\n        key = 1;\r\n    }\r\n    return key;\r\n}\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Route path=\"/parameters\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch key={getParametersKey(match)} match={match}>\r\n                        <ParametersPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n                <Route path=\"/\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch match={match}>\r\n                        <WeatherPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst ShowOnMatch = ({ match, children }) => (\r\n    <div style={ match ? { display: \"block\" } : { display: \"none\" }}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nconst ParametersPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Parameters {...queryParams} />\r\n    );\r\n};\r\n\r\nconst WeatherPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Weather {...queryParams} />\r\n    );\r\n};\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// leaflet styles\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-control-geocoder/Control.Geocoder.css';\n\n// react-date-range styles\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}