{"version":3,"sources":["util/query.js","chart/configChart.js","chart/manageChart.js","util/date.js","api/fetchWeather.js","components/Loader.js","components/Chart.js","components/Weather.js","components/parameters/DateRange.js","components/parameters/Location.js","components/Parameters.js","Main.js","serviceWorker.js","index.js"],"names":["Params","name","defaultValue","value","URLSearchParams","LONDON_LATLNG","defaultName","query","get","useQueryParams","useLocation","search","location","lat","lng","dateRange","startDate","endDate","FONT","configCircleBullet","bullet","circle","createChild","am4core","width","height","horizontalCenter","verticalCenter","states","create","properties","scale","configWindBullet","showSize","propertyFields","rotation","arrow","strokeWidth","strokeOpacity","direction","fillOpacity","hoverState","configTemperatureAxis","temperatureAxis","title","text","fontWeight","fontFamily","strictMinMax","renderer","minGridDistance","configDateRange","chart","dateAxis","grid","template","disabled","beforeStartDate","subDays","Date","setHours","afterEndDate","addDays","min","getTime","max","labels","tooltipDateFormat","groupData","groupCount","groupIntervals","setAll","timeUnit","count","zoomToDates","configDateAxis","xAxes","getIndex","configChart","leftAxesContainer","layout","rightAxesContainer","preloader","paddingRight","colors","list","push","am4charts","percentAxis","yAxes","configPercentAxis","marginTop","marginBottom","temperatureAxis2","opposite","speedAxis","configSpeedAxis","scrollbarX","series","dataFields","dateX","valueY","tooltipText","startLocation","configMinDayTemperatureSeries","yAxis","configMaxDayTemperatureSeries","minBulletDistance","bullets","configTemperatureSeries","configDewPointSeries","configHumiditySeries","line","stroke","fill","configCloudCoverSeries","configWindSpeedSeries","legend","reverseOrder","markerTemplate","markers","position","fontSize","cursor","resetChart","zoomToValues","bulletsContainer","disposeChildren","dateString","date","format","fetchWeather","dateRanges","start","end","isSameMonth","x","endOfMonth","byMonths","Promise","all","map","fetch","process","then","response","json","responses","reduce","acc","data","weather","error","console","Loader","size","loading","className","sizeUnit","color","theme","certain","window","onbeforeunload","event","dispose","Chart","useState","setLoading","useEffect","tooltipContainer","background","createCertain","events","on","hide","show","weatherData","catch","alert","JSON","stringify","finally","invalidateData","millis","forEach","day","i","hourly","hour","item","DewPointC","Humidity","humidity","cloudcover","WeatherPictogram","WindPictogram","weatherDesc","length","weatherIconUrl","winddirDegree","windspeedKmph","mintempC","maxtempC","tempC","id","displayedDate","str","Weather","parameters","setParameters","to","Button","type","onClick","href","target","rel","DateRange","onChange","popoverOpen","onTogglePopover","outline","Popover","placement","isOpen","toggle","PopoverBody","showSelectionPreview","moveRangeOnFirstSelection","maxDate","months","ranges","key","staticRanges","selection","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","Marker","prototype","options","Location","latlng","handleChange","result","center","zoomControl","zoom","maxZoom","layers","tileLayer","attribution","zoomOut","control","addTo","geocoder","Control","Geocoder","Nominatim","geocoderControl","collapsed","suggestMinLength","placeholder","e","geocode","setTimeout","_expand","_toggle","_geocode","searchInput","document","querySelector","markGeocode","bbox","latLngBounds","html","results","latLng","focus","reverse","Parameters","parseFloat","newDateRange","setNewDateRange","newLocation","setNewLocation","state","setState","toFixed","getParametersKey","match","ShowOnMatch","children","style","display","ParametersPage","queryParams","WeatherPage","Main","basename","path","exact","rest","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.84f9a93d.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\r\n\r\nclass Params extends URLSearchParams {\r\n\r\n    get(name, defaultValue=null) {\r\n        const value = super.get(name);\r\n        return value !== null ? value : defaultValue;\r\n    }\r\n}\r\n\r\n// A custom hook that builds on useLocation to parse\r\n// the query string for you.\r\nexport function useQuery() {\r\n    return new Params(useLocation().search);\r\n}\r\n\r\nexport const LONDON_NAME = 'London';\r\n\r\nexport const START_DATE = '2020-03-01';\r\nexport const END_DATE = '2020-03-31';\r\n\r\nexport const LONDON_LATLNG = {\r\n    lat: '51.533',\r\n    lng: '-0.129'\r\n};\r\n\r\nexport function defaultName(query) {\r\n    return query.get(\"lat\") || query.get(\"lng\") ? \"\" : LONDON_NAME;\r\n}\r\n\r\n\r\nexport function useQueryParams() {\r\n\r\n    const query = useQuery();\r\n\r\n    return {\r\n        location: {\r\n            lat: query.get(\"lat\", LONDON_LATLNG.lat),\r\n            lng: query.get(\"lng\", LONDON_LATLNG.lng)\r\n        },\r\n        dateRange: {\r\n            startDate: query.get(\"startDate\", START_DATE),\r\n            endDate: query.get(\"endDate\", END_DATE)\r\n        },\r\n        name: query.get(\"name\", defaultName(query))\r\n    };\r\n};\r\n\r\nfunction get(p, field) {\r\n    return p && p[field] ? p[field] : null;\r\n}\r\n\r\nexport function equals(p1, p2) {\r\n    return get(p1.location, 'lat') === get(p2.location, 'lat') &&\r\n        get(p1.location, 'lng') === get(p2.location, 'lng') &&\r\n        get(p1.dateRange, 'startDate') === get(p2.dateRange, 'startDate') &&\r\n        get(p1.dateRange, 'endDate') === get(p2.dateRange, 'endDate');\r\n}","\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\n\r\nimport { addDays, subDays } from 'date-fns';\r\n\r\nconst DEGREE = \"\\u00B0\";\r\nconst FONT = \"DejaVu Sans Mono\";\r\n\r\nfunction configCircleBullet(bullet) {\r\n    var circle = bullet.createChild(am4core.Circle);\r\n    circle.width = 5;\r\n    circle.height = 5;\r\n    circle.horizontalCenter = \"middle\";\r\n    circle.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n\r\nfunction configWeatherBullet(bullet) {\r\n    var image = bullet.createChild(am4core.Image);\r\n    image.propertyFields.href = \"weatherIconUrl\";\r\n    // image.tooltipText = \"{desc}\";\r\n\r\n    image.width = 15;\r\n    image.height = 15;\r\n    image.horizontalCenter = \"middle\";\r\n    image.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 3;\r\n}\r\n\r\nfunction configWindBullet(bullet, showSize=true) {\r\n\r\n    // Bind `rotation` property to `angle` field in data\r\n    bullet.propertyFields.rotation = \"winddirDegree\";\r\n\r\n    // Add a triangle to act as am arrow\r\n    var arrow = bullet.createChild(am4core.Triangle);\r\n    arrow.horizontalCenter = \"middle\";\r\n    arrow.verticalCenter = \"bottom\";\r\n    //arrow.stroke = am4core.color(\"#fff\");\r\n    arrow.strokeWidth = 1;\r\n    arrow.strokeOpacity = 0.7;\r\n    arrow.direction = \"top\";\r\n    arrow.scale = 2;\r\n    arrow.width = 5;\r\n    if (showSize) {\r\n        arrow.propertyFields.height = \"windspeedKmph\";\r\n    } else {\r\n        arrow.height = 10;\r\n    }\r\n    arrow.fillOpacity = 0.5;\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n\r\nfunction configDateAxis(dateAxis, startDate, endDate) {\r\n    dateAxis.renderer.grid.template.disabled = true;\r\n    //dateAxis.renderer.labels.template.disabled = true;\r\n\r\n    let beforeStartDate = subDays(new Date(startDate), 1);\r\n    beforeStartDate.setHours(18);\r\n\r\n    let afterEndDate = addDays(new Date(endDate), 1);\r\n    afterEndDate.setHours(6);\r\n\r\n    dateAxis.min = beforeStartDate.getTime();\r\n    dateAxis.max = afterEndDate.getTime();\r\n\r\n    dateAxis.renderer.labels.template.location = 0.5;\r\n\r\n    dateAxis.tooltipDateFormat = \"MM-dd:HH\";\r\n\r\n    dateAxis.groupData = true;\r\n    dateAxis.groupCount = 300;\r\n    dateAxis.groupIntervals.setAll([\r\n        { timeUnit: \"hour\", count: 1 },\r\n        { timeUnit: \"hour\", count: 3 },\r\n        { timeUnit: \"hour\", count: 6 },\r\n        { timeUnit: \"hour\", count: 12 },\r\n        { timeUnit: \"month\", count: 1 },\r\n        { timeUnit: \"year\", count: 1 },\r\n        { timeUnit: \"year\", count: 10 }\r\n    ]);\r\n\r\n    dateAxis.zoomToDates(dateAxis.min, dateAxis.max);\r\n}\r\n\r\nfunction configPictogramAxis(pictogramAxis) {\r\n    pictogramAxis.renderer.grid.template.disabled = true;\r\n    pictogramAxis.renderer.labels.template.disabled = true;\r\n    pictogramAxis.tooltip.disabled = true;\r\n    pictogramAxis.renderer.baseGrid.disabled = true;\r\n    pictogramAxis.renderer.maxHeight = 60;\r\n    pictogramAxis.min = 0;\r\n    pictogramAxis.max = 3;\r\n    pictogramAxis.renderer.minGridDistance = 10;\r\n}\r\n\r\nfunction configSpeedAxis(speedAxis) {\r\n    speedAxis.title.text = \"Speed (km/h)\";\r\n    speedAxis.title.fontWeight = 700;\r\n    speedAxis.title.fontFamily = FONT;\r\n    speedAxis.min = -20;\r\n    speedAxis.max = 120;\r\n    speedAxis.strictMinMax = true;\r\n    speedAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configPercentAxis(percentAxis) {\r\n    percentAxis.title.text = \"Percent (%)\";\r\n    percentAxis.title.fontWeight = 700;\r\n    percentAxis.title.fontFamily = FONT;\r\n    percentAxis.min = -10;\r\n    percentAxis.max = 110;\r\n    percentAxis.strictMinMax = true;\r\n    percentAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configTemperatureAxis(temperatureAxis) {\r\n    temperatureAxis.title.text = \"Temperature (\" + DEGREE + \"C)\";\r\n    temperatureAxis.title.fontWeight = 700;\r\n    temperatureAxis.title.fontFamily = FONT;\r\n    //temperatureAxis.min = -30;\r\n    //temperatureAxis.max = 40;\r\n    temperatureAxis.strictMinMax = true;\r\n    temperatureAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configMinDayTemperatureSeries(series) {\r\n    series.name = \"Min. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"mintempC\";\r\n    series.tooltipText = \"Min.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configMaxDayTemperatureSeries(series) {\r\n    series.name = \"Max. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"maxtempC\";\r\n    series.tooltipText = \"Max.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configTemperatureSeries(series) {\r\n    series.name = \"Temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"tempC\";\r\n    series.tooltipText = \"Temperature: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configDewPointSeries(series) {\r\n    series.name = \"Dew point\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"DewPointC\";\r\n    series.tooltipText = \"DewPoint: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configHumiditySeries(series) {\r\n    series.name = \"Relative humidity\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"Humidity\";\r\n    series.tooltipText = \"Humidity: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configCloudCoverSeries(series) {\r\n    series.name = \"Cloud cover\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"cloudcover\";\r\n    series.tooltipText = \"Clouds: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configWeatherPictogramSeries(series) {\r\n    series.name = \"Weather\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WeatherPictogram\";\r\n    series.dataFields.desc = \"weatherDesc\";\r\n    series.strokeWidth = 0;\r\n    series.minBulletDistance = 15;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWeatherBullet(bullet);\r\n}\r\n\r\nfunction configWindPictogramSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WindPictogram\";\r\n    series.tooltipText = \"Wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    series.strokeWidth = 0;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet, true);\r\n}\r\n\r\nfunction configWindSpeedSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"windspeedKmph\";\r\n    series.tooltipText = \"wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet);\r\n    series.strokeWidth = 1;\r\n}\r\n\r\nexport function createCertain(chart) {\r\n    let certain = chart.tooltipContainer.createChild(am4core.Container);\r\n    certain.background.fill = am4core.color(\"#fff\");\r\n    certain.background.fillOpacity = 1;\r\n    certain.width = am4core.percent(100);\r\n    certain.height = am4core.percent(100);\r\n    return certain;\r\n}\r\n\r\nexport function configDateRange(chart, dateRange) {\r\n    configDateAxis(chart.xAxes.getIndex(0), dateRange.startDate, dateRange.endDate);\r\n}\r\n\r\nconst configChart = (chart) => {\r\n\r\n    chart.leftAxesContainer.layout = \"vertical\";\r\n    chart.rightAxesContainer.layout = \"vertical\";\r\n\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"blue\"),\r\n        am4core.color(\"red\"),\r\n        am4core.color(\"#573fd1\"),\r\n        am4core.color(\"green\"),\r\n        am4core.color(\"#0384fc\"),\r\n        am4core.color(\"#6f9ec9\"),\r\n        am4core.color(\"magenta\"),\r\n        am4core.color(\"white\")\r\n    ];\r\n\r\n    chart.xAxes.push(new am4charts.DateAxis());\r\n/*\r\n    let pictogramAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis);\r\n    pictogramAxis.marginTop = 10;\r\n    pictogramAxis.marginBottom = 10;\r\n*/\r\n    let percentAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPercentAxis(percentAxis);\r\n    percentAxis.marginTop = 10;\r\n    percentAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis);\r\n    temperatureAxis.marginTop = 40;\r\n    temperatureAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis2);\r\n    temperatureAxis2.marginTop = 40;\r\n    temperatureAxis2.marginBottom = 10;\r\n    temperatureAxis2.renderer.opposite = true;\r\n\r\n    let speedAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configSpeedAxis(speedAxis);\r\n    speedAxis.marginTop = 10;\r\n    speedAxis.marginBottom = 10;\r\n    speedAxis.renderer.opposite = true;\r\n/*\r\n    let pictogramAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis2);\r\n    pictogramAxis2.marginTop = 10;\r\n    pictogramAxis2.marginBottom = 10;\r\n    pictogramAxis2.renderer.opposite = true;\r\n*/\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    //let scrollbarY = new am4charts.XYChartScrollbar();\r\n\r\n    // Min. day temperature\r\n    let series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMinDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Max. day temperature\r\n    series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMaxDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Temperature\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n\r\n    // Dew point\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configDewPointSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    //scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Relative humidity\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configHumiditySeries(series);\r\n    series.yAxis = percentAxis;\r\n    //scrollbarX.series.push(series);\r\n    percentAxis.renderer.line.stroke = series.stroke;\r\n    percentAxis.renderer.labels.template.fill = series.stroke;\r\n\r\n    // Cloud cover\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCloudCoverSeries(series);\r\n    series.yAxis = percentAxis;\r\n    //scrollbarX.series.push(series);\r\n    percentAxis.title.fill = series.stroke;\r\n\r\n/*\r\n    // Weather pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWeatherPictogramSeries(series);\r\n    series.yAxis = pictogramAxis;\r\n*/\r\n\r\n    // Wind\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindSpeedSeries(series);\r\n    series.yAxis = speedAxis;\r\n    speedAxis.renderer.line.stroke = series.stroke;\r\n    speedAxis.renderer.labels.template.fill = series.stroke;\r\n    speedAxis.title.fill = series.stroke;\r\n/*\r\n    // Wind pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindPictogramSeries(series);\r\n    series.yAxis = pictogramAxis2;\r\n*/\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    chart.legend.position = \"right\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    chart.scrollbarX = scrollbarX;\r\n    //chart.scrollbarY = scrollbarY;\r\n};\r\n\r\nexport default configChart;\r\n","import { configDateRange } from './configChart';\r\n\r\nexport const resetChart = (chart, dateRange) => {\r\n    configDateRange(chart, dateRange);\r\n\r\n    // workaround to display axis ranges properly\r\n    const percentAxis = chart.yAxes.getIndex(0);\r\n    percentAxis.zoomToValues(percentAxis.min + 1, percentAxis.max - 1);\r\n    const speedAxis = chart.yAxes.getIndex(3);\r\n    speedAxis.zoomToValues(speedAxis.min + 1, speedAxis.max - 1);\r\n\r\n    for (const series of chart.series) {\r\n        series.bulletsContainer.disposeChildren()\r\n    }\r\n};","import { format } from 'date-fns';\r\n\r\nexport function dateString(date) {\r\n    return format(date, 'yyyy-MM-dd');\r\n}","import { isSameMonth, endOfMonth, addDays } from 'date-fns';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nfunction byMonths(dateRange) {\r\n    let dateRanges = [];\r\n    let start = new Date(dateRange.startDate);\r\n    let end = new Date(dateRange.endDate);\r\n\r\n    while (!isSameMonth(start, end)) {\r\n        let x = endOfMonth(start);\r\n        dateRanges.push({ startDate: dateString(start), endDate: dateString(x) });\r\n        start = addDays(x, 1);\r\n    }\r\n    dateRanges.push({ startDate: dateString(start), endDate: dateString(end) });\r\n\r\n    return dateRanges;\r\n}\r\n\r\nfunction fetchWeather(location, dateRange) {\r\n    const dateRanges = byMonths(dateRange);\r\n\r\n    return Promise.all(dateRanges.map((dateRange) => (\r\n        fetch(`${process.env.REACT_APP_WEATHER_URL}?key=${process.env.REACT_APP_WEATHER_KEY}` + '&' +\r\n            `q=${location.lat+','+location.lng}` + '&' +\r\n            `format=json` + '&' +\r\n            `date=${dateRange.startDate}&enddate=${dateRange.endDate}`\r\n        ).then((response) => (response.json()))\r\n    ))).then((responses) => (\r\n        responses.reduce((acc, response) => {\r\n            if (response.data.weather) {\r\n                acc.push(...response.data.weather);\r\n            } else if (response.data.error) {\r\n                const error = response.data.error;\r\n                console.error(error);\r\n                throw error;\r\n            }\r\n            return acc;\r\n        }, [])\r\n    ));\r\n}\r\n\r\nexport default fetchWeather;","import React from 'react';\r\n\r\nimport { DotLoader } from 'react-spinners';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = ({ size, loading }) => {\r\n\r\n    return (\r\n        <div className=\"__Loader__\">\r\n            <DotLoader\r\n                sizeUnit={\"px\"}\r\n                color={'#5ac584'}\r\n                size={size ? size : 200}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport theme from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nimport configChart, { createCertain, configDateRange } from '../chart/configChart';\r\nimport { resetChart } from '../chart/manageChart';\r\n\r\nimport fetchWeather from '../api/fetchWeather';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport './Chart.css';\r\n\r\nam4core.useTheme(theme);\r\n\r\nconst THREE_HOURS = 3 * 3600000;\r\n\r\nfunction formatTime(date, hour) {\r\n    if (hour === \"0\") {\r\n        hour = \"000\";\r\n    }\r\n    return new Date(date + ' ' + hour.substring(0, hour.length-2) + ':00');\r\n}\r\n\r\nlet chart = null;\r\nlet certain = null;\r\n\r\nwindow.onbeforeunload = function(event) {\r\n    if (chart) {\r\n        chart.dispose();\r\n        chart = null;\r\n    }\r\n};\r\n\r\nconst Chart = ({ location, dateRange }) => {\r\n\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!location || !dateRange) {\r\n            return;\r\n        }\r\n\r\n        // console.log('location: [' + location.lat + ', ' + location.lng + '], dateRange: ' + dateRange.startDate + ' - ' + dateRange.endDate);\r\n\r\n        if (chart === null) {\r\n            // console.log('---> CREATING CHART')\r\n            chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n            certain = createCertain(chart);\r\n\r\n            configChart(chart);\r\n            //configDateRange(chart, dateRange);\r\n\r\n            chart.events.on(\"datavalidated\", function () {\r\n                setLoading(false);\r\n                certain.hide();\r\n            });\r\n\r\n        }\r\n\r\n        certain.show();\r\n        setLoading(true);\r\n\r\n        fetchWeather(location, dateRange).then((weather) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetChart(chart, dateRange);\r\n            chart.data = weatherData(weather);\r\n        }).catch((error) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetChart(chart, dateRange);\r\n            chart.data = [];\r\n\r\n            alert(JSON.stringify(error));\r\n        }).finally(() => {\r\n            //setLoading(false);\r\n            chart.invalidateData();\r\n            //certain.hide();\r\n        });\r\n\r\n    }, [ location.lat, location.lng, dateRange.startDate, dateRange.endDate ]);\r\n\r\n    const weatherData = (weather) => {\r\n\r\n        let data = [];\r\n        let millis = 0;\r\n\r\n        weather.forEach((day, i) => {\r\n            if (millis === 0) {\r\n                millis = new Date(day.date).getTime();\r\n            }\r\n\r\n            day.hourly.forEach((hour) => {\r\n                let item = {\r\n                    date: millis,\r\n                    DewPointC: hour.DewPointC,\r\n                    Humidity: hour.humidity,\r\n                    cloudcover: hour.cloudcover,\r\n                    WeatherPictogram: 2,\r\n                    WindPictogram: 1,\r\n                    weatherDesc: hour.weatherDesc.length ? hour.weatherDesc[0].value : '',\r\n                    weatherIconUrl: hour.weatherIconUrl.length ? hour.weatherIconUrl[0].value : null,\r\n                    winddirDegree: hour.winddirDegree,\r\n                    windspeedKmph: hour.windspeedKmph,\r\n                    mintempC: day.mintempC,\r\n                    maxtempC: day.maxtempC,\r\n                    tempC: hour.tempC\r\n                };\r\n                data.push(item);\r\n                millis += THREE_HOURS;\r\n            });\r\n        });\r\n\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <div className=\"__Chart__\">\r\n            <Loader loading={loading} />\r\n            <div id=\"chartdiv\" className=\"chart\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Button } from 'reactstrap';\r\nimport Chart from './Chart';\r\nimport './Weather.css';\r\n\r\nconst displayedDate = (str) => (format(new Date(str), 'MMM d'));\r\n\r\nconst Weather = ({ location, dateRange, name }) => {\r\n\r\n    const [ parameters, setParameters ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setParameters(false);\r\n    }, [ location, dateRange, name ]);\r\n\r\n    const handleParameters = () => {\r\n        setParameters(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { parameters ? \r\n                <Redirect to={'/parameters?' + \r\n                    `lat=${location.lat}` + '&' +\r\n                    `lng=${location.lng}` + '&' +\r\n                    `name=${name}` + '&' +\r\n                    `startDate=${dateRange.startDate}` + '&' +\r\n                    `endDate=${dateRange.endDate}`}\r\n                /> : null }\r\n            <div className=\"__Weather__\">\r\n                <div className=\"weather-info\">\r\n                    <h5 className=\"name\" title={name}>{name}</h5>\r\n                    <h5 className=\"date-range\">{displayedDate(dateRange.startDate) + ' - ' + displayedDate(dateRange.endDate)}</h5>\r\n                    <Button color=\"primary\" type=\"button\" onClick={handleParameters} className=\"button\">Parameters</Button>\r\n                </div>\r\n                <Chart location={location} dateRange={dateRange} />\r\n                <a href={process.env.REACT_APP_WEATHER_REFERENCE_URL} className=\"weather-reference\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by World Weather Online</a>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\n\r\nimport './DateRange.css';\r\n\r\nconst DATE_FORMAT = \"MMM d, yyyy\";\r\n\r\nconst DateRange = ({ startDate, endDate, onChange, popoverOpen, onTogglePopover }) => {\r\n\r\n    const handleSelect = (item) => {\r\n        onChange(item.selection);\r\n    };\r\n\r\n    return (\r\n        <div className=\"__DateRange__\">\r\n            <div className=\"daterange\">\r\n                <h5 className=\"title\">Date range:</h5>\r\n                <div className=\"range\" id=\"popover\">\r\n                    <h5 className=\"text\">{format(startDate, DATE_FORMAT)} - {format(endDate, DATE_FORMAT)}</h5>\r\n                    <Button outline={!popoverOpen} color=\"secondary\" className=\"change\">{popoverOpen ? \"Done\" : \"Change\"}</Button>\r\n                </div>\r\n            </div>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"popover\" toggle={onTogglePopover}>\r\n                <PopoverBody>\r\n                    <DateRangePicker\r\n                        showSelectionPreview={true}\r\n                        moveRangeOnFirstSelection={false}\r\n                        maxDate={new Date()}\r\n                        months={2}\r\n                        direction=\"horizontal\"\r\n                        ranges={[{ startDate, endDate, key: 'selection' }]}\r\n                        staticRanges={[]}\r\n                        onChange={handleSelect}\r\n                    />\r\n                </PopoverBody>\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateRange;","import React, { useEffect } from 'react';\r\nimport L from 'leaflet';\r\n\r\nimport Geocoder from 'leaflet-control-geocoder';\r\n\r\nimport './Location.css';\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nconst DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n\r\n    iconSize:     [25, 41], // size of the icon\r\n    shadowSize:   [41, 41], // size of the shadow\r\n    iconAnchor:   [13, 41], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [13, 41], // the same for the shadow\r\n    popupAnchor:  [0, -27]  // point from which the popup should open relative to the iconAnchor\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst Location = ({ latlng, query, onChange }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        // onChange callback\r\n        const handleChange = (result) => {\r\n            onChange({ latlng: [result.center.lat, result.center.lng], name: result.name });\r\n        };\r\n\r\n        // console.log(\"----------------------> CREATING MAP\");\r\n\r\n        // create map\r\n        const map = L.map('map', {\r\n            center: latlng,\r\n            zoomControl: false,\r\n            zoom: 13,\r\n            maxZoom: 18,\r\n            layers: [\r\n                L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n                L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r\n                })\r\n            ]\r\n        });\r\n\r\n        map.zoomOut();\r\n\r\n        L.control.zoom({\r\n            position:'topright'\r\n        }).addTo(map);\r\n\r\n        const geocoder = new L.Control.Geocoder.Nominatim();\r\n\r\n        const geocoderControl = L.Control.geocoder({\r\n            collapsed: true,\r\n            position: \"topleft\",\r\n            geocoder: geocoder,\r\n            query: query,\r\n            suggestMinLength: 3,\r\n            placeholder: \"Search query or lat,lng\"\r\n        }).on('markgeocode', function(e) {\r\n\r\n            handleChange(e.geocode);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).on('collapse', function() {\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).addTo(map);\r\n\r\n        geocoderControl._toggle = geocoderControl._geocode;\r\n        \r\n        const searchInput = document.querySelector('.leaflet-control-geocoder-form input');\r\n\r\n        const markGeocode = (result) => {\r\n            if (!result.bbox) {\r\n                result.bbox = L.latLngBounds(result.center, result.center);\r\n            }\r\n            if (!result.html && !result.name) {\r\n                result.html = `[${result.center.lat}, ${result.center.lng}]`;\r\n                result.name = '';\r\n            }\r\n            geocoderControl.markGeocode(result);\r\n\r\n            handleChange(result);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }\r\n\r\n        geocoder.geocode(query, (results) => {\r\n            const result = results.length ? results[0] : { center: L.latLng(latlng) };\r\n            markGeocode(result);\r\n        });\r\n\r\n        map.on('expand', function() {\r\n            searchInput.focus();\r\n        });\r\n\r\n        map.on('dblclick', function(event) {\r\n            const latlng = L.latLng(event.latlng);\r\n            geocoder.reverse(latlng, 1, (results) => {\r\n                searchInput.value = \"\" + latlng.lat + \".\" + latlng.lng;\r\n                let result = results.length ? results[0] : {};\r\n                result = { ...result, center: latlng };\r\n                markGeocode(result);\r\n            });\r\n        });\r\n\r\n        setTimeout(() => {\r\n            geocoderControl._expand();\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"__Location__\">\r\n            <h5 className=\"title\">Location (search or double click on map):</h5>\r\n            <div id=\"map\" className=\"leaflet-map\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nimport DateRange from './parameters/DateRange';\r\nimport Location from './parameters/Location';\r\n\r\nimport './Parameters.css';\r\n\r\nconst Parameters = ({ location, dateRange, name }) => {\r\n\r\n    const startDate = new Date(dateRange.startDate);\r\n    const endDate = new Date(dateRange.endDate);\r\n\r\n    const latlng = [ parseFloat(location.lat), parseFloat(location.lng) ];\r\n\r\n    const [ newDateRange, setNewDateRange ] = useState({\r\n        startDate,\r\n        endDate\r\n    });\r\n    const [ newLocation, setNewLocation ] = useState({\r\n        latlng,\r\n        name\r\n    });\r\n\r\n    const [ state, setState ] = useState({ weather: false, popoverOpen: false });\r\n\r\n    const handleTogglePopover = () => {\r\n        setState((state) => ({\r\n            weather: false,\r\n            popoverOpen: !state.popoverOpen\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            weather: false,\r\n            popoverOpen: false\r\n        });\r\n    }, [ location, dateRange, name ]);\r\n\r\n    const handleWeather = () => {\r\n        setState({\r\n            weather: true,\r\n            popoverOpen: false\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { state.weather ?\r\n                <Redirect to={'/?' +\r\n                    `lat=${newLocation.latlng[0].toFixed(3)}` + '&' +\r\n                    `lng=${newLocation.latlng[1].toFixed(3)}` + '&' +\r\n                    `name=${newLocation.name}` + '&' +\r\n                    `startDate=${dateString(newDateRange.startDate)}` + '&' +\r\n                    `endDate=${dateString(newDateRange.endDate)}`}\r\n                /> : null }\r\n            <div className=\"__Parameters__\">\r\n                <div className=\"weather-button\">\r\n                    <DateRange\r\n                        startDate={newDateRange.startDate}\r\n                        endDate={newDateRange.endDate}\r\n                        onChange={setNewDateRange}\r\n                        popoverOpen={state.popoverOpen}\r\n                        onTogglePopover={handleTogglePopover}\r\n                    />\r\n                    <Button color=\"primary\" className=\"button\" onClick={handleWeather}>Show Weather</Button>\r\n                </div>\r\n                <Location latlng={newLocation.latlng} query={newLocation.name} onChange={setNewLocation} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Parameters;","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport { useQueryParams } from './util/query';\r\n\r\nimport Weather from './components/Weather';\r\nimport Parameters from './components/Parameters';\r\n\r\nlet key = 0;\r\n\r\n// workaround for leaflet map init:\r\n// create map when it is first shown with display: block,\r\n// ignore mini-map created initially with diaply: none\r\nfunction getParametersKey(match) {\r\n    if (key) {\r\n        return key;\r\n    }\r\n    if (match) {\r\n        key = 1;\r\n    }\r\n    return key;\r\n}\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Route path=\"/parameters\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch key={getParametersKey(match)} match={match}>\r\n                        <ParametersPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n                <Route path=\"/\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch match={match}>\r\n                        <WeatherPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst ShowOnMatch = ({ match, children }) => (\r\n    <div style={ match ? { display: \"block\" } : { display: \"none\" }}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nconst ParametersPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Parameters {...queryParams} />\r\n    );\r\n};\r\n\r\nconst WeatherPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Weather {...queryParams} />\r\n    );\r\n};\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// leaflet styles\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-control-geocoder/Control.Geocoder.css';\n\n// react-date-range styles\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}