{"version":3,"sources":["util/query.js","chart/configChart.js","chart/manageChart.js","util/date.js","api/fetchWeather.js","components/Loader.js","components/DataChart.js","components/CalcChart.js","components/Weather.js","components/parameters/DateRange.js","components/parameters/Location.js","components/Parameters.js","Main.js","serviceWorker.js","index.js"],"names":["Params","name","defaultValue","value","URLSearchParams","LONDON_LATLNG","defaultName","query","get","useQueryParams","useLocation","search","location","lat","lng","dateRange","startDate","endDate","FONT","configCircleBullet","bullet","circle","createChild","am4core","width","height","horizontalCenter","verticalCenter","states","create","properties","scale","configWindBullet","showSize","propertyFields","rotation","arrow","strokeWidth","strokeOpacity","direction","fillOpacity","hoverState","configTemperatureAxis","temperatureAxis","title","text","fontWeight","fontFamily","strictMinMax","renderer","minGridDistance","createCertain","chart","certain","tooltipContainer","background","fill","configDateRange","dateFormat","dateAxis","grid","template","disabled","beforeStartDate","subDays","Date","setHours","afterEndDate","addDays","min","getTime","max","labels","tooltipDateFormat","groupData","groupCount","groupIntervals","setAll","timeUnit","count","zoomToDates","configDateAxis","xAxes","getIndex","configDataChart","leftAxesContainer","layout","rightAxesContainer","preloader","paddingRight","colors","list","push","am4charts","percentAxis","yAxes","configPercentAxis","marginTop","marginBottom","temperatureAxis2","opposite","speedAxis","configSpeedAxis","scrollbarX","series","dataFields","dateX","valueY","tooltipText","startLocation","configMinDayTemperatureSeries","yAxis","configMaxDayTemperatureSeries","minBulletDistance","bullets","configTemperatureSeries","configDewPointSeries","configHumiditySeries","line","stroke","configCloudCoverSeries","configWindSpeedSeries","configVisibilitySeries","legend","reverseOrder","markerTemplate","markers","position","fontSize","cursor","configCalcChart","calcAxis","configCalcAxis","configCalc1Series","configCalc2Series","resetDataChart","zoomToValues","bulletsContainer","disposeChildren","dateString","date","format","fetchWeather","dateRanges","start","end","isSameMonth","x","endOfMonth","byMonths","Promise","all","map","fetch","process","then","response","json","responses","reduce","acc","data","weather","error","console","Loader","size","loading","className","sizeUnit","color","window","onbeforeunload","event","dispose","DataChart","onDataLoaded","useState","setLoading","useEffect","events","on","hide","show","weatherData","catch","alert","JSON","stringify","finally","invalidateData","millis","forEach","day","i","hourly","hour","item","DewPointC","parseFloat","Humidity","humidity","cloudcover","WeatherPictogram","WindPictogram","weatherDesc","length","weatherIconUrl","winddirDegree","windspeedKmph","mintempC","maxtempC","tempC","visibility","id","calc1","temp","wind","vis","rh","calc2","calcRH","d","t","b","Math","E","pow","fieldAvg","arr","field","a","CalcChart","resetCalcChart","calcData","weatherDay","slice","dewpoint","displayedDate","str","Weather","parameters","setParameters","setData","activeTab","setActiveTab","toggle","tab","reference","url","to","Nav","tabs","NavItem","NavLink","onClick","Button","type","TabContent","TabPane","tabId","href","target","rel","preventEventPropagation","e","stopPropagation","DateRange","onChange","popoverOpen","onTogglePopover","outline","Popover","placement","isOpen","PopoverBody","showSelectionPreview","moveRangeOnFirstSelection","maxDate","months","ranges","key","staticRanges","selection","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","Marker","prototype","options","Location","latlng","handleChange","result","center","zoomControl","zoom","maxZoom","layers","tileLayer","attribution","zoomOut","control","addTo","geocoder","Control","Geocoder","Nominatim","geocoderControl","collapsed","suggestMinLength","placeholder","geocode","setTimeout","_expand","_toggle","_geocode","searchInput","document","querySelector","markGeocode","bbox","latLngBounds","html","results","latLng","focus","reverse","Parameters","newDateRange","setNewDateRange","newLocation","setNewLocation","state","setState","toFixed","getParametersKey","match","ShowOnMatch","children","style","display","ParametersPage","queryParams","WeatherPage","Main","basename","path","exact","rest","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.69aa8823.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\r\n\r\nclass Params extends URLSearchParams {\r\n\r\n    get(name, defaultValue=null) {\r\n        const value = super.get(name);\r\n        return value !== null ? value : defaultValue;\r\n    }\r\n}\r\n\r\n// A custom hook that builds on useLocation to parse\r\n// the query string for you.\r\nexport function useQuery() {\r\n    return new Params(useLocation().search);\r\n}\r\n\r\nexport const LONDON_NAME = 'London';\r\n\r\nexport const START_DATE = '2020-03-01';\r\nexport const END_DATE = '2020-03-31';\r\n\r\nexport const LONDON_LATLNG = {\r\n    lat: '51.533',\r\n    lng: '-0.129'\r\n};\r\n\r\nexport function defaultName(query) {\r\n    return query.get(\"lat\") || query.get(\"lng\") ? \"\" : LONDON_NAME;\r\n}\r\n\r\n\r\nexport function useQueryParams() {\r\n\r\n    const query = useQuery();\r\n\r\n    return {\r\n        location: {\r\n            lat: query.get(\"lat\", LONDON_LATLNG.lat),\r\n            lng: query.get(\"lng\", LONDON_LATLNG.lng)\r\n        },\r\n        dateRange: {\r\n            startDate: query.get(\"startDate\", START_DATE),\r\n            endDate: query.get(\"endDate\", END_DATE)\r\n        },\r\n        name: query.get(\"name\", defaultName(query))\r\n    };\r\n};\r\n\r\nfunction get(p, field) {\r\n    return p && p[field] ? p[field] : null;\r\n}\r\n\r\nexport function equals(p1, p2) {\r\n    return get(p1.location, 'lat') === get(p2.location, 'lat') &&\r\n        get(p1.location, 'lng') === get(p2.location, 'lng') &&\r\n        get(p1.dateRange, 'startDate') === get(p2.dateRange, 'startDate') &&\r\n        get(p1.dateRange, 'endDate') === get(p2.dateRange, 'endDate');\r\n}","\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\n\r\nimport { addDays, subDays } from 'date-fns';\r\n\r\nconst DEGREE = \"\\u00B0\";\r\nconst FONT = \"DejaVu Sans Mono\";\r\n\r\nfunction configCircleBullet(bullet) {\r\n    var circle = bullet.createChild(am4core.Circle);\r\n    circle.width = 5;\r\n    circle.height = 5;\r\n    circle.horizontalCenter = \"middle\";\r\n    circle.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n\r\nfunction configWeatherBullet(bullet) {\r\n    var image = bullet.createChild(am4core.Image);\r\n    image.propertyFields.href = \"weatherIconUrl\";\r\n    // image.tooltipText = \"{desc}\";\r\n\r\n    image.width = 15;\r\n    image.height = 15;\r\n    image.horizontalCenter = \"middle\";\r\n    image.verticalCenter = \"middle\";\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 3;\r\n}\r\n\r\nfunction configWindBullet(bullet, showSize=true) {\r\n\r\n    // Bind `rotation` property to `angle` field in data\r\n    bullet.propertyFields.rotation = \"winddirDegree\";\r\n\r\n    // Add a triangle to act as am arrow\r\n    var arrow = bullet.createChild(am4core.Triangle);\r\n    arrow.horizontalCenter = \"middle\";\r\n    arrow.verticalCenter = \"bottom\";\r\n    //arrow.stroke = am4core.color(\"#fff\");\r\n    arrow.strokeWidth = 1;\r\n    arrow.strokeOpacity = 0.7;\r\n    arrow.direction = \"top\";\r\n    arrow.scale = 2;\r\n    arrow.width = 5;\r\n    if (showSize) {\r\n        arrow.propertyFields.height = \"windspeedKmph\";\r\n    } else {\r\n        arrow.height = 10;\r\n    }\r\n    arrow.fillOpacity = 0.5;\r\n\r\n    var hoverState = bullet.states.create(\"hover\");\r\n    hoverState.properties.scale = 2;\r\n}\r\n\r\nfunction configDateAxis(dateAxis, startDate, endDate, dateFormat) {\r\n    dateAxis.renderer.grid.template.disabled = true;\r\n    //dateAxis.renderer.labels.template.disabled = true;\r\n\r\n    let beforeStartDate = subDays(new Date(startDate), 1);\r\n    beforeStartDate.setHours(18);\r\n\r\n    let afterEndDate = addDays(new Date(endDate), 1);\r\n    afterEndDate.setHours(6);\r\n\r\n    dateAxis.min = beforeStartDate.getTime();\r\n    dateAxis.max = afterEndDate.getTime();\r\n\r\n    dateAxis.renderer.labels.template.location = 0.5;\r\n\r\n    dateAxis.tooltipDateFormat = dateFormat;\r\n\r\n    dateAxis.groupData = true;\r\n    dateAxis.groupCount = 300;\r\n    dateAxis.groupIntervals.setAll([\r\n        { timeUnit: \"hour\", count: 1 },\r\n        { timeUnit: \"hour\", count: 3 },\r\n        { timeUnit: \"hour\", count: 6 },\r\n        { timeUnit: \"hour\", count: 12 },\r\n        { timeUnit: \"month\", count: 1 },\r\n        { timeUnit: \"year\", count: 1 },\r\n        { timeUnit: \"year\", count: 10 }\r\n    ]);\r\n\r\n    dateAxis.zoomToDates(dateAxis.min, dateAxis.max);\r\n}\r\n\r\nfunction configPictogramAxis(pictogramAxis) {\r\n    pictogramAxis.renderer.grid.template.disabled = true;\r\n    pictogramAxis.renderer.labels.template.disabled = true;\r\n    pictogramAxis.tooltip.disabled = true;\r\n    pictogramAxis.renderer.baseGrid.disabled = true;\r\n    pictogramAxis.renderer.maxHeight = 60;\r\n    pictogramAxis.min = 0;\r\n    pictogramAxis.max = 3;\r\n    pictogramAxis.renderer.minGridDistance = 10;\r\n}\r\n\r\nfunction configSpeedAxis(speedAxis) {\r\n    speedAxis.title.text = \"Speed (km/h), Dist (km)\";\r\n    speedAxis.title.fontWeight = 700;\r\n    speedAxis.title.fontFamily = FONT\r\n    speedAxis.min = -20;\r\n    speedAxis.max = 120;\r\n    speedAxis.strictMinMax = true;\r\n    speedAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configPercentAxis(percentAxis) {\r\n    percentAxis.title.text = \"Percent (%)\";\r\n    percentAxis.title.fontWeight = 700;\r\n    percentAxis.title.fontFamily = FONT;\r\n    percentAxis.min = -10;\r\n    percentAxis.max = 110;\r\n    percentAxis.strictMinMax = true;\r\n    percentAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configTemperatureAxis(temperatureAxis) {\r\n    temperatureAxis.title.text = \"Temperature (\" + DEGREE + \"C)\";\r\n    temperatureAxis.title.fontWeight = 700;\r\n    temperatureAxis.title.fontFamily = FONT;\r\n    //temperatureAxis.min = -30;\r\n    //temperatureAxis.max = 40;\r\n    temperatureAxis.strictMinMax = true;\r\n    temperatureAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configMinDayTemperatureSeries(series) {\r\n    series.name = \"Min. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"mintempC\";\r\n    series.tooltipText = \"Min.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configMaxDayTemperatureSeries(series) {\r\n    series.name = \"Max. day temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"maxtempC\";\r\n    series.tooltipText = \"Max.: {valueY.value} \" + DEGREE + \"C\";\r\n    series.startLocation = 0.5;\r\n    //let bullet = series.bullets.push(new am4charts.Bullet());\r\n    //configTemperatureBullet(bullet);\r\n}\r\n\r\nfunction configTemperatureSeries(series) {\r\n    series.name = \"Temperature\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"tempC\";\r\n    series.tooltipText = \"Temperature: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configDewPointSeries(series) {\r\n    series.name = \"Dew point\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"DewPointC\";\r\n    series.tooltipText = \"DewPoint: {valueY.value} \" + DEGREE + \"C\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configHumiditySeries(series) {\r\n    series.name = \"Relative humidity\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"Humidity\";\r\n    series.tooltipText = \"Humidity: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configCloudCoverSeries(series) {\r\n    series.name = \"Cloud cover\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"cloudcover\";\r\n    series.tooltipText = \"Clouds: {valueY.value} %\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configWeatherPictogramSeries(series) {\r\n    series.name = \"Weather\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WeatherPictogram\";\r\n    series.dataFields.desc = \"weatherDesc\";\r\n    series.strokeWidth = 0;\r\n    series.minBulletDistance = 15;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWeatherBullet(bullet);\r\n}\r\n\r\nfunction configWindPictogramSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"WindPictogram\";\r\n    series.tooltipText = \"Wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    series.strokeWidth = 0;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet, true);\r\n}\r\n\r\nfunction configWindSpeedSeries(series) {\r\n    series.name = \"Wind\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"windspeedKmph\";\r\n    series.tooltipText = \"Wind ({winddirDegree}\" + DEGREE + \"): {windspeedKmph} km/h\";\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configWindBullet(bullet);\r\n    series.strokeWidth = 1;\r\n}\r\n\r\nfunction configVisibilitySeries(series) {\r\n    series.name = \"Visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"visibility\";\r\n    series.tooltipText = \"Visibility: {visibility} km\";\r\n    series.strokeWidth = 3;\r\n    series.strokeOpacity = 0.8;\r\n/*\r\n    series.minBulletDistance = 5;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n*/\r\n}\r\n\r\nexport function createCertain(chart) {\r\n    let certain = chart.tooltipContainer.createChild(am4core.Container);\r\n    certain.background.fill = am4core.color(\"#fff\");\r\n    certain.background.fillOpacity = 1;\r\n    certain.width = am4core.percent(100);\r\n    certain.height = am4core.percent(100);\r\n    return certain;\r\n}\r\n\r\nexport function configDateRange(chart, dateRange, dateFormat) {\r\n    configDateAxis(chart.xAxes.getIndex(0), dateRange.startDate, dateRange.endDate, dateFormat);\r\n}\r\n\r\nexport const configDataChart = (chart) => {\r\n\r\n    chart.leftAxesContainer.layout = \"vertical\";\r\n    chart.rightAxesContainer.layout = \"vertical\";\r\n\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"blue\"),\r\n        am4core.color(\"red\"),\r\n        am4core.color(\"#573fd1\"),\r\n        am4core.color(\"green\"),\r\n        am4core.color(\"#0384fc\"),\r\n        am4core.color(\"#6f9ec9\"),\r\n        am4core.color(\"magenta\"),\r\n        am4core.color(\"#6a086e\")\r\n    ];\r\n\r\n    chart.xAxes.push(new am4charts.DateAxis());\r\n/*\r\n    let pictogramAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis);\r\n    pictogramAxis.marginTop = 10;\r\n    pictogramAxis.marginBottom = 10;\r\n*/\r\n    let percentAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPercentAxis(percentAxis);\r\n    percentAxis.marginTop = 10;\r\n    percentAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis);\r\n    temperatureAxis.marginTop = 40;\r\n    temperatureAxis.marginBottom = 10;\r\n\r\n    let temperatureAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configTemperatureAxis(temperatureAxis2);\r\n    temperatureAxis2.marginTop = 40;\r\n    temperatureAxis2.marginBottom = 10;\r\n    temperatureAxis2.renderer.opposite = true;\r\n\r\n    let speedAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configSpeedAxis(speedAxis);\r\n    speedAxis.marginTop = 10;\r\n    speedAxis.marginBottom = 10;\r\n    speedAxis.renderer.opposite = true;\r\n/*\r\n    let pictogramAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configPictogramAxis(pictogramAxis2);\r\n    pictogramAxis2.marginTop = 10;\r\n    pictogramAxis2.marginBottom = 10;\r\n    pictogramAxis2.renderer.opposite = true;\r\n*/\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    //let scrollbarY = new am4charts.XYChartScrollbar();\r\n\r\n    // Min. day temperature\r\n    let series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMinDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Max. day temperature\r\n    series = chart.series.push(new am4charts.StepLineSeries());\r\n    configMaxDayTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Temperature\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configTemperatureSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    scrollbarX.series.push(series);\r\n\r\n    // Dew point\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configDewPointSeries(series);\r\n    series.yAxis = temperatureAxis;\r\n    //scrollbarX.series.push(series);\r\n    //scrollbarY.series.push(series);\r\n\r\n    // Relative humidity\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configHumiditySeries(series);\r\n    series.yAxis = percentAxis;\r\n    //scrollbarX.series.push(series);\r\n    percentAxis.renderer.line.stroke = series.stroke;\r\n    percentAxis.renderer.labels.template.fill = series.stroke;\r\n\r\n    // Cloud cover\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCloudCoverSeries(series);\r\n    series.yAxis = percentAxis;\r\n    //scrollbarX.series.push(series);\r\n    percentAxis.title.fill = series.stroke;\r\n\r\n/*\r\n    // Weather pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWeatherPictogramSeries(series);\r\n    series.yAxis = pictogramAxis;\r\n*/\r\n\r\n    // Wind\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindSpeedSeries(series);\r\n    series.yAxis = speedAxis;\r\n    speedAxis.renderer.line.stroke = series.stroke;\r\n    speedAxis.renderer.labels.template.fill = series.stroke;\r\n/*\r\n    // Wind pictogram\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configWindPictogramSeries(series);\r\n    series.yAxis = pictogramAxis2;\r\n*/\r\n\r\n    // Visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configVisibilitySeries(series);\r\n    series.yAxis = speedAxis;\r\n    speedAxis.title.fill = series.stroke;\r\n\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    chart.legend.position = \"right\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    chart.scrollbarX = scrollbarX;\r\n    //chart.scrollbarY = scrollbarY;\r\n};\r\n\r\nfunction configCalcAxis(calcAxis) {\r\n    calcAxis.title.text = \"Calc\";\r\n    calcAxis.title.fontWeight = 700;\r\n    calcAxis.title.fontFamily = FONT;\r\n    //calcAxis.min = -10;\r\n    //calcAxis.max = 110;\r\n    //calcAxis.strictMinMax = true;\r\n    calcAxis.renderer.minGridDistance = 30;\r\n}\r\n\r\nfunction configCalc1Series(series) {\r\n    series.name = \"Calc with visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"calc1\";\r\n    series.tooltipText = \"Calc: {calc1}\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 15;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nfunction configCalc2Series(series) {\r\n    series.name = \"Calc without visibility\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"calc2\";\r\n    series.tooltipText = \"Calc: {calc2}\";\r\n    series.strokeWidth = 3;\r\n\r\n    series.minBulletDistance = 15;\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    configCircleBullet(bullet);\r\n}\r\n\r\nexport const configCalcChart = (chart) => {\r\n\r\n    chart.preloader.disabled = true;\r\n\r\n    chart.paddingRight = 30;\r\n\r\n    chart.colors.list = [\r\n        am4core.color(\"#6a086e\"),\r\n        am4core.color(\"#d13104\")\r\n    ];\r\n\r\n    chart.xAxes.push(new am4charts.DateAxis());\r\n\r\n    let calcAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    configCalcAxis(calcAxis);\r\n    calcAxis.marginTop = 10;\r\n    calcAxis.marginBottom = 10;\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n\r\n    // Calc with visibility\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc1Series(series);\r\n    series.yAxis = calcAxis;\r\n    scrollbarX.series.push(series);\r\n\r\n    // Calc without visibility\r\n    series = chart.series.push(new am4charts.LineSeries());\r\n    configCalc2Series(series);\r\n    series.yAxis = calcAxis;\r\n    scrollbarX.series.push(series);\r\n\r\n    chart.legend = new am4charts.Legend();\r\n    chart.legend.reverseOrder = true;\r\n    var markerTemplate = chart.legend.markers.template;\r\n    markerTemplate.width = 40;\r\n    markerTemplate.height = 40;\r\n    //chart.legend.position = \"right\";\r\n    chart.legend.labels.template.fontSize = 12;\r\n    chart.legend.labels.template.fontWeight = 500;\r\n    chart.legend.labels.template.fontFamily = FONT;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    chart.scrollbarX = scrollbarX;\r\n};","import { configDateRange } from './configChart';\r\n\r\nexport const resetDataChart = (chart, dateRange) => {\r\n    configDateRange(chart, dateRange, \"MM-dd:HH\");\r\n\r\n    // workaround to display axis ranges properly\r\n    const percentAxis = chart.yAxes.getIndex(0);\r\n    percentAxis.zoomToValues(percentAxis.min + 1, percentAxis.max - 1);\r\n    const speedAxis = chart.yAxes.getIndex(3);\r\n    speedAxis.zoomToValues(speedAxis.min + 1, speedAxis.max - 1);\r\n\r\n    for (const series of chart.series) {\r\n        series.bulletsContainer.disposeChildren()\r\n    }\r\n};\r\n\r\nexport const resetCalcChart = (chart, dateRange) => {\r\n    configDateRange(chart, dateRange, \"MM-dd\");\r\n\r\n    for (const series of chart.series) {\r\n        series.bulletsContainer.disposeChildren()\r\n    }\r\n};","import { format } from 'date-fns';\r\n\r\nexport function dateString(date) {\r\n    return format(date, 'yyyy-MM-dd');\r\n}","import { isSameMonth, endOfMonth, addDays } from 'date-fns';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nfunction byMonths(dateRange) {\r\n    let dateRanges = [];\r\n    let start = new Date(dateRange.startDate);\r\n    let end = new Date(dateRange.endDate);\r\n\r\n    while (!isSameMonth(start, end)) {\r\n        let x = endOfMonth(start);\r\n        dateRanges.push({ startDate: dateString(start), endDate: dateString(x) });\r\n        start = addDays(x, 1);\r\n    }\r\n    dateRanges.push({ startDate: dateString(start), endDate: dateString(end) });\r\n\r\n    return dateRanges;\r\n}\r\n\r\nfunction fetchWeather(location, dateRange) {\r\n    const dateRanges = byMonths(dateRange);\r\n\r\n    return Promise.all(dateRanges.map((dateRange) => (\r\n        fetch(`${process.env.REACT_APP_WEATHER_URL}?key=${process.env.REACT_APP_WEATHER_KEY}` + '&' +\r\n            `q=${location.lat+','+location.lng}` + '&' +\r\n            `format=json` + '&' +\r\n            `date=${dateRange.startDate}&enddate=${dateRange.endDate}`\r\n        ).then((response) => (response.json()))\r\n    ))).then((responses) => (\r\n        responses.reduce((acc, response) => {\r\n            if (response.data.weather) {\r\n                acc.push(...response.data.weather);\r\n            } else if (response.data.error) {\r\n                const error = response.data.error;\r\n                console.error(error);\r\n                throw error;\r\n            }\r\n            return acc;\r\n        }, [])\r\n    ));\r\n}\r\n\r\nexport default fetchWeather;","import React from 'react';\r\n\r\nimport { DotLoader } from 'react-spinners';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = ({ size, loading }) => {\r\n\r\n    return (\r\n        <div className=\"__Loader__\">\r\n            <DotLoader\r\n                sizeUnit={\"px\"}\r\n                color={'#5ac584'}\r\n                size={size ? size : 200}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport theme from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nimport { configDataChart, createCertain } from '../chart/configChart';\r\nimport { resetDataChart } from '../chart/manageChart';\r\n\r\nimport fetchWeather from '../api/fetchWeather';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport './Chart.css';\r\n\r\n//am4core.useTheme(theme);\r\n\r\nconst THREE_HOURS = 3 * 3600000;\r\n\r\nfunction formatTime(date, hour) {\r\n    if (hour === \"0\") {\r\n        hour = \"000\";\r\n    }\r\n    return new Date(date + ' ' + hour.substring(0, hour.length-2) + ':00');\r\n}\r\n\r\nlet chart = null;\r\nlet certain = null;\r\n\r\nwindow.onbeforeunload = function(event) {\r\n    if (chart) {\r\n        chart.dispose();\r\n        chart = null;\r\n    }\r\n};\r\n\r\nconst DataChart = ({ location, dateRange, onDataLoaded }) => {\r\n\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!location || !dateRange) {\r\n            return;\r\n        }\r\n\r\n        // console.log('location: [' + location.lat + ', ' + location.lng + '], dateRange: ' + dateRange.startDate + ' - ' + dateRange.endDate);\r\n\r\n        if (chart === null) {\r\n            // console.log('---> CREATING CHART')\r\n            chart = am4core.create(\"dataChart\", am4charts.XYChart);\r\n            certain = createCertain(chart);\r\n\r\n            configDataChart(chart);\r\n\r\n            chart.events.on(\"datavalidated\", function () {\r\n                setLoading(false);\r\n                certain.hide();\r\n                onDataLoaded(chart.data);\r\n            });\r\n        }\r\n\r\n        certain.show();\r\n        setLoading(true);\r\n\r\n        fetchWeather(location, dateRange).then((weather) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetDataChart(chart, dateRange, true);\r\n            chart.data = weatherData(weather);\r\n        }).catch((error) => {\r\n            if (chart === null) {\r\n                return;\r\n            }\r\n            resetDataChart(chart, dateRange, true);\r\n            chart.data = [];\r\n\r\n            alert(JSON.stringify(error));\r\n        }).finally(() => {\r\n            //setLoading(false);\r\n            chart.invalidateData();\r\n            //certain.hide();\r\n        });\r\n\r\n    }, [ location.lat, location.lng, dateRange.startDate, dateRange.endDate ]);\r\n\r\n    const weatherData = (weather) => {\r\n\r\n        let data = [];\r\n        let millis = 0;\r\n\r\n        weather.forEach((day, i) => {\r\n            if (millis === 0) {\r\n                millis = new Date(day.date).getTime();\r\n            }\r\n\r\n            day.hourly.forEach((hour) => {\r\n                let item = {\r\n                    date: millis,\r\n                    DewPointC: parseFloat(hour.DewPointC),\r\n                    Humidity: parseFloat(hour.humidity),\r\n                    cloudcover: parseFloat(hour.cloudcover),\r\n                    WeatherPictogram: 2,\r\n                    WindPictogram: 1,\r\n                    weatherDesc: hour.weatherDesc.length ? hour.weatherDesc[0].value : '',\r\n                    weatherIconUrl: hour.weatherIconUrl.length ? hour.weatherIconUrl[0].value : null,\r\n                    winddirDegree: parseFloat(hour.winddirDegree),\r\n                    windspeedKmph: parseFloat(hour.windspeedKmph),\r\n                    mintempC: parseFloat(day.mintempC),\r\n                    maxtempC: parseFloat(day.maxtempC),\r\n                    tempC: parseFloat(hour.tempC),\r\n                    visibility: parseFloat(hour.visibility)\r\n                };\r\n                data.push(item);\r\n                millis += THREE_HOURS;\r\n            });\r\n        });\r\n\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <div className=\"__Chart__\">\r\n            <Loader loading={loading} />\r\n            <div id=\"dataChart\" className=\"chart\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataChart;","import React, { useState, useEffect } from 'react';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport theme from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nimport { configCalcChart, createCertain } from '../chart/configChart';\r\nimport { resetCalcChart } from '../chart/manageChart';\r\n\r\nimport Loader from './Loader';\r\n\r\nimport './Chart.css';\r\n\r\n//am4core.useTheme(theme);\r\n\r\n// https://www.medrxiv.org/content/10.1101/2020.03.16.20037168v1.full.pdf\r\n\r\nconst MILE = 1.60934;\r\n\r\nlet chart = null;\r\nlet certain = null;\r\n\r\nwindow.onbeforeunload = function(event) {\r\n    if (chart) {\r\n        chart.dispose();\r\n        chart = null;\r\n    }\r\n};\r\n\r\n// case counts with visibility =\r\n// - 0.1366*T^2 + 3.6046*T\r\n// - 0.3883*SPD^2 + 20.2509*SPD\r\n// + 5929.9403/(VSB+19.1774)\r\n// - 505.8484*RH^3 + 316.6004*RH^2 + 189.1295*RH\r\n// - 422.3774\r\n// (SPD: wind speed in miles/h, VSB: visibility in miles, RH: rel humidity in %, T: temperature in Celsius)\r\nconst calc1 = ({ temp, wind, vis, rh }) => (\r\n    - 0.1366 * temp * temp + 3.6046 * temp\r\n    - 0.3883 * wind * wind + 20.2509 * wind\r\n    + 5929.9403 / (vis + 19.1774)\r\n    - 505.8484 * rh * rh * rh + 316.6004 * rh * rh + 189.1295 * rh\r\n    - 422.3774\r\n);\r\n\r\n// case counts without visibility =\r\n// - 0.18*T^2 + 3.1628*T\r\n// - 0.4385*SPD^2 + 21.1420*SPD\r\n// - 228.4231*RH^3 - 391.9561*RH^2 + 880.7190*RH\r\n// - 401.8395\r\n// (SPD: wind speed in miles/h, RH: rel humidity in %, T: temperature in Celsius)\r\nconst calc2 = ({ temp, wind, rh }) => (\r\n    - 0.18 * temp * temp + 3.1628 * temp\r\n    - 0.4385 * wind * wind + 21.1420 * wind\r\n    - 228.4231 * rh * rh * rh - 391.9561 * rh * rh + 880.7190 * rh\r\n    - 401.8395\r\n);\r\n\r\nconst calcRH = (d, t) => {\r\n    const b = t < 0 ? Math.E : 10;\r\n    return Math.pow(b, (7.5 * d) / (237.3 + d) - (7.5 * t) / (237.3 + t));\r\n};\r\n\r\nconst avg = (arr) => (arr.reduce((a, b) => (a + b), 0) / arr.length);\r\n\r\nconst fieldAvg = (arr, field) => (arr.reduce((a, b) => (a + b[field]), 0) / arr.length);\r\n\r\nconst CalcChart = ({ weatherData, dateRange }) => {\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!weatherData) {\r\n            return;\r\n        }\r\n\r\n        // console.log('location: [' + location.lat + ', ' + location.lng + '], dateRange: ' + dateRange.startDate + ' - ' + dateRange.endDate);\r\n\r\n        if (chart === null) {\r\n            // console.log('---> CREATING CHART')\r\n            chart = am4core.create(\"calcChart\", am4charts.XYChart);\r\n            certain = createCertain(chart);\r\n\r\n            configCalcChart(chart);\r\n\r\n            chart.events.on(\"datavalidated\", function () {\r\n                setLoading(false);\r\n                certain.hide();\r\n            });\r\n        }\r\n\r\n        certain.show();\r\n        setLoading(true);\r\n\r\n        resetCalcChart(chart, dateRange);\r\n        chart.data = calcData();\r\n        chart.invalidateData();\r\n\r\n    }, [ weatherData ]);\r\n\r\n    const calcData = () => {\r\n\r\n        let data = [];\r\n\r\n        for (let i=0; i < weatherData.length; i += 8) {\r\n            const weatherDay = weatherData.slice(i, i + 8);\r\n            const day = {\r\n                temp: fieldAvg(weatherDay, 'tempC'),\r\n                wind: fieldAvg(weatherDay, 'windspeedKmph') / MILE,\r\n                vis: fieldAvg(weatherDay, 'visibility') / MILE,\r\n                dewpoint: fieldAvg(weatherDay, 'DewPointC'),\r\n                humidity: fieldAvg(weatherDay, 'Humidity') / 100\r\n            };\r\n            day.rh = calcRH(day.dewpoint, day.temp);\r\n            // console.log(day);\r\n            let item = {\r\n                date: weatherDay[0].date,\r\n                calc1: calc1(day),\r\n                calc2: calc2(day)\r\n            }\r\n            data.push(item)\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <div className=\"__Chart__\">\r\n            <Loader loading={loading} />\r\n            <div id=\"calcChart\" className=\"chart\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalcChart;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nimport DataChart from './DataChart';\r\nimport CalcChart from './CalcChart';\r\nimport './Weather.css';\r\n\r\nconst displayedDate = (str) => (format(new Date(str), 'MMM d'));\r\n\r\nconst Weather = ({ location, dateRange, name }) => {\r\n\r\n    const [ parameters, setParameters ] = useState(false);\r\n\r\n    const [ data, setData ] = useState(null);\r\n    const [ activeTab, setActiveTab ] = useState('1');\r\n\r\n    const toggle = (tab) => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setParameters(false);\r\n    });\r\n\r\n    useEffect(() => {\r\n        setData(null);\r\n        setActiveTab('1');\r\n    }, [ location.lat, location.lng, dateRange.startDate, dateRange.endDate, name ]);\r\n\r\n    const handleParameters = () => {\r\n        setParameters(true);\r\n    }\r\n\r\n    const reference = activeTab === '1' ? {\r\n        url: process.env.REACT_APP_WEATHER_REFERENCE_URL,\r\n        text: 'Powered by World Weather Online'\r\n    } : {\r\n        url: process.env.REACT_APP_METEO_ARTICLE_URL,\r\n        text: 'Reference: Roles of meteorological conditions in COVID-19 transmission on a worldwide scale'\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { parameters ? \r\n                <Redirect to={'/parameters?' + \r\n                    `lat=${location.lat}` + '&' +\r\n                    `lng=${location.lng}` + '&' +\r\n                    `name=${name}` + '&' +\r\n                    `startDate=${dateRange.startDate}` + '&' +\r\n                    `endDate=${dateRange.endDate}`}\r\n                /> : null }\r\n            <div className=\"__Weather__\">\r\n                <div className=\"weather-info\">\r\n                    <Nav tabs>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={activeTab === '1' ? 'active' : ''}\r\n                                onClick={() => { toggle('1'); }}\r\n                                disabled={data === null}\r\n                            >\r\n                                Data\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={activeTab === '2' ? 'active' : ''}\r\n                                onClick={() => { toggle('2'); }}\r\n                                disabled={data === null}\r\n                            >\r\n                                Calc\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <h5 className=\"name\" title={name}>{name}</h5>\r\n                    <h5 className=\"date-range\">{displayedDate(dateRange.startDate) + ' - ' + displayedDate(dateRange.endDate)}</h5>\r\n                    <Button color=\"primary\" type=\"button\" onClick={handleParameters} className=\"button\">Parameters</Button>\r\n                </div>\r\n                <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <DataChart location={location} dateRange={dateRange} onDataLoaded={setData} />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <CalcChart weatherData={data} dateRange={dateRange} />\r\n                    </TabPane>\r\n                </TabContent>\r\n            <a href={reference.url} className=\"weather-reference\" target=\"_blank\" rel=\"noopener noreferrer\">{reference.text}</a>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\n\r\nimport './DateRange.css';\r\n\r\nconst DATE_FORMAT = \"MMM d\";\r\n\r\nfunction preventEventPropagation(e) {\r\n    e.stopPropagation();\r\n}\r\n\r\nconst DateRange = ({ startDate, endDate, onChange, popoverOpen, onTogglePopover }) => {\r\n\r\n    const handleSelect = (item) => {\r\n        onChange(item.selection);\r\n    };\r\n\r\n    return (\r\n        <div className=\"__DateRange__\">\r\n            <div className=\"daterange\">\r\n                <h5 className=\"title\">Date range:</h5>\r\n                <div className=\"range\" id=\"popover\">\r\n                    <h5 className=\"text\">{format(startDate, DATE_FORMAT)} - {format(endDate, DATE_FORMAT)}</h5>\r\n                    <Button outline={!popoverOpen} color=\"secondary\" className=\"change\">{popoverOpen ? \"Done\" : \"Change\"}</Button>\r\n                </div>\r\n            </div>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"popover\" toggle={onTogglePopover}>\r\n                <PopoverBody onClick={preventEventPropagation}>\r\n                    <DateRangePicker\r\n                        showSelectionPreview={true}\r\n                        moveRangeOnFirstSelection={false}\r\n                        maxDate={new Date()}\r\n                        months={2}\r\n                        direction=\"horizontal\"\r\n                        ranges={[{ startDate, endDate, key: 'selection' }]}\r\n                        staticRanges={[]}\r\n                        onChange={handleSelect}\r\n                    />\r\n                </PopoverBody>\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateRange;","import React, { useEffect } from 'react';\r\nimport L from 'leaflet';\r\n\r\nimport Geocoder from 'leaflet-control-geocoder';\r\n\r\nimport './Location.css';\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nconst DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n\r\n    iconSize:     [25, 41], // size of the icon\r\n    shadowSize:   [41, 41], // size of the shadow\r\n    iconAnchor:   [13, 41], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [13, 41], // the same for the shadow\r\n    popupAnchor:  [0, -27]  // point from which the popup should open relative to the iconAnchor\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst Location = ({ latlng, query, onChange }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        // onChange callback\r\n        const handleChange = (result) => {\r\n            onChange({ latlng: [result.center.lat, result.center.lng], name: result.name });\r\n        };\r\n\r\n        // console.log(\"----------------------> CREATING MAP\");\r\n\r\n        // create map\r\n        const map = L.map('map', {\r\n            center: latlng,\r\n            zoomControl: false,\r\n            zoom: 13,\r\n            maxZoom: 18,\r\n            layers: [\r\n                L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n                L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\r\n                    zoom: 13,\r\n                    maxZoom: 18,\r\n                    attribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r\n                })\r\n            ]\r\n        });\r\n\r\n        map.zoomOut();\r\n\r\n        L.control.zoom({\r\n            position:'topright'\r\n        }).addTo(map);\r\n\r\n        const geocoder = new L.Control.Geocoder.Nominatim();\r\n\r\n        const geocoderControl = L.Control.geocoder({\r\n            collapsed: true,\r\n            position: \"topleft\",\r\n            geocoder: geocoder,\r\n            query: query,\r\n            suggestMinLength: 3,\r\n            placeholder: \"Search query or lat,lng\"\r\n        }).on('markgeocode', function(e) {\r\n\r\n            handleChange(e.geocode);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).on('collapse', function() {\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }).addTo(map);\r\n\r\n        geocoderControl._toggle = geocoderControl._geocode;\r\n        \r\n        const searchInput = document.querySelector('.leaflet-control-geocoder-form input');\r\n\r\n        const markGeocode = (result) => {\r\n            if (!result.bbox) {\r\n                result.bbox = L.latLngBounds(result.center, result.center);\r\n            }\r\n            if (!result.html && !result.name) {\r\n                result.html = `[${result.center.lat}, ${result.center.lng}]`;\r\n                result.name = '';\r\n            }\r\n            geocoderControl.markGeocode(result);\r\n\r\n            handleChange(result);\r\n\r\n            setTimeout(() => {\r\n                geocoderControl._expand();\r\n            }, 500);\r\n        }\r\n\r\n        geocoder.geocode(query, (results) => {\r\n            const result = results.length ? results[0] : { center: L.latLng(latlng) };\r\n            markGeocode(result);\r\n        });\r\n\r\n        map.on('expand', function() {\r\n            searchInput.focus();\r\n        });\r\n\r\n        map.on('dblclick', function(event) {\r\n            const latlng = L.latLng(event.latlng);\r\n            geocoder.reverse(latlng, 1, (results) => {\r\n                searchInput.value = \"\" + latlng.lat + \".\" + latlng.lng;\r\n                let result = results.length ? results[0] : {};\r\n                result = { ...result, center: latlng };\r\n                markGeocode(result);\r\n            });\r\n        });\r\n\r\n        setTimeout(() => {\r\n            geocoderControl._expand();\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"__Location__\">\r\n            <h5 className=\"title\">Location (search or double click on map):</h5>\r\n            <div id=\"map\" className=\"leaflet-map\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nimport { dateString } from '../util/date';\r\n\r\nimport DateRange from './parameters/DateRange';\r\nimport Location from './parameters/Location';\r\n\r\nimport './Parameters.css';\r\n\r\nconst Parameters = ({ location, dateRange, name }) => {\r\n\r\n    const startDate = new Date(dateRange.startDate);\r\n    const endDate = new Date(dateRange.endDate);\r\n\r\n    const latlng = [ parseFloat(location.lat), parseFloat(location.lng) ];\r\n\r\n    const [ newDateRange, setNewDateRange ] = useState({\r\n        startDate,\r\n        endDate\r\n    });\r\n    const [ newLocation, setNewLocation ] = useState({\r\n        latlng,\r\n        name\r\n    });\r\n\r\n    const [ state, setState ] = useState({ weather: false, popoverOpen: false });\r\n\r\n    const handleTogglePopover = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState((state) => ({\r\n            weather: false,\r\n            popoverOpen: !state.popoverOpen\r\n        }));\r\n    };\r\n\r\n    const handleClosePopover = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState((state) => ({\r\n            weather: false,\r\n            popoverOpen: false\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            weather: false,\r\n            popoverOpen: false\r\n        });\r\n    }, [ location, dateRange, name ]);\r\n\r\n    const handleWeather = (e) => {\r\n        e.stopPropagation();\r\n\r\n        setState({\r\n            weather: true,\r\n            popoverOpen: false\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { state.weather ?\r\n                <Redirect to={'/?' +\r\n                    `lat=${newLocation.latlng[0].toFixed(3)}` + '&' +\r\n                    `lng=${newLocation.latlng[1].toFixed(3)}` + '&' +\r\n                    `name=${newLocation.name}` + '&' +\r\n                    `startDate=${dateString(newDateRange.startDate)}` + '&' +\r\n                    `endDate=${dateString(newDateRange.endDate)}`}\r\n                /> : null }\r\n            <div className=\"__Parameters__\" onClick={handleClosePopover}>\r\n                <div className=\"weather-button\">\r\n                    <DateRange\r\n                        startDate={newDateRange.startDate}\r\n                        endDate={newDateRange.endDate}\r\n                        onChange={setNewDateRange}\r\n                        popoverOpen={state.popoverOpen}\r\n                        onTogglePopover={handleTogglePopover}\r\n                    />\r\n                    <Button color=\"primary\" className=\"button\" onClick={handleWeather}>Show Weather</Button>\r\n                </div>\r\n                <Location latlng={newLocation.latlng} query={newLocation.name} onChange={setNewLocation} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Parameters;","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport { useQueryParams } from './util/query';\r\n\r\nimport Weather from './components/Weather';\r\nimport Parameters from './components/Parameters';\r\n\r\nlet key = 0;\r\n\r\n// workaround for leaflet map init:\r\n// create map when it is first shown with display: block,\r\n// ignore mini-map created initially with diaply: none\r\nfunction getParametersKey(match) {\r\n    if (key) {\r\n        return key;\r\n    }\r\n    if (match) {\r\n        key = 1;\r\n    }\r\n    return key;\r\n}\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <div>\r\n                <Route path=\"/parameters\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch key={getParametersKey(match)} match={match}>\r\n                        <ParametersPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n                <Route path=\"/\" exact children={({ match, ...rest }) => (\r\n                    <ShowOnMatch match={match}>\r\n                        <WeatherPage {...rest} />\r\n                    </ShowOnMatch>\r\n                )} />\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst ShowOnMatch = ({ match, children }) => (\r\n    <div style={ match ? { display: \"block\" } : { display: \"none\" }}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nconst ParametersPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Parameters {...queryParams} />\r\n    );\r\n};\r\n\r\nconst WeatherPage = () => {\r\n    const queryParams = useQueryParams();\r\n\r\n    return (\r\n        <Weather {...queryParams} />\r\n    );\r\n};\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// leaflet styles\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-control-geocoder/Control.Geocoder.css';\n\n// react-date-range styles\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}